{
  "version": 3,
  "sources": ["../../@vaadin/field-base/src/input-field-mixin.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { InputControlMixin } from './input-control-mixin.js';\n\n/**\n * A mixin to provide logic for vaadin-text-field and related components.\n *\n * @polymerMixin\n * @mixes InputControlMixin\n */\nexport const InputFieldMixin = (superclass) =>\n  class InputFieldMixinClass extends InputControlMixin(superclass) {\n    static get properties() {\n      return {\n        /**\n         * Whether the value of the control can be automatically completed by the browser.\n         * List of available options at:\n         * https://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete\n         */\n        autocomplete: {\n          type: String,\n        },\n\n        /**\n         * This is a property supported by Safari that is used to control whether\n         * autocorrection should be enabled when the user is entering/editing the text.\n         * Possible values are:\n         * on: Enable autocorrection.\n         * off: Disable autocorrection.\n         */\n        autocorrect: {\n          type: String,\n        },\n\n        /**\n         * This is a property supported by Safari and Chrome that is used to control whether\n         * autocapitalization should be enabled when the user is entering/editing the text.\n         * Possible values are:\n         * characters: Characters capitalization.\n         * words: Words capitalization.\n         * sentences: Sentences capitalization.\n         * none: No capitalization.\n         */\n        autocapitalize: {\n          type: String,\n        },\n      };\n    }\n\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'autocapitalize', 'autocomplete', 'autocorrect'];\n    }\n\n    /**\n     * @param {HTMLElement} input\n     * @protected\n     * @override\n     */\n    _inputElementChanged(input) {\n      super._inputElementChanged(input);\n\n      if (input) {\n        // Discard value set on the custom slotted input.\n        if (input.value && input.value !== this.value) {\n          console.warn(`Please define value on the <${this.localName}> component!`);\n          input.value = '';\n        }\n\n        if (this.value) {\n          input.value = this.value;\n        }\n      }\n    }\n\n    // Workaround for https://github.com/Polymer/polymer/issues/5259\n    get __data() {\n      return this.__dataValue || {};\n    }\n\n    set __data(value) {\n      this.__dataValue = value;\n    }\n\n    /**\n     * Override an event listener from `FocusMixin`.\n     * @param {boolean} focused\n     * @protected\n     * @override\n     */\n    _setFocused(focused) {\n      super._setFocused(focused);\n\n      if (!focused) {\n        this.validate();\n      }\n    }\n\n    /**\n     * Override an event listener from `InputMixin`\n     * to mark as valid after user started typing.\n     * @param {Event} event\n     * @protected\n     * @override\n     */\n    _onInput(event) {\n      super._onInput(event);\n\n      if (this.invalid) {\n        this.validate();\n      }\n    }\n\n    /**\n     * Override an observer from `InputMixin` to validate the field\n     * when a new value is set programmatically.\n     *\n     * @param {string | undefined} newValue\n     * @param {string | undefined} oldValue\n     * @protected\n     * @override\n     */\n    _valueChanged(newValue, oldValue) {\n      super._valueChanged(newValue, oldValue);\n\n      if (oldValue === undefined) {\n        return;\n      }\n\n      if (this.invalid) {\n        this.validate();\n      }\n    }\n  };\n"],
  "mappings": ";;;;;AAaO,IAAM,kBAAkB,CAAC,eAC9B,MAAM,6BAA6B,kBAAkB,UAAU,EAAE;AAAA,EAC/D,WAAW,aAAa;AACtB,WAAO;AAAA,MAML,cAAc;AAAA,QACZ,MAAM;AAAA,MACR;AAAA,MASA,aAAa;AAAA,QACX,MAAM;AAAA,MACR;AAAA,MAWA,gBAAgB;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EAEA,WAAW,gBAAgB;AACzB,WAAO,CAAC,GAAG,MAAM,eAAe,kBAAkB,gBAAgB,aAAa;AAAA,EACjF;AAAA,EAOA,qBAAqB,OAAO;AAC1B,UAAM,qBAAqB,KAAK;AAEhC,QAAI,OAAO;AAET,UAAI,MAAM,SAAS,MAAM,UAAU,KAAK,OAAO;AAC7C,gBAAQ,KAAK,+BAA+B,KAAK,uBAAuB;AACxE,cAAM,QAAQ;AAAA,MAChB;AAEA,UAAI,KAAK,OAAO;AACd,cAAM,QAAQ,KAAK;AAAA,MACrB;AAAA,IACF;AAAA,EACF;AAAA,EAGA,IAAI,SAAS;AACX,WAAO,KAAK,eAAe,CAAC;AAAA,EAC9B;AAAA,EAEA,IAAI,OAAO,OAAO;AAChB,SAAK,cAAc;AAAA,EACrB;AAAA,EAQA,YAAY,SAAS;AACnB,UAAM,YAAY,OAAO;AAEzB,QAAI,CAAC,SAAS;AACZ,WAAK,SAAS;AAAA,IAChB;AAAA,EACF;AAAA,EASA,SAAS,OAAO;AACd,UAAM,SAAS,KAAK;AAEpB,QAAI,KAAK,SAAS;AAChB,WAAK,SAAS;AAAA,IAChB;AAAA,EACF;AAAA,EAWA,cAAc,UAAU,UAAU;AAChC,UAAM,cAAc,UAAU,QAAQ;AAEtC,QAAI,aAAa,QAAW;AAC1B;AAAA,IACF;AAEA,QAAI,KAAK,SAAS;AAChB,WAAK,SAAS;AAAA,IAChB;AAAA,EACF;AACF;",
  "names": []
}
