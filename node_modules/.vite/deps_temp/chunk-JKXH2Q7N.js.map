{
  "version": 3,
  "sources": ["../../@vaadin/date-picker/theme/lumo/vaadin-date-picker-overlay-styles.js", "../../@vaadin/date-picker/theme/lumo/vaadin-date-picker-overlay-content-styles.js", "../../@vaadin/date-picker/theme/lumo/vaadin-month-calendar-styles.js", "../../@vaadin/date-picker/theme/lumo/vaadin-date-picker-styles.js", "../../@vaadin/date-picker/src/vaadin-date-picker-styles.js", "../../@vaadin/date-picker/src/vaadin-date-picker-overlay.js", "../../@vaadin/date-picker/src/vaadin-date-picker-helper.js", "../../@vaadin/date-picker/src/vaadin-month-calendar.js", "../../@vaadin/date-picker/src/vaadin-infinite-scroller.js", "../../@vaadin/date-picker/src/vaadin-date-picker-overlay-content.js", "../../@vaadin/date-picker/src/vaadin-date-picker-mixin.js", "../../@vaadin/date-picker/src/vaadin-date-picker.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay.js';\nimport { menuOverlay } from '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst datePickerOverlay = css`\n  [part='overlay'] {\n    /*\n  Width:\n      date cell widths\n    + month calendar side padding\n    + year scroller width\n  */\n    /* prettier-ignore */\n    width:\n    calc(\n        var(--lumo-size-m) * 7\n      + var(--lumo-space-xs) * 2\n      + 57px\n    );\n    height: 100%;\n    max-height: calc(var(--lumo-size-m) * 14);\n    overflow: hidden;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  [part='overlay'] {\n    flex-direction: column;\n  }\n\n  [part='content'] {\n    padding: 0;\n    height: 100%;\n    overflow: hidden;\n    -webkit-mask-image: none;\n    mask-image: none;\n  }\n\n  :host([top-aligned]) [part~='overlay'] {\n    margin-top: var(--lumo-space-xs);\n  }\n\n  :host([bottom-aligned]) [part~='overlay'] {\n    margin-bottom: var(--lumo-space-xs);\n  }\n\n  @media (max-width: 420px), (max-height: 420px) {\n    [part='overlay'] {\n      width: 100vw;\n      height: 70vh;\n      max-height: 70vh;\n    }\n  }\n`;\n\nregisterStyles('vaadin-date-picker-overlay', [menuOverlay, datePickerOverlay], {\n  moduleId: 'lumo-date-picker-overlay',\n});\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/button/theme/lumo/vaadin-button.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-date-picker-overlay-content',\n  css`\n    :host {\n      position: relative;\n      /* Background for the year scroller, placed here as we are using a mask image on the actual years part */\n      background-image: linear-gradient(var(--lumo-shade-5pct), var(--lumo-shade-5pct));\n      background-size: 57px 100%;\n      background-position: top right;\n      background-repeat: no-repeat;\n      cursor: default;\n    }\n\n    /* Month scroller */\n\n    [part='months'] {\n      /* Month calendar height:\n              header height + margin-bottom\n            + weekdays height + margin-bottom\n            + date cell heights\n            + small margin between month calendars\n        */\n      /* prettier-ignore */\n      --vaadin-infinite-scroller-item-height:\n          calc(\n              var(--lumo-font-size-l) + var(--lumo-space-m)\n            + var(--lumo-font-size-xs) + var(--lumo-space-s)\n            + var(--lumo-size-m) * 6\n            + var(--lumo-space-s)\n          );\n      --vaadin-infinite-scroller-buffer-offset: 10%;\n      -webkit-mask-image: linear-gradient(transparent, #000 10%, #000 85%, transparent);\n      mask-image: linear-gradient(transparent, #000 10%, #000 85%, transparent);\n      position: relative;\n      margin-right: 57px;\n    }\n\n    /* Year scroller */\n    [part='years'] {\n      /* TODO get rid of fixed magic number */\n      --vaadin-infinite-scroller-buffer-width: 97px;\n      width: 57px;\n      height: auto;\n      top: 0;\n      bottom: 0;\n      font-size: var(--lumo-font-size-s);\n      box-shadow: inset 2px 0 4px 0 var(--lumo-shade-5pct);\n      -webkit-mask-image: linear-gradient(transparent, #000 35%, #000 65%, transparent);\n      mask-image: linear-gradient(transparent, #000 35%, #000 65%, transparent);\n      cursor: var(--lumo-clickable-cursor);\n    }\n\n    [part='year-number']:not([current]),\n    [part='year-separator'] {\n      opacity: 0.7;\n      transition: 0.2s opacity;\n    }\n\n    [part='years']:hover [part='year-number'],\n    [part='years']:hover [part='year-separator'] {\n      opacity: 1;\n    }\n\n    /* TODO unsupported selector */\n    #scrollers {\n      position: static;\n      display: block;\n    }\n\n    /* TODO unsupported selector, should fix this in vaadin-date-picker that it adapts to the\n       * width of the year scroller */\n    #scrollers[desktop] [part='months'] {\n      right: auto;\n    }\n\n    /* Year scroller position indicator */\n    [part='years']::before {\n      border: none;\n      width: 1em;\n      height: 1em;\n      background-color: var(--lumo-base-color);\n      background-image: linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\n      transform: translate(-75%, -50%) rotate(45deg);\n      border-top-right-radius: var(--lumo-border-radius-s);\n      box-shadow: 2px -2px 6px 0 var(--lumo-shade-5pct);\n      z-index: 1;\n    }\n\n    [part='year-number'],\n    [part='year-separator'] {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50%;\n      transform: translateY(-50%);\n    }\n\n    [part='years'] [part='year-separator']::after {\n      color: var(--lumo-disabled-text-color);\n      content: '\u2022';\n    }\n\n    /* Current year */\n\n    [part='years'] [part='year-number'][current] {\n      color: var(--lumo-primary-text-color);\n    }\n\n    /* Toolbar (footer) */\n\n    [part='toolbar'] {\n      padding: var(--lumo-space-s);\n      border-bottom-left-radius: var(--lumo-border-radius-l);\n      margin-right: 57px;\n    }\n\n    /* Today and Cancel buttons */\n\n    [part='toolbar'] [part\\$='button'] {\n      margin: 0;\n    }\n\n    /* Narrow viewport mode (fullscreen) */\n\n    :host([fullscreen]) [part='toolbar'] {\n      order: -1;\n      background-color: var(--lumo-base-color);\n    }\n\n    :host([fullscreen]) [part='overlay-header'] {\n      order: -2;\n      height: var(--lumo-size-m);\n      padding: var(--lumo-space-s);\n      position: absolute;\n      left: 0;\n      right: 0;\n      justify-content: center;\n    }\n\n    :host([fullscreen]) [part='toggle-button'],\n    :host([fullscreen]) [part='clear-button'],\n    [part='overlay-header'] [part='label'] {\n      display: none;\n    }\n\n    /* Very narrow screen (year scroller initially hidden) */\n\n    [part='years-toggle-button'] {\n      display: flex;\n      align-items: center;\n      height: var(--lumo-size-s);\n      padding: 0 0.5em;\n      border-radius: var(--lumo-border-radius-m);\n      z-index: 3;\n      color: var(--lumo-primary-text-color);\n      font-weight: 500;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    :host([years-visible]) [part='years-toggle-button'] {\n      background-color: var(--lumo-primary-color);\n      color: var(--lumo-primary-contrast-color);\n    }\n\n    /* TODO magic number (same as used for media-query in vaadin-date-picker-overlay-content) */\n    @media screen and (max-width: 374px) {\n      :host {\n        background-image: none;\n      }\n\n      [part='years'] {\n        background-color: var(--lumo-shade-5pct);\n      }\n\n      [part='toolbar'],\n      [part='months'] {\n        margin-right: 0;\n      }\n\n      /* TODO make date-picker adapt to the width of the years part */\n      [part='years'] {\n        --vaadin-infinite-scroller-buffer-width: 90px;\n        width: 50px;\n      }\n\n      :host([years-visible]) [part='months'] {\n        padding-left: 50px;\n      }\n    }\n  `,\n  { moduleId: 'lumo-date-picker-overlay-content' },\n);\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-month-calendar',\n  css`\n    :host {\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      -webkit-tap-highlight-color: transparent;\n      user-select: none;\n      font-size: var(--lumo-font-size-m);\n      color: var(--lumo-body-text-color);\n      text-align: center;\n      padding: 0 var(--lumo-space-xs);\n    }\n\n    /* Month header */\n\n    [part='month-header'] {\n      color: var(--lumo-header-text-color);\n      font-size: var(--lumo-font-size-l);\n      line-height: 1;\n      font-weight: 500;\n      margin-bottom: var(--lumo-space-m);\n    }\n\n    /* Week days and numbers */\n\n    [part='weekdays'],\n    [part='weekday'],\n    [part='week-number'] {\n      font-size: var(--lumo-font-size-xxs);\n      line-height: 1;\n      color: var(--lumo-secondary-text-color);\n    }\n\n    [part='weekdays'] {\n      margin-bottom: var(--lumo-space-s);\n    }\n\n    [part='weekday']:empty,\n    [part='week-number'] {\n      width: var(--lumo-size-xs);\n    }\n\n    /* Date and week number cells */\n\n    [part='date'],\n    [part='week-number'] {\n      box-sizing: border-box;\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      height: var(--lumo-size-m);\n      position: relative;\n    }\n\n    [part='date'] {\n      transition: color 0.1s;\n    }\n\n    [part='date']:not(:empty) {\n      cursor: var(--lumo-clickable-cursor);\n    }\n\n    :host([week-numbers]) [part='weekday']:not(:empty),\n    :host([week-numbers]) [part='date'] {\n      width: calc((100% - var(--lumo-size-xs)) / 7);\n    }\n\n    /* Today date */\n\n    [part='date'][today] {\n      color: var(--lumo-primary-text-color);\n    }\n\n    /* Focused date */\n\n    [part='date']::before {\n      content: '';\n      position: absolute;\n      z-index: -1;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      min-width: 2em;\n      min-height: 2em;\n      width: 80%;\n      height: 80%;\n      max-height: 100%;\n      max-width: 100%;\n      border-radius: var(--lumo-border-radius-m);\n    }\n\n    [part='date'][focused]::before {\n      box-shadow: 0 0 0 1px var(--lumo-base-color), 0 0 0 3px var(--lumo-primary-color-50pct);\n    }\n\n    :host(:not([focused])) [part='date'][focused]::before {\n      animation: vaadin-date-picker-month-calendar-focus-date 1.4s infinite;\n    }\n\n    @keyframes vaadin-date-picker-month-calendar-focus-date {\n      50% {\n        box-shadow: 0 0 0 1px var(--lumo-base-color), 0 0 0 3px transparent;\n      }\n    }\n\n    [part='date']:not(:empty):not([disabled]):not([selected]):hover::before {\n      background-color: var(--lumo-primary-color-10pct);\n    }\n\n    [part='date'][selected] {\n      color: var(--lumo-primary-contrast-color);\n    }\n\n    [part='date'][selected]::before {\n      background-color: var(--lumo-primary-color);\n    }\n\n    [part='date'][disabled] {\n      color: var(--lumo-disabled-text-color);\n    }\n\n    @media (pointer: coarse) {\n      [part='date']:hover:not([selected])::before,\n      [part='date'][focused]:not([selected])::before {\n        display: none;\n      }\n\n      [part='date']:not(:empty):not([disabled]):active::before {\n        display: block;\n      }\n\n      [part='date'][selected]::before {\n        box-shadow: none;\n      }\n    }\n\n    /* Disabled */\n\n    :host([disabled]) * {\n      color: var(--lumo-disabled-text-color) !important;\n    }\n  `,\n  { moduleId: 'lumo-month-calendar' },\n);\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    @keyframes vaadin-date-picker-month-calendar-focus-date {\n      50% {\n        box-shadow: 0 0 0 2px transparent;\n      }\n    }\n  </style>\n`;\n\ndocument.head.appendChild(template.content);\n", "import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport { inputFieldShared } from '@vaadin/vaadin-lumo-styles/mixins/input-field-shared.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst datePicker = css`\n  :host {\n    outline: none;\n  }\n\n  [part='toggle-button']::before {\n    content: var(--lumo-icons-calendar);\n  }\n\n  [part='clear-button']::before {\n    content: var(--lumo-icons-cross);\n  }\n\n  @media (max-width: 420px), (max-height: 420px) {\n    [part='overlay-content'] {\n      height: 70vh;\n    }\n  }\n\n  :host([dir='rtl']) [part='input-field'] ::slotted(input) {\n    --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n  }\n\n  :host([dir='rtl']) [part='input-field'] ::slotted(input:placeholder-shown) {\n    --_lumo-text-field-overflow-mask-image: none;\n  }\n`;\n\nregisterStyles('vaadin-date-picker', [inputFieldShared, datePicker], { moduleId: 'lumo-date-picker' });\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport const datePickerStyles = css`\n  :host([dir='rtl']) [part='input-field'] {\n    direction: ltr;\n  }\n\n  :host([dir='rtl']) [part='input-field'] ::slotted(input)::placeholder {\n    direction: rtl;\n    text-align: left;\n  }\n`;\n\nexport const datePickerOverlayStyles = css`\n  [part='overlay'] {\n    display: flex;\n    flex: auto;\n  }\n\n  [part~='content'] {\n    flex: auto;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { DisableUpgradeMixin } from '@polymer/polymer/lib/mixins/disable-upgrade-mixin.js';\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { PositionMixin } from '@vaadin/vaadin-overlay/src/vaadin-overlay-position-mixin.js';\nimport { registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { datePickerOverlayStyles } from './vaadin-date-picker-styles.js';\n\nregisterStyles('vaadin-date-picker-overlay', datePickerOverlayStyles, {\n  moduleId: 'vaadin-date-picker-overlay-styles',\n});\n\nlet memoizedTemplate;\n\n/**\n * An element used internally by `<vaadin-date-picker>`. Not intended to be used separately.\n *\n * @extends OverlayElement\n * @private\n */\nclass DatePickerOverlay extends DisableUpgradeMixin(PositionMixin(OverlayElement)) {\n  static get is() {\n    return 'vaadin-date-picker-overlay';\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n      memoizedTemplate.content.querySelector('[part~=\"overlay\"]').removeAttribute('tabindex');\n    }\n\n    return memoizedTemplate;\n  }\n}\n\ncustomElements.define(DatePickerOverlay.is, DatePickerOverlay);\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Get ISO 8601 week number for the given date.\n *\n * @param {!Date} Date object\n * @return {number} Week number\n */\nexport function getISOWeekNumber(date) {\n  // Ported from Vaadin Framework method com.vaadin.client.DateTimeService.getISOWeekNumber(date)\n  let dayOfWeek = date.getDay(); // 0 == sunday\n\n  // ISO 8601 use weeks that start on monday so we use\n  // mon=1,tue=2,...sun=7;\n  if (dayOfWeek === 0) {\n    dayOfWeek = 7;\n  }\n  // Find nearest thursday (defines the week in ISO 8601). The week number\n  // for the nearest thursday is the same as for the target date.\n  const nearestThursdayDiff = 4 - dayOfWeek; // 4 is thursday\n  const nearestThursday = new Date(date.getTime() + nearestThursdayDiff * 24 * 3600 * 1000);\n\n  const firstOfJanuary = new Date(0, 0);\n  firstOfJanuary.setFullYear(nearestThursday.getFullYear());\n\n  const timeDiff = nearestThursday.getTime() - firstOfJanuary.getTime();\n\n  // Rounding the result, as the division doesn't result in an integer\n  // when the given date is inside daylight saving time period.\n  const daysSinceFirstOfJanuary = Math.round(timeDiff / (24 * 3600 * 1000));\n\n  return Math.floor(daysSinceFirstOfJanuary / 7 + 1);\n}\n\n/**\n * Check if two dates are equal.\n *\n * @param {Date} date1\n * @param {Date} date2\n * @return {boolean} True if the given date objects refer to the same date\n */\nexport function dateEquals(date1, date2) {\n  return (\n    date1 instanceof Date &&\n    date2 instanceof Date &&\n    date1.getFullYear() === date2.getFullYear() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getDate() === date2.getDate()\n  );\n}\n\n/**\n * Check if the given date is in the range of allowed dates.\n *\n * @param {!Date} date The date to check\n * @param {Date} min Range start\n * @param {Date} max Range end\n * @return {boolean} True if the date is in the range\n */\nexport function dateAllowed(date, min, max) {\n  return (!min || date >= min) && (!max || date <= max);\n}\n\n/**\n * Get closest date from array of dates.\n *\n * @param {!Date} date The date to compare dates with\n * @param {!Array<!Date>} dates Array of date objects\n * @return {!Date} Closest date\n */\nexport function getClosestDate(date, dates) {\n  return dates\n    .filter((date) => date !== undefined)\n    .reduce((closestDate, candidate) => {\n      if (!candidate) {\n        return closestDate;\n      }\n\n      if (!closestDate) {\n        return candidate;\n      }\n\n      const candidateDiff = Math.abs(date.getTime() - candidate.getTime());\n      const closestDateDiff = Math.abs(closestDate.getTime() - date.getTime());\n      return candidateDiff < closestDateDiff ? candidate : closestDate;\n    });\n}\n\n/**\n * Extracts the basic component parts of a date (day, month and year)\n * to the expected format.\n * @param {!Date} date\n * @return {{day: number, month: number, year: number}}\n */\nexport function extractDateParts(date) {\n  return {\n    day: date.getDate(),\n    month: date.getMonth(),\n    year: date.getFullYear(),\n  };\n}\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@polymer/polymer/lib/elements/dom-repeat.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { FocusMixin } from '@vaadin/component-base/src/focus-mixin.js';\nimport { addListener } from '@vaadin/component-base/src/gestures.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { dateAllowed, dateEquals, getISOWeekNumber } from './vaadin-date-picker-helper.js';\n\n/**\n * @extends HTMLElement\n * @private\n */\nclass MonthCalendar extends FocusMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        #monthGrid {\n          width: 100%;\n          border-collapse: collapse;\n        }\n\n        #days-container tr,\n        #weekdays-container tr {\n          display: flex;\n        }\n\n        [part='date'] {\n          outline: none;\n        }\n\n        [part='week-number'][hidden],\n        [part='weekday'][hidden] {\n          display: none;\n        }\n\n        [part='weekday'],\n        [part='date'] {\n          width: calc(100% / 7);\n          padding: 0;\n          font-weight: normal;\n        }\n\n        [part='weekday']:empty,\n        [part='week-number'] {\n          width: 12.5%;\n          flex-shrink: 0;\n          padding: 0;\n        }\n\n        :host([week-numbers]) [part='weekday']:not(:empty),\n        :host([week-numbers]) [part='date'] {\n          width: 12.5%;\n        }\n      </style>\n\n      <div part=\"month-header\" id=\"month-header\" aria-hidden=\"true\">[[_getTitle(month, i18n.monthNames)]]</div>\n      <table\n        id=\"monthGrid\"\n        role=\"grid\"\n        aria-labelledby=\"month-header\"\n        on-touchend=\"_preventDefault\"\n        on-touchstart=\"_onMonthGridTouchStart\"\n      >\n        <thead id=\"weekdays-container\">\n          <tr role=\"row\" part=\"weekdays\">\n            <th\n              part=\"weekday\"\n              aria-hidden=\"true\"\n              hidden$=\"[[!_showWeekSeparator(showWeekNumbers, i18n.firstDayOfWeek)]]\"\n            ></th>\n            <template\n              is=\"dom-repeat\"\n              items=\"[[_getWeekDayNames(i18n.weekdays, i18n.weekdaysShort, showWeekNumbers, i18n.firstDayOfWeek)]]\"\n            >\n              <th role=\"columnheader\" part=\"weekday\" scope=\"col\" abbr$=\"[[item.weekDay]]\" aria-hidden=\"true\">\n                [[item.weekDayShort]]\n              </th>\n            </template>\n          </tr>\n        </thead>\n        <tbody id=\"days-container\">\n          <template is=\"dom-repeat\" items=\"[[_weeks]]\" as=\"week\">\n            <tr role=\"row\">\n              <td\n                part=\"week-number\"\n                aria-hidden=\"true\"\n                hidden$=\"[[!_showWeekSeparator(showWeekNumbers, i18n.firstDayOfWeek)]]\"\n              >\n                [[__getWeekNumber(week)]]\n              </td>\n              <template is=\"dom-repeat\" items=\"[[week]]\">\n                <td\n                  role=\"gridcell\"\n                  part=\"date\"\n                  date=\"[[item]]\"\n                  today$=\"[[_isToday(item)]]\"\n                  focused$=\"[[__isDayFocused(item, focusedDate)]]\"\n                  tabindex$=\"[[__getDayTabindex(item, focusedDate)]]\"\n                  selected$=\"[[__isDaySelected(item, selectedDate)]]\"\n                  disabled$=\"[[__isDayDisabled(item, minDate, maxDate)]]\"\n                  aria-selected$=\"[[__getDayAriaSelected(item, selectedDate)]]\"\n                  aria-disabled$=\"[[__getDayAriaDisabled(item, minDate, maxDate)]]\"\n                  aria-label$=\"[[__getDayAriaLabel(item)]]\"\n                  >[[_getDate(item)]]</td\n                >\n              </template>\n            </tr>\n          </template>\n        </tbody>\n      </table>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-month-calendar';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * A `Date` object defining the month to be displayed. Only year and\n       * month properties are actually used.\n       */\n      month: {\n        type: Date,\n        value: new Date(),\n      },\n\n      /**\n       * A `Date` object for the currently selected date.\n       */\n      selectedDate: {\n        type: Date,\n        notify: true,\n      },\n\n      /**\n       * A `Date` object for the currently focused date.\n       */\n      focusedDate: Date,\n\n      showWeekNumbers: {\n        type: Boolean,\n        value: false,\n      },\n\n      i18n: {\n        type: Object,\n      },\n\n      /**\n       * Flag stating whether taps on the component should be ignored.\n       */\n      ignoreTaps: Boolean,\n\n      _notTapping: Boolean,\n\n      /**\n       * The earliest date that can be selected. All earlier dates will be disabled.\n       */\n      minDate: {\n        type: Date,\n        value: null,\n      },\n\n      /**\n       * The latest date that can be selected. All later dates will be disabled.\n       */\n      maxDate: {\n        type: Date,\n        value: null,\n      },\n\n      _days: {\n        type: Array,\n        computed: '_getDays(month, i18n.firstDayOfWeek, minDate, maxDate)',\n      },\n\n      _weeks: {\n        type: Array,\n        computed: '_getWeeks(_days)',\n      },\n\n      disabled: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: '_isDisabled(month, minDate, maxDate)',\n      },\n    };\n  }\n\n  static get observers() {\n    return [\n      '_showWeekNumbersChanged(showWeekNumbers, i18n.firstDayOfWeek)',\n      '__focusedDateChanged(focusedDate, _days)',\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    addListener(this.$.monthGrid, 'tap', this._handleTap.bind(this));\n  }\n\n  get focusableDateElement() {\n    return [...this.shadowRoot.querySelectorAll('[part=date]')].find((datePart) => {\n      return dateEquals(datePart.date, this.focusedDate);\n    });\n  }\n\n  /* Returns true if all the dates in the month are out of the allowed range */\n  _isDisabled(month, minDate, maxDate) {\n    // First day of the month\n    const firstDate = new Date(0, 0);\n    firstDate.setFullYear(month.getFullYear());\n    firstDate.setMonth(month.getMonth());\n    firstDate.setDate(1);\n\n    // Last day of the month\n    const lastDate = new Date(0, 0);\n    lastDate.setFullYear(month.getFullYear());\n    lastDate.setMonth(month.getMonth() + 1);\n    lastDate.setDate(0);\n\n    if (\n      minDate &&\n      maxDate &&\n      minDate.getMonth() === maxDate.getMonth() &&\n      minDate.getMonth() === month.getMonth() &&\n      maxDate.getDate() - minDate.getDate() >= 0\n    ) {\n      return false;\n    }\n\n    return !dateAllowed(firstDate, minDate, maxDate) && !dateAllowed(lastDate, minDate, maxDate);\n  }\n\n  _getTitle(month, monthNames) {\n    if (month === undefined || monthNames === undefined) {\n      return;\n    }\n    return this.i18n.formatTitle(monthNames[month.getMonth()], month.getFullYear());\n  }\n\n  _onMonthGridTouchStart() {\n    this._notTapping = false;\n    setTimeout(() => {\n      this._notTapping = true;\n    }, 300);\n  }\n\n  _dateAdd(date, delta) {\n    date.setDate(date.getDate() + delta);\n  }\n\n  _applyFirstDayOfWeek(weekDayNames, firstDayOfWeek) {\n    if (weekDayNames === undefined || firstDayOfWeek === undefined) {\n      return;\n    }\n\n    return weekDayNames.slice(firstDayOfWeek).concat(weekDayNames.slice(0, firstDayOfWeek));\n  }\n\n  _getWeekDayNames(weekDayNames, weekDayNamesShort, showWeekNumbers, firstDayOfWeek) {\n    if (\n      weekDayNames === undefined ||\n      weekDayNamesShort === undefined ||\n      showWeekNumbers === undefined ||\n      firstDayOfWeek === undefined\n    ) {\n      return;\n    }\n    weekDayNames = this._applyFirstDayOfWeek(weekDayNames, firstDayOfWeek);\n    weekDayNamesShort = this._applyFirstDayOfWeek(weekDayNamesShort, firstDayOfWeek);\n    weekDayNames = weekDayNames.map((day, index) => {\n      return {\n        weekDay: day,\n        weekDayShort: weekDayNamesShort[index],\n      };\n    });\n\n    return weekDayNames;\n  }\n\n  __focusedDateChanged(focusedDate, days) {\n    if (days.some((date) => dateEquals(date, focusedDate))) {\n      this.removeAttribute('aria-hidden');\n    } else {\n      this.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  _getDate(date) {\n    return date ? date.getDate() : '';\n  }\n\n  _showWeekNumbersChanged(showWeekNumbers, firstDayOfWeek) {\n    if (showWeekNumbers && firstDayOfWeek === 1) {\n      this.setAttribute('week-numbers', '');\n    } else {\n      this.removeAttribute('week-numbers');\n    }\n  }\n\n  _showWeekSeparator(showWeekNumbers, firstDayOfWeek) {\n    // Currently only supported for locales that start the week on Monday.\n    return showWeekNumbers && firstDayOfWeek === 1;\n  }\n\n  _isToday(date) {\n    return dateEquals(new Date(), date);\n  }\n\n  _getDays(month, firstDayOfWeek) {\n    if (month === undefined || firstDayOfWeek === undefined) {\n      return;\n    }\n    // First day of the month (at midnight).\n    const date = new Date(0, 0);\n    date.setFullYear(month.getFullYear());\n    date.setMonth(month.getMonth());\n    date.setDate(1);\n\n    // Rewind to first day of the week.\n    while (date.getDay() !== firstDayOfWeek) {\n      this._dateAdd(date, -1);\n    }\n\n    const days = [];\n    const startMonth = date.getMonth();\n    const targetMonth = month.getMonth();\n    while (date.getMonth() === targetMonth || date.getMonth() === startMonth) {\n      days.push(date.getMonth() === targetMonth ? new Date(date.getTime()) : null);\n\n      // Advance to next day.\n      this._dateAdd(date, 1);\n    }\n    return days;\n  }\n\n  _getWeeks(days) {\n    return days.reduce((acc, day, i) => {\n      if (i % 7 === 0) {\n        acc.push([]);\n      }\n      acc[acc.length - 1].push(day);\n      return acc;\n    }, []);\n  }\n\n  _handleTap(e) {\n    if (!this.ignoreTaps && !this._notTapping && e.target.date && !e.target.hasAttribute('disabled')) {\n      this.selectedDate = e.target.date;\n      this.dispatchEvent(\n        new CustomEvent('date-tap', { detail: { date: e.target.date }, bubbles: true, composed: true }),\n      );\n    }\n  }\n\n  _preventDefault(e) {\n    e.preventDefault();\n  }\n\n  __getWeekNumber(days) {\n    const date = days.reduce((acc, d) => {\n      return !acc && d ? d : acc;\n    });\n\n    return getISOWeekNumber(date);\n  }\n\n  __isDayFocused(date, focusedDate) {\n    return dateEquals(date, focusedDate);\n  }\n\n  __isDaySelected(date, selectedDate) {\n    return dateEquals(date, selectedDate);\n  }\n\n  __getDayAriaSelected(date, selectedDate) {\n    if (this.__isDaySelected(date, selectedDate)) {\n      return 'true';\n    }\n  }\n\n  __isDayDisabled(date, minDate, maxDate) {\n    return !dateAllowed(date, minDate, maxDate);\n  }\n\n  __getDayAriaDisabled(date, min, max) {\n    if (date === undefined || min === undefined || max === undefined) {\n      return;\n    }\n\n    if (this.__isDayDisabled(date, min, max)) {\n      return 'true';\n    }\n  }\n\n  __getDayAriaLabel(date) {\n    if (!date) {\n      return '';\n    }\n\n    let ariaLabel = `${this._getDate(date)} ${this.i18n.monthNames[date.getMonth()]} ${date.getFullYear()}, ${\n      this.i18n.weekdays[date.getDay()]\n    }`;\n\n    if (this._isToday(date)) {\n      ariaLabel += `, ${this.i18n.today}`;\n    }\n\n    return ariaLabel;\n  }\n\n  __getDayTabindex(date, focusedDate) {\n    if (this.__isDayFocused(date, focusedDate)) {\n      return '0';\n    }\n\n    return '-1';\n  }\n}\n\ncustomElements.define(MonthCalendar.is, MonthCalendar);\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { isFirefox } from '@vaadin/component-base/src/browser-utils.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\n\n/**\n * @extends HTMLElement\n * @private\n */\nclass InfiniteScroller extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          overflow: hidden;\n          height: 500px;\n        }\n\n        #scroller {\n          position: relative;\n          height: 100%;\n          overflow: auto;\n          outline: none;\n          margin-right: -40px;\n          -webkit-overflow-scrolling: touch;\n          overflow-x: hidden;\n        }\n\n        #scroller.notouchscroll {\n          -webkit-overflow-scrolling: auto;\n        }\n\n        #scroller::-webkit-scrollbar {\n          display: none;\n        }\n\n        .buffer {\n          position: absolute;\n          width: var(--vaadin-infinite-scroller-buffer-width, 100%);\n          box-sizing: border-box;\n          padding-right: 40px;\n          top: var(--vaadin-infinite-scroller-buffer-offset, 0);\n          animation: fadein 0.2s;\n        }\n\n        @keyframes fadein {\n          from {\n            opacity: 0;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n      </style>\n\n      <div id=\"scroller\" on-scroll=\"_scroll\">\n        <div class=\"buffer\"></div>\n        <div class=\"buffer\"></div>\n        <div id=\"fullHeight\"></div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-infinite-scroller';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Count of individual items in each buffer.\n       * The scroller has 2 buffers altogether so bufferSize of 20\n       * will result in 40 buffered DOM items in total.\n       * Changing after initialization not supported.\n       */\n      bufferSize: {\n        type: Number,\n        value: 20,\n      },\n\n      /**\n       * The amount of initial scroll top. Needed in order for the\n       * user to be able to scroll backwards.\n       * @private\n       */\n      _initialScroll: {\n        value: 500000,\n      },\n\n      /**\n       * The index/position mapped at _initialScroll point.\n       * @private\n       */\n      _initialIndex: {\n        value: 0,\n      },\n\n      /** @private */\n      _buffers: Array,\n\n      /** @private */\n      _preventScrollEvent: Boolean,\n\n      /** @private */\n      _mayHaveMomentum: Boolean,\n\n      /** @private */\n      _initialized: Boolean,\n\n      active: {\n        type: Boolean,\n        observer: '_activated',\n      },\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._buffers = [...this.shadowRoot.querySelectorAll('.buffer')];\n\n    this.$.fullHeight.style.height = `${this._initialScroll * 2}px`;\n\n    const tpl = this.querySelector('template');\n    this._TemplateClass = templatize(tpl, this, {\n      forwardHostProp(prop, value) {\n        if (prop !== 'index') {\n          this._buffers.forEach((buffer) => {\n            [...buffer.children].forEach((slot) => {\n              slot._itemWrapper.instance[prop] = value;\n            });\n          });\n        }\n      },\n    });\n\n    // Firefox interprets elements with overflow:auto as focusable\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1069739\n    if (isFirefox) {\n      this.$.scroller.tabIndex = -1;\n    }\n  }\n\n  /**\n   * Force the scroller to update clones after a reset, without\n   * waiting for the debouncer to resolve.\n   */\n  forceUpdate() {\n    if (this._debouncerUpdateClones) {\n      this._buffers[0].updated = this._buffers[1].updated = false;\n      this._updateClones();\n      this._debouncerUpdateClones.cancel();\n    }\n  }\n\n  /** @private */\n  _activated(active) {\n    if (active && !this._initialized) {\n      this._createPool();\n      this._initialized = true;\n    }\n  }\n\n  /** @private */\n  _finishInit() {\n    if (!this._initDone) {\n      // Once the first set of items start fading in, stamp the rest\n      this._buffers.forEach((buffer) => {\n        [...buffer.children].forEach((slot) => {\n          this._ensureStampedInstance(slot._itemWrapper);\n        });\n      });\n\n      if (!this._buffers[0].translateY) {\n        this._reset();\n      }\n\n      this._initDone = true;\n    }\n  }\n\n  /** @private */\n  _translateBuffer(up) {\n    const index = up ? 1 : 0;\n    this._buffers[index].translateY = this._buffers[index ? 0 : 1].translateY + this._bufferHeight * (index ? -1 : 1);\n    this._buffers[index].style.transform = `translate3d(0, ${this._buffers[index].translateY}px, 0)`;\n    this._buffers[index].updated = false;\n    this._buffers.reverse();\n  }\n\n  /** @private */\n  _scroll() {\n    if (this._scrollDisabled) {\n      return;\n    }\n\n    const scrollTop = this.$.scroller.scrollTop;\n    if (scrollTop < this._bufferHeight || scrollTop > this._initialScroll * 2 - this._bufferHeight) {\n      // Scrolled near the end/beginning of the scrollable area -> reset.\n      this._initialIndex = ~~this.position;\n      this._reset();\n    }\n\n    // Check if we scrolled enough to translate the buffer positions.\n    const offset = this.itemHeight + this.bufferOffset;\n    const upperThresholdReached = scrollTop > this._buffers[1].translateY + offset;\n    const lowerThresholdReached = scrollTop < this._buffers[0].translateY + offset;\n\n    if (upperThresholdReached || lowerThresholdReached) {\n      this._translateBuffer(lowerThresholdReached);\n      this._updateClones();\n    }\n\n    if (!this._preventScrollEvent) {\n      this.dispatchEvent(new CustomEvent('custom-scroll', { bubbles: false, composed: true }));\n      this._mayHaveMomentum = true;\n    }\n    this._preventScrollEvent = false;\n\n    this._debouncerScrollFinish = Debouncer.debounce(this._debouncerScrollFinish, timeOut.after(200), () => {\n      const scrollerRect = this.$.scroller.getBoundingClientRect();\n      if (!this._isVisible(this._buffers[0], scrollerRect) && !this._isVisible(this._buffers[1], scrollerRect)) {\n        this.position = this.position; // eslint-disable-line no-self-assign\n      }\n    });\n  }\n\n  /**\n   * @return {number}\n   */\n  get bufferOffset() {\n    return this._buffers[0].offsetTop;\n  }\n\n  /**\n   * @return {number}\n   */\n  get position() {\n    return (this.$.scroller.scrollTop - this._buffers[0].translateY) / this.itemHeight + this._firstIndex;\n  }\n\n  /**\n   * Current scroller position as index. Can be a fractional number.\n   *\n   * @type {number}\n   */\n  set position(index) {\n    this._preventScrollEvent = true;\n    if (index > this._firstIndex && index < this._firstIndex + this.bufferSize * 2) {\n      this.$.scroller.scrollTop = this.itemHeight * (index - this._firstIndex) + this._buffers[0].translateY;\n    } else {\n      this._initialIndex = ~~index;\n      this._reset();\n      this._scrollDisabled = true;\n      this.$.scroller.scrollTop += (index % 1) * this.itemHeight;\n      this._scrollDisabled = false;\n    }\n\n    if (this._mayHaveMomentum) {\n      // Stop the possible iOS Safari momentum with -webkit-overflow-scrolling: auto;\n      this.$.scroller.classList.add('notouchscroll');\n      this._mayHaveMomentum = false;\n\n      setTimeout(() => {\n        // Restore -webkit-overflow-scrolling: touch; after a small delay.\n        this.$.scroller.classList.remove('notouchscroll');\n      }, 10);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  get itemHeight() {\n    if (!this._itemHeightVal) {\n      const itemHeight = getComputedStyle(this).getPropertyValue('--vaadin-infinite-scroller-item-height');\n      // Use background-position temp inline style for unit conversion\n      const tmpStyleProp = 'background-position';\n      this.$.fullHeight.style.setProperty(tmpStyleProp, itemHeight);\n      const itemHeightPx = getComputedStyle(this.$.fullHeight).getPropertyValue(tmpStyleProp);\n      this.$.fullHeight.style.removeProperty(tmpStyleProp);\n      this._itemHeightVal = parseFloat(itemHeightPx);\n    }\n\n    return this._itemHeightVal;\n  }\n\n  /** @private */\n  get _bufferHeight() {\n    return this.itemHeight * this.bufferSize;\n  }\n\n  /** @private */\n  _reset() {\n    this._scrollDisabled = true;\n    this.$.scroller.scrollTop = this._initialScroll;\n    this._buffers[0].translateY = this._initialScroll - this._bufferHeight;\n    this._buffers[1].translateY = this._initialScroll;\n    this._buffers.forEach((buffer) => {\n      buffer.style.transform = `translate3d(0, ${buffer.translateY}px, 0)`;\n    });\n    this._buffers[0].updated = this._buffers[1].updated = false;\n    this._updateClones(true);\n\n    this._debouncerUpdateClones = Debouncer.debounce(this._debouncerUpdateClones, timeOut.after(200), () => {\n      this._buffers[0].updated = this._buffers[1].updated = false;\n      this._updateClones();\n    });\n\n    this._scrollDisabled = false;\n  }\n\n  /** @private */\n  _createPool() {\n    const container = this.getBoundingClientRect();\n    this._buffers.forEach((buffer) => {\n      for (let i = 0; i < this.bufferSize; i++) {\n        const itemWrapper = document.createElement('div');\n        itemWrapper.style.height = `${this.itemHeight}px`;\n        itemWrapper.instance = {};\n\n        const contentId = (InfiniteScroller._contentIndex = InfiniteScroller._contentIndex + 1 || 0);\n        const slotName = `vaadin-infinite-scroller-item-content-${contentId}`;\n\n        const slot = document.createElement('slot');\n        slot.setAttribute('name', slotName);\n        slot._itemWrapper = itemWrapper;\n        buffer.appendChild(slot);\n\n        itemWrapper.setAttribute('slot', slotName);\n        this.appendChild(itemWrapper);\n\n        setTimeout(() => {\n          // Only stamp the visible instances first\n          if (this._isVisible(itemWrapper, container)) {\n            this._ensureStampedInstance(itemWrapper);\n          }\n        }, 1); // Wait for first reset\n      }\n    });\n\n    setTimeout(() => {\n      afterNextRender(this, this._finishInit.bind(this));\n    }, 1);\n  }\n\n  /** @private */\n  _ensureStampedInstance(itemWrapper) {\n    if (itemWrapper.firstElementChild) {\n      return;\n    }\n\n    const tmpInstance = itemWrapper.instance;\n\n    itemWrapper.instance = new this._TemplateClass({});\n    itemWrapper.appendChild(itemWrapper.instance.root);\n\n    Object.keys(tmpInstance).forEach((prop) => {\n      itemWrapper.instance.set(prop, tmpInstance[prop]);\n    });\n  }\n\n  /** @private */\n  _updateClones(viewPortOnly) {\n    this._firstIndex = ~~((this._buffers[0].translateY - this._initialScroll) / this.itemHeight) + this._initialIndex;\n\n    const scrollerRect = viewPortOnly ? this.$.scroller.getBoundingClientRect() : undefined;\n    this._buffers.forEach((buffer, bufferIndex) => {\n      if (!buffer.updated) {\n        const firstIndex = this._firstIndex + this.bufferSize * bufferIndex;\n\n        [...buffer.children].forEach((slot, index) => {\n          const itemWrapper = slot._itemWrapper;\n          if (!viewPortOnly || this._isVisible(itemWrapper, scrollerRect)) {\n            itemWrapper.instance.index = firstIndex + index;\n          }\n        });\n        buffer.updated = true;\n      }\n    });\n  }\n\n  /** @private */\n  _isVisible(element, container) {\n    const rect = element.getBoundingClientRect();\n    return rect.bottom > container.top && rect.top < container.bottom;\n  }\n}\n\ncustomElements.define(InfiniteScroller.is, InfiniteScroller);\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/button/src/vaadin-button.js';\nimport './vaadin-month-calendar.js';\nimport './vaadin-infinite-scroller.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { addListener, setTouchAction } from '@vaadin/component-base/src/gestures.js';\nimport { MediaQueryController } from '@vaadin/component-base/src/media-query-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { dateEquals, extractDateParts, getClosestDate } from './vaadin-date-picker-helper.js';\n\n/**\n * @extends HTMLElement\n * @private\n */\nclass DatePickerOverlayContent extends ControllerMixin(ThemableMixin(DirMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n          width: 100%;\n          outline: none;\n        }\n\n        [part='overlay-header'] {\n          display: flex;\n          flex-shrink: 0;\n          flex-wrap: nowrap;\n          align-items: center;\n        }\n\n        :host(:not([fullscreen])) [part='overlay-header'] {\n          display: none;\n        }\n\n        [part='label'] {\n          flex-grow: 1;\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n\n        [part='years-toggle-button'] {\n          display: flex;\n        }\n\n        #scrollers {\n          display: flex;\n          height: 100%;\n          width: 100%;\n          position: relative;\n          overflow: hidden;\n        }\n\n        [part='months'],\n        [part='years'] {\n          height: 100%;\n        }\n\n        [part='months'] {\n          --vaadin-infinite-scroller-item-height: 270px;\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n        }\n\n        #scrollers[desktop] [part='months'] {\n          right: 50px;\n          transform: none !important;\n        }\n\n        [part='years'] {\n          --vaadin-infinite-scroller-item-height: 80px;\n          width: 50px;\n          position: absolute;\n          right: 0;\n          transform: translateX(100%);\n          -webkit-tap-highlight-color: transparent;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          user-select: none;\n          /* Center the year scroller position. */\n          --vaadin-infinite-scroller-buffer-offset: 50%;\n        }\n\n        #scrollers[desktop] [part='years'] {\n          position: absolute;\n          transform: none !important;\n        }\n\n        [part='years']::before {\n          content: '';\n          display: block;\n          background: transparent;\n          width: 0;\n          height: 0;\n          position: absolute;\n          left: 0;\n          top: 50%;\n          transform: translateY(-50%);\n          border-width: 6px;\n          border-style: solid;\n          border-color: transparent;\n          border-left-color: #000;\n        }\n\n        :host(.animate) [part='months'],\n        :host(.animate) [part='years'] {\n          transition: all 200ms;\n        }\n\n        [part='toolbar'] {\n          display: flex;\n          justify-content: space-between;\n          z-index: 2;\n          flex-shrink: 0;\n        }\n      </style>\n\n      <div part=\"overlay-header\" on-touchend=\"_preventDefault\" desktop$=\"[[_desktopMode]]\" aria-hidden=\"true\">\n        <div part=\"label\">[[_formatDisplayed(selectedDate, i18n.formatDate, label)]]</div>\n        <div part=\"clear-button\" hidden$=\"[[!selectedDate]]\"></div>\n        <div part=\"toggle-button\"></div>\n\n        <div part=\"years-toggle-button\" hidden$=\"[[_desktopMode]]\" aria-hidden=\"true\">\n          [[_yearAfterXMonths(_visibleMonthIndex)]]\n        </div>\n      </div>\n\n      <div id=\"scrollers\" desktop$=\"[[_desktopMode]]\">\n        <vaadin-infinite-scroller\n          id=\"monthScroller\"\n          on-custom-scroll=\"_onMonthScroll\"\n          on-touchstart=\"_onMonthScrollTouchStart\"\n          buffer-size=\"3\"\n          active=\"[[initialPosition]]\"\n          part=\"months\"\n        >\n          <template>\n            <vaadin-month-calendar\n              i18n=\"[[i18n]]\"\n              month=\"[[_dateAfterXMonths(index)]]\"\n              selected-date=\"{{selectedDate}}\"\n              focused-date=\"[[focusedDate]]\"\n              ignore-taps=\"[[_ignoreTaps]]\"\n              show-week-numbers=\"[[showWeekNumbers]]\"\n              min-date=\"[[minDate]]\"\n              max-date=\"[[maxDate]]\"\n              part=\"month\"\n              theme$=\"[[_theme]]\"\n              on-keydown=\"__onMonthCalendarKeyDown\"\n            >\n            </vaadin-month-calendar>\n          </template>\n        </vaadin-infinite-scroller>\n        <vaadin-infinite-scroller\n          id=\"yearScroller\"\n          on-custom-scroll=\"_onYearScroll\"\n          on-touchstart=\"_onYearScrollTouchStart\"\n          buffer-size=\"12\"\n          active=\"[[initialPosition]]\"\n          part=\"years\"\n          aria-hidden=\"true\"\n        >\n          <template>\n            <div\n              part=\"year-number\"\n              current$=\"[[_isCurrentYear(index)]]\"\n              selected$=\"[[_isSelectedYear(index, selectedDate)]]\"\n            >\n              [[_yearAfterXYears(index)]]\n            </div>\n            <div part=\"year-separator\" aria-hidden=\"true\"></div>\n          </template>\n        </vaadin-infinite-scroller>\n      </div>\n\n      <div on-touchend=\"_preventDefault\" role=\"toolbar\" part=\"toolbar\">\n        <vaadin-button\n          id=\"todayButton\"\n          part=\"today-button\"\n          theme=\"tertiary\"\n          disabled=\"[[!_isTodayAllowed(minDate, maxDate)]]\"\n          on-keydown=\"__onTodayButtonKeyDown\"\n        >\n          [[i18n.today]]\n        </vaadin-button>\n        <vaadin-button id=\"cancelButton\" part=\"cancel-button\" theme=\"tertiary\" on-keydown=\"__onCancelButtonKeyDown\">\n          [[i18n.cancel]]\n        </vaadin-button>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-date-picker-overlay-content';\n  }\n\n  static get properties() {\n    return {\n      scrollDuration: {\n        type: Number,\n        value: 300,\n      },\n\n      /**\n       * The value for this element.\n       */\n      selectedDate: {\n        type: Date,\n        value: null,\n      },\n\n      /**\n       * Date value which is focused using keyboard.\n       */\n      focusedDate: {\n        type: Date,\n        notify: true,\n        observer: '_focusedDateChanged',\n      },\n\n      _focusedMonthDate: Number,\n\n      /**\n       * Date which should be visible when there is no value selected.\n       */\n      initialPosition: {\n        type: Date,\n        observer: '_initialPositionChanged',\n      },\n\n      _originDate: {\n        value: new Date(),\n      },\n\n      _visibleMonthIndex: Number,\n\n      _desktopMode: Boolean,\n\n      _desktopMediaQuery: {\n        type: String,\n        value: '(min-width: 375px)',\n      },\n\n      _translateX: {\n        observer: '_translateXChanged',\n      },\n\n      _yearScrollerWidth: {\n        value: 50,\n      },\n\n      i18n: {\n        type: Object,\n      },\n\n      showWeekNumbers: {\n        type: Boolean,\n      },\n\n      _ignoreTaps: Boolean,\n\n      _notTapping: Boolean,\n\n      /**\n       * The earliest date that can be selected. All earlier dates will be disabled.\n       */\n      minDate: Date,\n\n      /**\n       * The latest date that can be selected. All later dates will be disabled.\n       */\n      maxDate: Date,\n\n      /**\n       * Input label\n       */\n      label: String,\n    };\n  }\n\n  get __isRTL() {\n    return this.getAttribute('dir') === 'rtl';\n  }\n\n  /**\n   * Whether to scroll to a sub-month position when scrolling to a date.\n   * This is active if the month scroller is not large enough to fit a\n   * full month. In that case we want to scroll to a position between\n   * two months in order to have the focused date in the visible area.\n   * @returns {boolean} whether to use sub-month scrolling\n   * @private\n   */\n  get __useSubMonthScrolling() {\n    return this.$.monthScroller.clientHeight < this.$.monthScroller.itemHeight + this.$.monthScroller.bufferOffset;\n  }\n\n  get calendars() {\n    return [...this.shadowRoot.querySelectorAll('vaadin-month-calendar')];\n  }\n\n  get focusableDateElement() {\n    return this.calendars.map((calendar) => calendar.focusableDateElement).find(Boolean);\n  }\n\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'dialog');\n\n    addListener(this.$.scrollers, 'track', this._track.bind(this));\n    addListener(this.shadowRoot.querySelector('[part=\"clear-button\"]'), 'tap', this._clear.bind(this));\n    addListener(this.shadowRoot.querySelector('[part=\"today-button\"]'), 'tap', this._onTodayTap.bind(this));\n    addListener(this.shadowRoot.querySelector('[part=\"cancel-button\"]'), 'tap', this._cancel.bind(this));\n    addListener(this.shadowRoot.querySelector('[part=\"toggle-button\"]'), 'tap', this._cancel.bind(this));\n    addListener(this.shadowRoot.querySelector('[part=\"years\"]'), 'tap', this._onYearTap.bind(this));\n    addListener(\n      this.shadowRoot.querySelector('[part=\"years-toggle-button\"]'),\n      'tap',\n      this._toggleYearScroller.bind(this),\n    );\n\n    this.addController(\n      new MediaQueryController(this._desktopMediaQuery, (matches) => {\n        this._desktopMode = matches;\n      }),\n    );\n  }\n\n  /**\n   * Fired when the scroller reaches the target scrolling position.\n   * @event scroll-animation-finished\n   * @param {Number} detail.position new position\n   * @param {Number} detail.oldPosition old position\n   */\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._closeYearScroller();\n    this._toggleAnimateClass(true);\n    setTouchAction(this.$.scrollers, 'pan-y');\n  }\n\n  /**\n   * Focuses the cancel button\n   */\n  focusCancel() {\n    this.$.cancelButton.focus();\n  }\n\n  /**\n   * Scrolls the list to the given Date.\n   */\n  scrollToDate(date, animate) {\n    const offset = this.__useSubMonthScrolling ? this._calculateWeekScrollOffset(date) : 0;\n    this._scrollToPosition(this._differenceInMonths(date, this._originDate) + offset, animate);\n    this.$.monthScroller.forceUpdate();\n  }\n\n  /**\n   * Select a date and fire event indicating user interaction.\n   * @protected\n   */\n  _selectDate(dateToSelect) {\n    this.selectedDate = dateToSelect;\n    this.dispatchEvent(\n      new CustomEvent('date-selected', { detail: { date: dateToSelect }, bubbles: true, composed: true }),\n    );\n  }\n\n  _focusedDateChanged(focusedDate) {\n    this.revealDate(focusedDate);\n  }\n\n  _isCurrentYear(yearsFromNow) {\n    return yearsFromNow === 0;\n  }\n\n  _isSelectedYear(yearsFromNow, selectedDate) {\n    if (selectedDate) {\n      return selectedDate.getFullYear() === this._originDate.getFullYear() + yearsFromNow;\n    }\n  }\n\n  /**\n   * Scrolls the month and year scrollers enough to reveal the given date.\n   */\n  revealDate(date, animate = true) {\n    if (!date) {\n      return;\n    }\n    const diff = this._differenceInMonths(date, this._originDate);\n    // If scroll area does not fit the full month, then always scroll with an offset to\n    // approximately display the week of the date\n    if (this.__useSubMonthScrolling) {\n      const offset = this._calculateWeekScrollOffset(date);\n      this._scrollToPosition(diff + offset, animate);\n      return;\n    }\n\n    // Otherwise determine if we need to scroll to make the month of the date visible\n    const scrolledAboveViewport = this.$.monthScroller.position > diff;\n\n    const visibleArea = Math.max(\n      this.$.monthScroller.itemHeight,\n      this.$.monthScroller.clientHeight - this.$.monthScroller.bufferOffset * 2,\n    );\n    const visibleItems = visibleArea / this.$.monthScroller.itemHeight;\n    const scrolledBelowViewport = this.$.monthScroller.position + visibleItems - 1 < diff;\n\n    if (scrolledAboveViewport) {\n      this._scrollToPosition(diff, animate);\n    } else if (scrolledBelowViewport) {\n      this._scrollToPosition(diff - visibleItems + 1, animate);\n    }\n  }\n\n  /**\n   * Calculates an offset to be added to the month scroll position\n   * when using sub-month scrolling, in order ensure that the week\n   * that the date is in is visible even for small scroll areas.\n   * As the month scroller uses a month as minimal scroll unit\n   * (a value of `1` equals one month), we can not exactly identify\n   * the position of a specific week. This is a best effort\n   * implementation based on manual testing.\n   * @param date the date for which to calculate the offset\n   * @returns {number} the offset\n   * @private\n   */\n  _calculateWeekScrollOffset(date) {\n    // Get first day of month\n    const temp = new Date(0, 0);\n    temp.setFullYear(date.getFullYear());\n    temp.setMonth(date.getMonth());\n    temp.setDate(1);\n    // Determine week (=row index) of date within the month\n    let week = 0;\n    while (temp.getDate() < date.getDate()) {\n      temp.setDate(temp.getDate() + 1);\n      if (temp.getDay() === this.i18n.firstDayOfWeek) {\n        week += 1;\n      }\n    }\n    // Calculate magic number that approximately keeps the week visible\n    return week / 6;\n  }\n\n  _initialPositionChanged(initialPosition) {\n    this.scrollToDate(initialPosition);\n  }\n\n  _repositionYearScroller() {\n    this._visibleMonthIndex = Math.floor(this.$.monthScroller.position);\n    this.$.yearScroller.position = (this.$.monthScroller.position + this._originDate.getMonth()) / 12;\n  }\n\n  _repositionMonthScroller() {\n    this.$.monthScroller.position = this.$.yearScroller.position * 12 - this._originDate.getMonth();\n    this._visibleMonthIndex = Math.floor(this.$.monthScroller.position);\n  }\n\n  _onMonthScroll() {\n    this._repositionYearScroller();\n    this._doIgnoreTaps();\n  }\n\n  _onYearScroll() {\n    this._repositionMonthScroller();\n    this._doIgnoreTaps();\n  }\n\n  _onYearScrollTouchStart() {\n    this._notTapping = false;\n    setTimeout(() => {\n      this._notTapping = true;\n    }, 300);\n\n    this._repositionMonthScroller();\n  }\n\n  _onMonthScrollTouchStart() {\n    this._repositionYearScroller();\n  }\n\n  _doIgnoreTaps() {\n    this._ignoreTaps = true;\n    this._debouncer = Debouncer.debounce(this._debouncer, timeOut.after(300), () => {\n      this._ignoreTaps = false;\n    });\n  }\n\n  _formatDisplayed(date, formatDate, label) {\n    if (date) {\n      return formatDate(extractDateParts(date));\n    }\n    return label;\n  }\n\n  _onTodayTap() {\n    const today = new Date();\n\n    if (Math.abs(this.$.monthScroller.position - this._differenceInMonths(today, this._originDate)) < 0.001) {\n      // Select today only if the month scroller is positioned approximately\n      // at the beginning of the current month\n      this._selectDate(today);\n      this._close();\n    } else {\n      this._scrollToCurrentMonth();\n    }\n  }\n\n  _scrollToCurrentMonth() {\n    if (this.focusedDate) {\n      this.focusedDate = new Date();\n    }\n\n    this.scrollToDate(new Date(), true);\n  }\n\n  _onYearTap(e) {\n    if (!this._ignoreTaps && !this._notTapping) {\n      const scrollDelta =\n        e.detail.y - (this.$.yearScroller.getBoundingClientRect().top + this.$.yearScroller.clientHeight / 2);\n      const yearDelta = scrollDelta / this.$.yearScroller.itemHeight;\n      this._scrollToPosition(this.$.monthScroller.position + yearDelta * 12, true);\n    }\n  }\n\n  _scrollToPosition(targetPosition, animate) {\n    if (this._targetPosition !== undefined) {\n      this._targetPosition = targetPosition;\n      return;\n    }\n\n    if (!animate) {\n      this.$.monthScroller.position = targetPosition;\n      this._targetPosition = undefined;\n      this._repositionYearScroller();\n      this.__tryFocusDate();\n      return;\n    }\n\n    this._targetPosition = targetPosition;\n\n    let revealResolve;\n    this._revealPromise = new Promise((resolve) => {\n      revealResolve = resolve;\n    });\n\n    // http://gizma.com/easing/\n    const easingFunction = (t, b, c, d) => {\n      t /= d / 2;\n      if (t < 1) {\n        return (c / 2) * t * t + b;\n      }\n      t -= 1;\n      return (-c / 2) * (t * (t - 2) - 1) + b;\n    };\n\n    let start = 0;\n    const initialPosition = this.$.monthScroller.position;\n\n    const smoothScroll = (timestamp) => {\n      start = start || timestamp;\n      const currentTime = timestamp - start;\n\n      if (currentTime < this.scrollDuration) {\n        const currentPos = easingFunction(\n          currentTime,\n          initialPosition,\n          this._targetPosition - initialPosition,\n          this.scrollDuration,\n        );\n        this.$.monthScroller.position = currentPos;\n        window.requestAnimationFrame(smoothScroll);\n      } else {\n        this.dispatchEvent(\n          new CustomEvent('scroll-animation-finished', {\n            bubbles: true,\n            composed: true,\n            detail: {\n              position: this._targetPosition,\n              oldPosition: initialPosition,\n            },\n          }),\n        );\n\n        this.$.monthScroller.position = this._targetPosition;\n        this._targetPosition = undefined;\n\n        revealResolve();\n        this._revealPromise = undefined;\n      }\n\n      setTimeout(this._repositionYearScroller.bind(this), 1);\n    };\n\n    // Start the animation.\n    window.requestAnimationFrame(smoothScroll);\n  }\n\n  _limit(value, range) {\n    return Math.min(range.max, Math.max(range.min, value));\n  }\n\n  _handleTrack(e) {\n    // Check if horizontal movement threshold (dx) not exceeded or\n    // scrolling fast vertically (ddy).\n    if (Math.abs(e.detail.dx) < 10 || Math.abs(e.detail.ddy) > 10) {\n      return;\n    }\n\n    // If we're flinging quickly -> start animating already.\n    if (Math.abs(e.detail.ddx) > this._yearScrollerWidth / 3) {\n      this._toggleAnimateClass(true);\n    }\n\n    const newTranslateX = this._translateX + e.detail.ddx;\n    this._translateX = this._limit(newTranslateX, {\n      min: 0,\n      max: this._yearScrollerWidth,\n    });\n  }\n\n  _track(e) {\n    if (this._desktopMode) {\n      // No need to track for swipe gestures on desktop.\n      return;\n    }\n\n    switch (e.detail.state) {\n      case 'start':\n        this._toggleAnimateClass(false);\n        break;\n      case 'track':\n        this._handleTrack(e);\n        break;\n      case 'end':\n        this._toggleAnimateClass(true);\n        if (this._translateX >= this._yearScrollerWidth / 2) {\n          this._closeYearScroller();\n        } else {\n          this._openYearScroller();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  _toggleAnimateClass(enable) {\n    if (enable) {\n      this.classList.add('animate');\n    } else {\n      this.classList.remove('animate');\n    }\n  }\n\n  _toggleYearScroller() {\n    if (this._isYearScrollerVisible()) {\n      this._closeYearScroller();\n    } else {\n      this._openYearScroller();\n    }\n  }\n\n  _openYearScroller() {\n    this._translateX = 0;\n    this.setAttribute('years-visible', '');\n  }\n\n  _closeYearScroller() {\n    this.removeAttribute('years-visible');\n    this._translateX = this._yearScrollerWidth;\n  }\n\n  _isYearScrollerVisible() {\n    return this._translateX < this._yearScrollerWidth / 2;\n  }\n\n  _translateXChanged(x) {\n    if (!this._desktopMode) {\n      this.$.monthScroller.style.transform = `translateX(${x - this._yearScrollerWidth}px)`;\n      this.$.yearScroller.style.transform = `translateX(${x}px)`;\n    }\n  }\n\n  _yearAfterXYears(index) {\n    const result = new Date(this._originDate);\n    result.setFullYear(parseInt(index) + this._originDate.getFullYear());\n    return result.getFullYear();\n  }\n\n  _yearAfterXMonths(months) {\n    return this._dateAfterXMonths(months).getFullYear();\n  }\n\n  _dateAfterXMonths(months) {\n    const result = new Date(this._originDate);\n    result.setDate(1);\n    result.setMonth(parseInt(months) + this._originDate.getMonth());\n    return result;\n  }\n\n  _differenceInMonths(date1, date2) {\n    const months = (date1.getFullYear() - date2.getFullYear()) * 12;\n    return months - date2.getMonth() + date1.getMonth();\n  }\n\n  _clear() {\n    this._selectDate('');\n  }\n\n  _close() {\n    this.dispatchEvent(new CustomEvent('close', { bubbles: true, composed: true }));\n  }\n\n  _cancel() {\n    this.focusedDate = this.selectedDate;\n    this._close();\n  }\n\n  _preventDefault(e) {\n    e.preventDefault();\n  }\n\n  __toggleDate(date) {\n    if (dateEquals(date, this.selectedDate)) {\n      this._clear();\n      this.focusedDate = date;\n    } else {\n      this._selectDate(date);\n    }\n  }\n\n  __onMonthCalendarKeyDown(event) {\n    let handled = false;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        this._moveFocusByDays(7);\n        handled = true;\n        break;\n      case 'ArrowUp':\n        this._moveFocusByDays(-7);\n        handled = true;\n        break;\n      case 'ArrowRight':\n        this._moveFocusByDays(this.__isRTL ? -1 : 1);\n        handled = true;\n        break;\n      case 'ArrowLeft':\n        this._moveFocusByDays(this.__isRTL ? 1 : -1);\n        handled = true;\n        break;\n      case 'Enter':\n        this._selectDate(this.focusedDate);\n        this._close();\n        handled = true;\n        break;\n      case ' ':\n        this.__toggleDate(this.focusedDate);\n        handled = true;\n        break;\n      case 'Home':\n        this._moveFocusInsideMonth(this.focusedDate, 'minDate');\n        handled = true;\n        break;\n      case 'End':\n        this._moveFocusInsideMonth(this.focusedDate, 'maxDate');\n        handled = true;\n        break;\n      case 'PageDown':\n        this._moveFocusByMonths(event.shiftKey ? 12 : 1);\n        handled = true;\n        break;\n      case 'PageUp':\n        this._moveFocusByMonths(event.shiftKey ? -12 : -1);\n        handled = true;\n        break;\n      case 'Tab':\n        this._onTabKeyDown(event, 'calendar');\n        break;\n      default:\n        break;\n    }\n\n    if (handled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  _onTabKeyDown(event, section) {\n    // Stop propagation to avoid focus-trap\n    // listener when used in a modal dialog.\n    event.stopPropagation();\n\n    switch (section) {\n      case 'calendar':\n        if (event.shiftKey) {\n          event.preventDefault();\n\n          if (this.hasAttribute('fullscreen')) {\n            // Trap focus in the overlay\n            this.$.cancelButton.focus();\n          } else {\n            this.__focusInput();\n          }\n        }\n        break;\n      case 'today':\n        if (event.shiftKey) {\n          event.preventDefault();\n          this.focusDateElement();\n        }\n        break;\n      case 'cancel':\n        if (!event.shiftKey) {\n          event.preventDefault();\n\n          if (this.hasAttribute('fullscreen')) {\n            // Trap focus in the overlay\n            this.focusDateElement();\n          } else {\n            this.__focusInput();\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  __onTodayButtonKeyDown(event) {\n    if (event.key === 'Tab') {\n      this._onTabKeyDown(event, 'today');\n    }\n  }\n\n  __onCancelButtonKeyDown(event) {\n    if (event.key === 'Tab') {\n      this._onTabKeyDown(event, 'cancel');\n    }\n  }\n\n  __focusInput() {\n    this.dispatchEvent(new CustomEvent('focus-input', { bubbles: true, composed: true }));\n  }\n\n  __tryFocusDate() {\n    const dateToFocus = this.__pendingDateFocus;\n    if (dateToFocus) {\n      // Check the date element with tabindex=\"0\"\n      const dateElement = this.focusableDateElement;\n\n      if (dateElement && dateEquals(dateElement.date, this.__pendingDateFocus)) {\n        delete this.__pendingDateFocus;\n        dateElement.focus();\n      }\n    }\n  }\n\n  async focusDate(date, keepMonth) {\n    const dateToFocus = date || this.selectedDate || this.initialPosition || new Date();\n    this.focusedDate = dateToFocus;\n    if (!keepMonth) {\n      this._focusedMonthDate = dateToFocus.getDate();\n    }\n    await this.focusDateElement(false);\n  }\n\n  async focusDateElement(reveal = true) {\n    this.__pendingDateFocus = this.focusedDate;\n\n    // Wait for `vaadin-month-calendar` elements to be rendered\n    if (!this.calendars.length) {\n      await new Promise((resolve) => {\n        setTimeout(resolve);\n      });\n    }\n\n    // Reveal focused date unless it has been just set,\n    // which triggers `revealDate()` in the observer.\n    if (reveal) {\n      this.revealDate(this.focusedDate);\n    }\n\n    if (this._revealPromise) {\n      // Wait for focused date to be scrolled into view.\n      await this._revealPromise;\n    }\n\n    this.__tryFocusDate();\n  }\n\n  _focusClosestDate(focus) {\n    this.focusDate(getClosestDate(focus, [this.minDate, this.maxDate]));\n  }\n\n  _moveFocusByDays(days) {\n    const focus = this.focusedDate;\n    const dateToFocus = new Date(0, 0);\n    dateToFocus.setFullYear(focus.getFullYear());\n    dateToFocus.setMonth(focus.getMonth());\n    dateToFocus.setDate(focus.getDate() + days);\n\n    if (this._dateAllowed(dateToFocus, this.minDate, this.maxDate)) {\n      this.focusDate(dateToFocus);\n    } else if (this._dateAllowed(focus, this.minDate, this.maxDate)) {\n      // Move to min or max date\n      if (days > 0) {\n        // Down or right\n        this.focusDate(this.maxDate);\n      } else {\n        // Up or left\n        this.focusDate(this.minDate);\n      }\n    } else {\n      // Move to closest allowed date\n      this._focusClosestDate(focus);\n    }\n  }\n\n  _moveFocusByMonths(months) {\n    const focus = this.focusedDate;\n    const dateToFocus = new Date(0, 0);\n    dateToFocus.setFullYear(focus.getFullYear());\n    dateToFocus.setMonth(focus.getMonth() + months);\n\n    const targetMonth = dateToFocus.getMonth();\n\n    dateToFocus.setDate(this._focusedMonthDate || (this._focusedMonthDate = focus.getDate()));\n    if (dateToFocus.getMonth() !== targetMonth) {\n      dateToFocus.setDate(0);\n    }\n\n    if (this._dateAllowed(dateToFocus, this.minDate, this.maxDate)) {\n      this.focusDate(dateToFocus, true);\n    } else if (this._dateAllowed(focus, this.minDate, this.maxDate)) {\n      // Move to min or max date\n      if (months > 0) {\n        // Pagedown\n        this.focusDate(this.maxDate);\n      } else {\n        // Pageup\n        this.focusDate(this.minDate);\n      }\n    } else {\n      // Move to closest allowed date\n      this._focusClosestDate(focus);\n    }\n  }\n\n  _moveFocusInsideMonth(focusedDate, property) {\n    const dateToFocus = new Date(0, 0);\n    dateToFocus.setFullYear(focusedDate.getFullYear());\n\n    if (property === 'minDate') {\n      dateToFocus.setMonth(focusedDate.getMonth());\n      dateToFocus.setDate(1);\n    } else {\n      dateToFocus.setMonth(focusedDate.getMonth() + 1);\n      dateToFocus.setDate(0);\n    }\n\n    if (this._dateAllowed(dateToFocus, this.minDate, this.maxDate)) {\n      this.focusDate(dateToFocus);\n    } else if (this._dateAllowed(focusedDate, this.minDate, this.maxDate)) {\n      // Move to minDate or maxDate\n      this.focusDate(this[property]);\n    } else {\n      // Move to closest allowed date\n      this._focusClosestDate(focusedDate);\n    }\n  }\n\n  _dateAllowed(date, min, max) {\n    return (!min || date >= min) && (!max || date <= max);\n  }\n\n  _isTodayAllowed(min, max) {\n    const today = new Date();\n    const todayMidnight = new Date(0, 0);\n    todayMidnight.setFullYear(today.getFullYear());\n    todayMidnight.setMonth(today.getMonth());\n    todayMidnight.setDate(today.getDate());\n    return this._dateAllowed(todayMidnight, min, max);\n  }\n}\n\ncustomElements.define(DatePickerOverlayContent.is, DatePickerOverlayContent);\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { KeyboardMixin } from '@vaadin/component-base/src/keyboard-mixin.js';\nimport { MediaQueryController } from '@vaadin/component-base/src/media-query-controller.js';\nimport { DelegateFocusMixin } from '@vaadin/field-base/src/delegate-focus-mixin.js';\nimport { InputConstraintsMixin } from '@vaadin/field-base/src/input-constraints-mixin.js';\nimport { VirtualKeyboardController } from '@vaadin/field-base/src/virtual-keyboard-controller.js';\nimport { dateAllowed, dateEquals, extractDateParts, getClosestDate } from './vaadin-date-picker-helper.js';\n\n/**\n * @polymerMixin\n * @param {function(new:HTMLElement)} subclass\n */\nexport const DatePickerMixin = (subclass) =>\n  class VaadinDatePickerMixin extends ControllerMixin(\n    DelegateFocusMixin(InputConstraintsMixin(KeyboardMixin(subclass))),\n  ) {\n    static get properties() {\n      return {\n        /**\n         * The current selected date.\n         * @type {Date | undefined}\n         * @protected\n         */\n        _selectedDate: {\n          type: Date,\n        },\n\n        /**\n         * @type {Date | undefined}\n         * @protected\n         */\n        _focusedDate: Date,\n\n        /**\n         * Selected date.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string}\n         */\n        value: {\n          type: String,\n          notify: true,\n          value: '',\n        },\n\n        /**\n         * Date which should be visible when there is no value selected.\n         *\n         * The same date formats as for the `value` property are supported.\n         * @attr {string} initial-position\n         */\n        initialPosition: String,\n\n        /**\n         * Set true to open the date selector overlay.\n         */\n        opened: {\n          type: Boolean,\n          reflectToAttribute: true,\n          notify: true,\n          observer: '_openedChanged',\n        },\n\n        /**\n         * Set true to prevent the overlay from opening automatically.\n         * @attr {boolean} auto-open-disabled\n         */\n        autoOpenDisabled: Boolean,\n\n        /**\n         * Set true to display ISO-8601 week numbers in the calendar. Notice that\n         * displaying week numbers is only supported when `i18n.firstDayOfWeek`\n         * is 1 (Monday).\n         * @attr {boolean} show-week-numbers\n         */\n        showWeekNumbers: {\n          type: Boolean,\n        },\n\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _fullscreen: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * @type {string}\n         * @protected\n         */\n        _fullscreenMediaQuery: {\n          value: '(max-width: 420px), (max-height: 420px)',\n        },\n\n        /**\n         * The object used to localize this component.\n         * To change the default localization, replace the entire\n         * `i18n` object with a custom one.\n         *\n         * To update individual properties, extend the existing i18n object like so:\n         * ```\n         * datePicker.i18n = { ...datePicker.i18n, {\n         *   formatDate: date => { ... },\n         *   parseDate: value => { ... },\n         * }};\n         * ```\n         *\n         * The object has the following JSON structure and default values:\n         *\n         * ```\n         * {\n         *   // An array with the full names of months starting\n         *   // with January.\n         *   monthNames: [\n         *     'January', 'February', 'March', 'April', 'May',\n         *     'June', 'July', 'August', 'September',\n         *     'October', 'November', 'December'\n         *   ],\n         *\n         *   // An array of weekday names starting with Sunday. Used\n         *   // in screen reader announcements.\n         *   weekdays: [\n         *     'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n         *     'Thursday', 'Friday', 'Saturday'\n         *   ],\n         *\n         *   // An array of short weekday names starting with Sunday.\n         *   // Displayed in the calendar.\n         *   weekdaysShort: [\n         *     'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n         *   ],\n         *\n         *   // An integer indicating the first day of the week\n         *   // (0 = Sunday, 1 = Monday, etc.).\n         *   firstDayOfWeek: 0,\n         *\n         *   // Used in screen reader announcements along with week\n         *   // numbers, if they are displayed.\n         *   week: 'Week',\n         *\n         *   // Translation of the Calendar icon button title.\n         *   calendar: 'Calendar',\n         *\n         *   // Translation of the Today shortcut button text.\n         *   today: 'Today',\n         *\n         *   // Translation of the Cancel button text.\n         *   cancel: 'Cancel',\n         *\n         *   // A function to format given `Object` as\n         *   // date string. Object is in the format `{ day: ..., month: ..., year: ... }`\n         *   // Note: The argument month is 0-based. This means that January = 0 and December = 11.\n         *   formatDate: d => {\n         *     // returns a string representation of the given\n         *     // object in 'MM/DD/YYYY' -format\n         *   },\n         *\n         *   // A function to parse the given text to an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n         *   // Must properly parse (at least) text formatted by `formatDate`.\n         *   // Setting the property to null will disable keyboard input feature.\n         *   // Note: The argument month is 0-based. This means that January = 0 and December = 11.\n         *   parseDate: text => {\n         *     // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n         *     // an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n         *   }\n         *\n         *   // A function to format given `monthName` and\n         *   // `fullYear` integer as calendar title string.\n         *   formatTitle: (monthName, fullYear) => {\n         *     return monthName + ' ' + fullYear;\n         *   }\n         * }\n         * ```\n         *\n         * @type {!DatePickerI18n}\n         * @default {English/US}\n         */\n        i18n: {\n          type: Object,\n          value: () => {\n            return {\n              monthNames: [\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December',\n              ],\n              weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n              weekdaysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n              firstDayOfWeek: 0,\n              week: 'Week',\n              calendar: 'Calendar',\n              today: 'Today',\n              cancel: 'Cancel',\n              formatDate: (d) => {\n                const yearStr = String(d.year).replace(/\\d+/, (y) => '0000'.substr(y.length) + y);\n                return [d.month + 1, d.day, yearStr].join('/');\n              },\n              parseDate: (text) => {\n                const parts = text.split('/');\n                const today = new Date();\n                let date,\n                  month = today.getMonth(),\n                  year = today.getFullYear();\n\n                if (parts.length === 3) {\n                  year = parseInt(parts[2]);\n                  if (parts[2].length < 3 && year >= 0) {\n                    year += year < 50 ? 2000 : 1900;\n                  }\n                  month = parseInt(parts[0]) - 1;\n                  date = parseInt(parts[1]);\n                } else if (parts.length === 2) {\n                  month = parseInt(parts[0]) - 1;\n                  date = parseInt(parts[1]);\n                } else if (parts.length === 1) {\n                  date = parseInt(parts[0]);\n                }\n\n                if (date !== undefined) {\n                  return { day: date, month, year };\n                }\n              },\n              formatTitle: (monthName, fullYear) => {\n                return `${monthName} ${fullYear}`;\n              },\n            };\n          },\n        },\n\n        /**\n         * The earliest date that can be selected. All earlier dates will be disabled.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string | undefined}\n         */\n        min: {\n          type: String,\n        },\n\n        /**\n         * The latest date that can be selected. All later dates will be disabled.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string | undefined}\n         */\n        max: {\n          type: String,\n        },\n\n        /**\n         * The earliest date that can be selected. All earlier dates will be disabled.\n         * @type {Date | undefined}\n         * @protected\n         */\n        _minDate: {\n          type: Date,\n          computed: '__computeMinOrMaxDate(min)',\n        },\n\n        /**\n         * The latest date that can be selected. All later dates will be disabled.\n         * @type {Date | undefined}\n         * @protected\n         */\n        _maxDate: {\n          type: Date,\n          computed: '__computeMinOrMaxDate(max)',\n        },\n\n        /** @private */\n        _noInput: {\n          type: Boolean,\n          computed: '_isNoInput(inputElement, _fullscreen, _ios, i18n, opened, autoOpenDisabled)',\n        },\n\n        /** @private */\n        _ios: {\n          type: Boolean,\n          value: isIOS,\n        },\n\n        /** @private */\n        _focusOverlayOnOpen: Boolean,\n\n        /** @protected */\n        _overlayInitialized: Boolean,\n      };\n    }\n\n    static get observers() {\n      return [\n        '_selectedDateChanged(_selectedDate, i18n.formatDate)',\n        '_focusedDateChanged(_focusedDate, i18n.formatDate)',\n      ];\n    }\n\n    static get constraints() {\n      return [...super.constraints, 'min', 'max'];\n    }\n\n    /**\n     * Override a getter from `InputControlMixin` to make it optional\n     * and to prevent warning when a clear button is missing,\n     * for example when using <vaadin-date-picker-light>.\n     * @protected\n     * @return {Element | null | undefined}\n     */\n    get clearElement() {\n      return null;\n    }\n\n    /** @protected */\n    get _inputValue() {\n      return this.inputElement ? this.inputElement.value : undefined;\n    }\n\n    /** @protected */\n    set _inputValue(value) {\n      if (this.inputElement) {\n        this.inputElement.value = value;\n      }\n    }\n\n    /** @private */\n    get _nativeInput() {\n      if (this.inputElement) {\n        // TODO: support focusElement for backwards compatibility\n        return this.inputElement.focusElement || this.inputElement;\n      }\n      return null;\n    }\n\n    constructor() {\n      super();\n\n      this._boundOnClick = this._onClick.bind(this);\n      this._boundOnScroll = this._onScroll.bind(this);\n    }\n\n    /**\n     * Override an event listener from `DelegateFocusMixin`\n     * @protected\n     */\n    _onFocus(event) {\n      super._onFocus(event);\n\n      if (this._noInput) {\n        event.target.blur();\n      }\n    }\n\n    /**\n     * Override an event listener from `DelegateFocusMixin`\n     * @protected\n     */\n    _onBlur(event) {\n      super._onBlur(event);\n\n      if (!this.opened) {\n        if (this.autoOpenDisabled) {\n          const parsedDate = this._getParsedDate();\n          if (this._isValidDate(parsedDate)) {\n            this._selectDate(parsedDate);\n          }\n        }\n\n        this.validate();\n\n        if (this._inputValue === '' && this.value !== '') {\n          this.value = '';\n        }\n      }\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addEventListener('click', this._boundOnClick);\n\n      this.addController(\n        new MediaQueryController(this._fullscreenMediaQuery, (matches) => {\n          this._fullscreen = matches;\n        }),\n      );\n\n      this.addController(new VirtualKeyboardController(this));\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      this.opened = false;\n    }\n\n    /**\n     * Override Polymer lifecycle callback to dispatch `change` event if needed.\n     * This is necessary to ensure `change` is fired after `value-changed`.\n     *\n     * @param {!Object} currentProps Current accessor values\n     * @param {?Object} changedProps Properties changed since the last call\n     * @param {?Object} oldProps Previous values for each changed property\n     * @protected\n     * @override\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) {\n      super._propertiesChanged(currentProps, changedProps, oldProps);\n\n      if ('value' in changedProps && this.__dispatchChange) {\n        this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n        this.__dispatchChange = false;\n      }\n    }\n\n    /**\n     * Opens the dropdown.\n     */\n    open() {\n      if (!this.disabled && !this.readonly) {\n        this.opened = true;\n      }\n    }\n\n    /**\n     * Closes the dropdown.\n     */\n    close() {\n      if (this._overlayInitialized || this.autoOpenDisabled) {\n        this.$.overlay.close();\n      }\n    }\n\n    /** @protected */\n    _initOverlay() {\n      this.$.overlay.removeAttribute('disable-upgrade');\n      this._overlayInitialized = true;\n\n      this.$.overlay.addEventListener('opened-changed', (e) => {\n        this.opened = e.detail.value;\n      });\n\n      this.$.overlay.addEventListener('vaadin-overlay-escape-press', () => {\n        this._focusedDate = this._selectedDate;\n        this._close();\n      });\n\n      this._overlayContent.addEventListener('close', () => {\n        this._close();\n      });\n\n      this._overlayContent.addEventListener('focus-input', this._focusAndSelect.bind(this));\n\n      // User confirmed selected date by clicking the calendar.\n      this._overlayContent.addEventListener('date-tap', (e) => {\n        this.__userConfirmedDate = true;\n\n        this._selectDate(e.detail.date);\n\n        this._close();\n      });\n\n      // User confirmed selected date by pressing Enter or Today.\n      this._overlayContent.addEventListener('date-selected', (e) => {\n        this.__userConfirmedDate = true;\n\n        this._selectDate(e.detail.date);\n      });\n\n      // Set focus-ring attribute when moving focus to the overlay\n      // by pressing Tab or arrow key, after opening it on click.\n      this._overlayContent.addEventListener('focusin', () => {\n        if (this._keyboardActive) {\n          this._setFocused(true);\n        }\n      });\n\n      this.addEventListener('mousedown', () => this.__bringToFront());\n      this.addEventListener('touchstart', () => this.__bringToFront());\n    }\n\n    /**\n     * Returns true if the current input value satisfies all constraints (if any)\n     *\n     * Override the `checkValidity` method for custom validations.\n     *\n     * @return {boolean} True if the value is valid\n     */\n    checkValidity() {\n      const inputValid =\n        !this._inputValue ||\n        (!!this._selectedDate && this._inputValue === this._getFormattedDate(this.i18n.formatDate, this._selectedDate));\n      const minMaxValid = !this._selectedDate || dateAllowed(this._selectedDate, this._minDate, this._maxDate);\n\n      let inputValidity = true;\n      if (this.inputElement) {\n        if (this.inputElement.checkValidity) {\n          inputValidity = this.inputElement.checkValidity();\n        } else if (this.inputElement.validate) {\n          // Iron-form-elements have the validate API\n          inputValidity = this.inputElement.validate();\n        }\n      }\n\n      return inputValid && minMaxValid && inputValidity;\n    }\n\n    /**\n     * Override method inherited from `FocusMixin`\n     * to not call `_setFocused(true)` when focus\n     * is restored after closing overlay on click,\n     * and to avoid removing `focus-ring` attribute.\n     *\n     * @param {!FocusEvent} _event\n     * @return {boolean}\n     * @protected\n     * @override\n     */\n    _shouldSetFocus(_event) {\n      return !this._shouldKeepFocusRing;\n    }\n\n    /**\n     * Override method inherited from `FocusMixin`\n     * to prevent removing the `focused` attribute:\n     * - when moving focus to the overlay content,\n     * - when closing on date click / outside click.\n     *\n     * @param {!FocusEvent} _event\n     * @return {boolean}\n     * @protected\n     * @override\n     */\n    _shouldRemoveFocus(_event) {\n      return !this.opened;\n    }\n\n    /**\n     * Override method inherited from `FocusMixin`\n     * to store the `focus-ring` state to restore\n     * it later when closing on outside click.\n     *\n     * @param {boolean} focused\n     * @protected\n     * @override\n     */\n    _setFocused(focused) {\n      super._setFocused(focused);\n\n      this._shouldKeepFocusRing = focused && this._keyboardActive;\n    }\n\n    /**\n     * Select date on user interaction and set the flag\n     * to fire change event if necessary.\n     *\n     * @param {Date} dateToSelect\n     * @protected\n     */\n    _selectDate(dateToSelect) {\n      const value = this._formatISO(dateToSelect);\n\n      // Only set flag if the value will change.\n      if (this.value !== value) {\n        this.__dispatchChange = true;\n      }\n\n      this._selectedDate = dateToSelect;\n    }\n\n    /** @private */\n    _close() {\n      this._focus();\n      this.close();\n    }\n\n    /** @private */\n    __bringToFront() {\n      requestAnimationFrame(() => {\n        this.$.overlay.bringToFront();\n      });\n    }\n\n    /** @private */\n    _parseDate(str) {\n      // Parsing with RegExp to ensure correct format\n      const parts = /^([-+]\\d{1}|\\d{2,4}|[-+]\\d{6})-(\\d{1,2})-(\\d{1,2})$/.exec(str);\n      if (!parts) {\n        return;\n      }\n\n      const date = new Date(0, 0); // Wrong date (1900-01-01), but with midnight in local time\n      date.setFullYear(parseInt(parts[1], 10));\n      date.setMonth(parseInt(parts[2], 10) - 1);\n      date.setDate(parseInt(parts[3], 10));\n      return date;\n    }\n\n    /** @private */\n    // eslint-disable-next-line max-params\n    _isNoInput(inputElement, fullscreen, ios, i18n, opened, autoOpenDisabled) {\n      // On fullscreen mode, text input is disabled if auto-open isn't disabled or\n      // whenever the dropdown is opened\n      const noInputOnFullscreenMode = fullscreen && (!autoOpenDisabled || opened);\n      // On iOS, text input is disabled whenever the dropdown is opened, because\n      // the virtual keyboard doesn't affect the viewport metrics and thus the\n      // dropdown could get covered by the keyboard.\n      const noInputOnIos = ios && opened;\n\n      return !inputElement || noInputOnFullscreenMode || noInputOnIos || !i18n.parseDate;\n    }\n\n    /** @private */\n    _formatISO(date) {\n      if (!(date instanceof Date)) {\n        return '';\n      }\n\n      const pad = (num, fmt = '00') => (fmt + num).substr((fmt + num).length - fmt.length);\n\n      let yearSign = '';\n      let yearFmt = '0000';\n      let yearAbs = date.getFullYear();\n      if (yearAbs < 0) {\n        yearAbs = -yearAbs;\n        yearSign = '-';\n        yearFmt = '000000';\n      } else if (date.getFullYear() >= 10000) {\n        yearSign = '+';\n        yearFmt = '000000';\n      }\n\n      const year = yearSign + pad(yearAbs, yearFmt);\n      const month = pad(date.getMonth() + 1);\n      const day = pad(date.getDate());\n      return [year, month, day].join('-');\n    }\n\n    /** @protected */\n    _inputElementChanged(input) {\n      super._inputElementChanged(input);\n      if (input) {\n        input.autocomplete = 'off';\n        input.setAttribute('role', 'combobox');\n        input.setAttribute('aria-haspopup', 'dialog');\n        input.setAttribute('aria-expanded', !!this.opened);\n        this._applyInputValue(this._selectedDate);\n      }\n    }\n\n    /** @protected */\n    _openedChanged(opened) {\n      if (opened && !this._overlayInitialized) {\n        this._initOverlay();\n      }\n      if (this._overlayInitialized) {\n        this.$.overlay.opened = opened;\n      }\n      if (this.inputElement) {\n        this.inputElement.setAttribute('aria-expanded', opened);\n      }\n    }\n\n    /** @private */\n    _selectedDateChanged(selectedDate, formatDate) {\n      if (selectedDate === undefined || formatDate === undefined) {\n        return;\n      }\n      const value = this._formatISO(selectedDate);\n\n      if (!this.__keepInputValue) {\n        this._applyInputValue(selectedDate);\n      }\n\n      if (value !== this.value) {\n        this.validate();\n        this.value = value;\n      }\n      this._ignoreFocusedDateChange = true;\n      this._focusedDate = selectedDate;\n      this._ignoreFocusedDateChange = false;\n    }\n\n    /** @private */\n    _focusedDateChanged(focusedDate, formatDate) {\n      if (focusedDate === undefined || formatDate === undefined) {\n        return;\n      }\n      if (!this._ignoreFocusedDateChange && !this._noInput) {\n        this._applyInputValue(focusedDate);\n      }\n    }\n\n    /** @private */\n    __getOverlayTheme(theme, overlayInitialized) {\n      if (overlayInitialized) {\n        return theme;\n      }\n    }\n\n    /**\n     * Override the value observer from `InputMixin` to implement custom\n     * handling of the `value` property. The date-picker doesn't forward\n     * the value directly to the input like the default implementation of `InputMixin`.\n     * Instead, it parses the value into a date, puts it in `_selectedDate` which\n     * is then displayed in the input with respect to the specified date format.\n     *\n     * @param {string | undefined} value\n     * @param {string | undefined} oldValue\n     * @protected\n     * @override\n     */\n    _valueChanged(value, oldValue) {\n      const newDate = this._parseDate(value);\n\n      if (value && !newDate) {\n        // The new value cannot be parsed, revert the old value.\n        this.value = oldValue;\n        return;\n      }\n\n      if (value) {\n        if (!dateEquals(this._selectedDate, newDate)) {\n          // Update the date instance only if the date has actually changed.\n          this._selectedDate = newDate;\n\n          if (oldValue !== undefined) {\n            // Validate only if `value` changes after initialization.\n            this.validate();\n          }\n        }\n      } else {\n        this._selectedDate = null;\n      }\n\n      this._toggleHasValue(this._hasValue);\n    }\n\n    /** @protected */\n    _onOverlayOpened() {\n      const parsedInitialPosition = this._parseDate(this.initialPosition);\n\n      const initialPosition =\n        this._selectedDate || this._overlayContent.initialPosition || parsedInitialPosition || new Date();\n\n      if (parsedInitialPosition || dateAllowed(initialPosition, this._minDate, this._maxDate)) {\n        this._overlayContent.initialPosition = initialPosition;\n      } else {\n        this._overlayContent.initialPosition = getClosestDate(initialPosition, [this._minDate, this._maxDate]);\n      }\n\n      this._overlayContent.scrollToDate(this._overlayContent.focusedDate || this._overlayContent.initialPosition);\n      // Have a default focused date\n      this._ignoreFocusedDateChange = true;\n      this._overlayContent.focusedDate = this._overlayContent.focusedDate || this._overlayContent.initialPosition;\n      this._ignoreFocusedDateChange = false;\n\n      window.addEventListener('scroll', this._boundOnScroll, true);\n\n      if (this._focusOverlayOnOpen) {\n        this._overlayContent.focusDateElement();\n        this._focusOverlayOnOpen = false;\n      } else {\n        this._focus();\n      }\n\n      if (this._noInput && this.focusElement) {\n        this.focusElement.blur();\n        this._overlayContent.focusDateElement();\n      }\n    }\n\n    /** @private */\n    _selectParsedOrFocusedDate() {\n      // Select the parsed input or focused date\n      this._ignoreFocusedDateChange = true;\n      if (this.i18n.parseDate) {\n        const inputValue = this._inputValue || '';\n        const parsedDate = this._getParsedDate(inputValue);\n\n        if (this._isValidDate(parsedDate)) {\n          this._selectDate(parsedDate);\n        } else {\n          this.__keepInputValue = true;\n          this._selectDate(null);\n          this._selectedDate = null;\n          this.__keepInputValue = false;\n        }\n      } else if (this._focusedDate) {\n        this._selectDate(this._focusedDate);\n      }\n      this._ignoreFocusedDateChange = false;\n    }\n\n    /** @protected */\n    _onOverlayClosed() {\n      window.removeEventListener('scroll', this._boundOnScroll, true);\n\n      // No need to select date on close if it was confirmed by the user.\n      if (this.__userConfirmedDate) {\n        this.__userConfirmedDate = false;\n      } else {\n        this._selectParsedOrFocusedDate();\n      }\n\n      if (this._nativeInput && this._nativeInput.selectionStart) {\n        this._nativeInput.selectionStart = this._nativeInput.selectionEnd;\n      }\n      // No need to revalidate the value after `_selectedDateChanged`\n      // Needed in case the value was not changed: open and close dropdown.\n      if (!this.value) {\n        this.validate();\n      }\n    }\n\n    /** @private */\n    _onScroll(e) {\n      if (e.target === window || !this._overlayContent.contains(e.target)) {\n        this._overlayContent._repositionYearScroller();\n      }\n    }\n\n    /** @protected */\n    _focus() {\n      if (!this._noInput) {\n        this.inputElement.focus();\n      }\n    }\n\n    /** @private */\n    _focusAndSelect() {\n      this._focus();\n      this._setSelectionRange(0, this._inputValue.length);\n    }\n\n    /** @private */\n    _applyInputValue(date) {\n      this._inputValue = date ? this._getFormattedDate(this.i18n.formatDate, date) : '';\n    }\n\n    /** @private */\n    _getFormattedDate(formatDate, date) {\n      return formatDate(extractDateParts(date));\n    }\n\n    /** @private */\n    _setSelectionRange(a, b) {\n      if (this._nativeInput && this._nativeInput.setSelectionRange) {\n        this._nativeInput.setSelectionRange(a, b);\n      }\n    }\n\n    /** @private */\n    _isValidDate(d) {\n      return d && !isNaN(d.getTime());\n    }\n\n    /**\n     * Override an event listener from `InputConstraintsMixin`\n     * to have date-picker fully control when to fire a change event.\n     * @protected\n     */\n    _onChange(event) {\n      // For change event on the native <input> blur, after the input is cleared,\n      // we schedule change event to be dispatched on date-picker blur.\n      if (this._inputValue === '') {\n        this.__dispatchChange = true;\n      }\n\n      event.stopPropagation();\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onClick(event) {\n      // Clear button click is handled in separate listener\n      // but bubbles to the host, so we need to ignore it.\n      if (!this._isClearButton(event)) {\n        this._onHostClick(event);\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onHostClick(event) {\n      if (!this.autoOpenDisabled || this._noInput) {\n        event.preventDefault();\n        this.open();\n      }\n    }\n\n    /**\n     * Override an event listener from `InputControlMixin`\n     * to validate and dispatch change on clear.\n     * @protected\n     */\n    _onClearButtonClick(event) {\n      event.preventDefault();\n      this.value = '';\n      this._inputValue = '';\n      this.validate();\n      this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     * @param {KeyboardEvent} e\n     * @protected\n     * @override\n     */\n    _onKeyDown(e) {\n      super._onKeyDown(e);\n\n      if (this._noInput) {\n        // The input element cannot be readonly as it would conflict with\n        // the required attribute. Both are not allowed on an input element.\n        // Therefore we prevent default on most keydown events.\n        const allowedKeys = [\n          9, // Tab\n        ];\n        if (allowedKeys.indexOf(e.keyCode) === -1) {\n          e.preventDefault();\n        }\n      }\n\n      switch (e.key) {\n        case 'ArrowDown':\n        case 'ArrowUp':\n          // Prevent scrolling the page with arrows\n          e.preventDefault();\n          if (this.opened) {\n            // The overlay can be opened with ctrl + option + shift in VoiceOver\n            // and without this logic, it won't be possible to focus the dialog opened this way.\n            this._overlayContent.focusDateElement();\n          } else {\n            this._focusOverlayOnOpen = true;\n            this.open();\n          }\n          break;\n        case 'Tab':\n          if (this.opened) {\n            e.preventDefault();\n            e.stopPropagation();\n            // Clear the selection range (remains visible on IE)\n            this._setSelectionRange(0, 0);\n            if (e.shiftKey) {\n              this._overlayContent.focusCancel();\n            } else {\n              this._overlayContent.focusDateElement();\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     *\n     * @param {!KeyboardEvent} _event\n     * @protected\n     * @override\n     */\n    _onEnter(_event) {\n      const parsedDate = this._getParsedDate();\n      const isValidDate = this._isValidDate(parsedDate);\n      if (this.opened) {\n        if (this._overlayInitialized && this._overlayContent.focusedDate && isValidDate) {\n          this._selectDate(this._overlayContent.focusedDate);\n        }\n        this.close();\n      } else if (!isValidDate && this.inputElement.value !== '') {\n        this.validate();\n      } else {\n        const oldValue = this.value;\n        this._selectParsedOrFocusedDate();\n        if (oldValue === this.value) {\n          this.validate();\n        }\n      }\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     * Do not call `super` in order to override clear\n     * button logic defined in `InputControlMixin`.\n     *\n     * @param {!KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onEscape(event) {\n      // Closing overlay is handled in vaadin-overlay-escape-press event listener.\n      if (this.opened) {\n        return;\n      }\n\n      if (this.clearButtonVisible && !!this.value) {\n        // Stop event from propagating to the host element\n        // to avoid closing dialog when clearing on Esc\n        event.stopPropagation();\n        this._onClearButtonClick(event);\n        return;\n      }\n\n      if (this.autoOpenDisabled) {\n        // Do not restore selected date if Esc was pressed after clearing input field\n        if (this.inputElement.value === '') {\n          this._selectDate(null);\n        }\n        this._applyInputValue(this._selectedDate);\n      } else {\n        this._focusedDate = this._selectedDate;\n        this._selectParsedOrFocusedDate();\n      }\n    }\n\n    /** @private */\n    _getParsedDate(inputValue = this._inputValue) {\n      const dateObject = this.i18n.parseDate && this.i18n.parseDate(inputValue);\n      const parsedDate = dateObject && this._parseDate(`${dateObject.year}-${dateObject.month + 1}-${dateObject.day}`);\n      return parsedDate;\n    }\n\n    /** @protected */\n    _isClearButton(event) {\n      return event.composedPath()[0] === this.clearElement;\n    }\n\n    /**\n     * Override an event listener from `InputMixin`\n     * @protected\n     */\n    _onInput() {\n      if (!this.opened && this.inputElement.value && !this.autoOpenDisabled) {\n        this.open();\n      }\n      this._userInputValueChanged();\n    }\n\n    /** @private */\n    _userInputValueChanged() {\n      if (this._inputValue) {\n        const parsedDate = this._getParsedDate();\n\n        if (this._isValidDate(parsedDate)) {\n          this._ignoreFocusedDateChange = true;\n          if (!dateEquals(parsedDate, this._focusedDate)) {\n            this._focusedDate = parsedDate;\n          }\n          this._ignoreFocusedDateChange = false;\n        }\n      }\n    }\n\n    /** @private */\n    get _overlayContent() {\n      return this.$.overlay.content.querySelector('#overlay-content');\n    }\n\n    /** @private */\n    __computeMinOrMaxDate(dateString) {\n      return this._parseDate(dateString);\n    }\n\n    /**\n     * Fired when the user commits a value change.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when `value` property value changes.\n     *\n     * @event value-changed\n     */\n\n    /**\n     * Fired when `opened` property value changes.\n     *\n     * @event opened-changed\n     */\n  };\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/src/vaadin-input-container.js';\nimport './vaadin-date-picker-overlay.js';\nimport './vaadin-date-picker-overlay-content.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { InputControlMixin } from '@vaadin/field-base/src/input-control-mixin.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\nimport { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DatePickerMixin } from './vaadin-date-picker-mixin.js';\nimport { datePickerStyles } from './vaadin-date-picker-styles.js';\n\nregisterStyles('vaadin-date-picker', [inputFieldShared, datePickerStyles], { moduleId: 'vaadin-date-picker-styles' });\n\n/**\n * `<vaadin-date-picker>` is an input field that allows to enter a date by typing or by selecting from a calendar overlay.\n *\n * ```html\n * <vaadin-date-picker label=\"Birthday\"></vaadin-date-picker>\n * ```\n *\n * ```js\n * datePicker.value = '2016-03-02';\n * ```\n *\n * When the selected `value` is changed, a `value-changed` event is triggered.\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Custom property                | Description                | Default\n * -------------------------------|----------------------------|---------\n * `--vaadin-field-default-width` | Default width of the field | `12em`\n *\n * `<vaadin-date-picker>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.\n * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.\n *\n * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:\n *\n * Part name             | Description\n * ----------------------|--------------------\n * `toggle-button`       | Toggle button\n * `overlay-content`     | The overlay element\n *\n * In addition to `<vaadin-text-field>` state attributes, the following state attributes are available for theming:\n *\n * Attribute  | Description                                      | Part name\n * -----------|--------------------------------------------------|-----------\n * `opened`   | Set when the date selector overlay is opened     | :host\n * `today`    | Set on the date corresponding to the current day | date\n * `selected` | Set on the selected date                         | date\n *\n * If you want to replace the default `<input>` and its container with a custom implementation to get full control\n * over the input field, consider using the [`<vaadin-date-picker-light>`](#/elements/vaadin-date-picker-light) element.\n *\n * ### Internal components\n *\n * In addition to `<vaadin-date-picker>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-date-picker-overlay>` - has the same API as [`<vaadin-overlay>`](#/elements/vaadin-overlay).\n * - `<vaadin-date-picker-overlay-content>`\n * - `<vaadin-month-calendar>`\n * - [`<vaadin-input-container>`](#/elements/vaadin-input-container) - an internal element wrapping the input.\n *\n * In order to style the overlay content, use `<vaadin-date-picker-overlay-content>` shadow DOM parts:\n *\n * Part name             | Description\n * ----------------------|--------------------\n * `overlay-header`      | Fullscreen mode header\n * `label`               | Fullscreen mode value/label\n * `clear-button`        | Fullscreen mode clear button\n * `toggle-button`       | Fullscreen mode toggle button\n * `years-toggle-button` | Fullscreen mode years scroller toggle\n * `months`              | Months scroller\n * `years`               | Years scroller\n * `toolbar`             | Footer bar with buttons\n * `today-button`        | Today button\n * `cancel-button`       | Cancel button\n * `month`               | Month calendar\n * `year-number`         | Year number\n * `year-separator`      | Year separator\n *\n * In order to style the month calendar, use `<vaadin-month-calendar>` shadow DOM parts:\n *\n * Part name             | Description\n * ----------------------|--------------------\n * `month-header`        | Month title\n * `weekdays`            | Weekday container\n * `weekday`             | Weekday element\n * `week-numbers`        | Week numbers container\n * `week-number`         | Week number element\n * `date`                | Date element\n *\n * Note: the `theme` attribute value set on `<vaadin-date-picker>` is\n * propagated to the internal components listed above.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes InputControlMixin\n * @mixes DatePickerMixin\n */\nclass DatePicker extends DatePickerMixin(InputControlMixin(ThemableMixin(ElementMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-date-picker';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host([opened]) {\n          pointer-events: auto;\n        }\n      </style>\n\n      <div class=\"vaadin-date-picker-container\">\n        <div part=\"label\">\n          <slot name=\"label\"></slot>\n          <span part=\"required-indicator\" aria-hidden=\"true\" on-click=\"focus\"></span>\n        </div>\n\n        <vaadin-input-container\n          part=\"input-field\"\n          readonly=\"[[readonly]]\"\n          disabled=\"[[disabled]]\"\n          invalid=\"[[invalid]]\"\n          theme$=\"[[_theme]]\"\n        >\n          <slot name=\"prefix\" slot=\"prefix\"></slot>\n          <slot name=\"input\"></slot>\n          <div id=\"clearButton\" part=\"clear-button\" slot=\"suffix\" aria-hidden=\"true\"></div>\n          <div part=\"toggle-button\" slot=\"suffix\" aria-hidden=\"true\" on-click=\"_toggle\"></div>\n        </vaadin-input-container>\n\n        <div part=\"helper-text\">\n          <slot name=\"helper\"></slot>\n        </div>\n\n        <div part=\"error-message\">\n          <slot name=\"error-message\"></slot>\n        </div>\n      </div>\n\n      <vaadin-date-picker-overlay\n        id=\"overlay\"\n        fullscreen$=\"[[_fullscreen]]\"\n        theme$=\"[[__getOverlayTheme(_theme, _overlayInitialized)]]\"\n        on-vaadin-overlay-open=\"_onOverlayOpened\"\n        on-vaadin-overlay-closing=\"_onOverlayClosed\"\n        restore-focus-on-close\n        restore-focus-node=\"[[inputElement]]\"\n        disable-upgrade\n      >\n        <template>\n          <vaadin-date-picker-overlay-content\n            id=\"overlay-content\"\n            i18n=\"[[i18n]]\"\n            fullscreen$=\"[[_fullscreen]]\"\n            label=\"[[label]]\"\n            selected-date=\"[[_selectedDate]]\"\n            focused-date=\"{{_focusedDate}}\"\n            show-week-numbers=\"[[showWeekNumbers]]\"\n            min-date=\"[[_minDate]]\"\n            max-date=\"[[_maxDate]]\"\n            part=\"overlay-content\"\n            theme$=\"[[__getOverlayTheme(_theme, _overlayInitialized)]]\"\n          ></vaadin-date-picker-overlay-content>\n        </template>\n      </vaadin-date-picker-overlay>\n    `;\n  }\n\n  /**\n   * Used by `InputControlMixin` as a reference to the clear button element.\n   * @protected\n   * @return {!HTMLElement}\n   */\n  get clearElement() {\n    return this.$.clearButton;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addController(\n      new InputController(this, (input) => {\n        this._setInputElement(input);\n        this._setFocusElement(input);\n        this.stateTarget = input;\n        this.ariaTarget = input;\n      }),\n    );\n    this.addController(new LabelledInputController(this.inputElement, this._labelController));\n\n    const toggleButton = this.shadowRoot.querySelector('[part=\"toggle-button\"]');\n    toggleButton.addEventListener('mousedown', (e) => e.preventDefault());\n  }\n\n  /** @protected */\n  _initOverlay() {\n    super._initOverlay();\n\n    this.$.overlay.addEventListener('vaadin-overlay-close', this._onVaadinOverlayClose.bind(this));\n  }\n\n  /** @private */\n  _onVaadinOverlayClose(e) {\n    if (e.detail.sourceEvent && e.detail.sourceEvent.composedPath().includes(this)) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  _toggle(e) {\n    e.stopPropagation();\n    this[this._overlayInitialized && this.$.overlay.opened ? 'close' : 'open']();\n  }\n\n  // Workaround https://github.com/vaadin/web-components/issues/2855\n  /** @protected */\n  _openedChanged(opened) {\n    super._openedChanged(opened);\n\n    this.$.overlay.positionTarget = this.shadowRoot.querySelector('[part=\"input-field\"]');\n    this.$.overlay.noVerticalOverlap = true;\n  }\n}\n\ncustomElements.define(DatePicker.is, DatePicker);\n\nexport { DatePicker };\n"],
  "mappings": "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",
  "names": ["date", "inputFieldShared"]
}
