import {
  ListMixin
} from "./chunk-QAHWQ2NB.js";
import {
  ControllerMixin
} from "./chunk-SG4ORNH2.js";
import {
  ElementMixin
} from "./chunk-PT6BHIKU.js";
import {
  ThemableMixin,
  registerStyles
} from "./chunk-SPVNJBW3.js";
import {
  css
} from "./chunk-BVJZYYEF.js";
import {
  PolymerElement,
  html
} from "./chunk-ZKSNVHJS.js";

// node_modules/@vaadin/list-box/theme/lumo/vaadin-list-box-styles.js
registerStyles(
  "vaadin-list-box",
  css`
    :host {
      -webkit-tap-highlight-color: transparent;
      --_lumo-item-selected-icon-display: var(--_lumo-list-box-item-selected-icon-display, block);
    }

    /* Dividers */
    [part='items'] ::slotted(hr) {
      height: 1px;
      border: 0;
      padding: 0;
      margin: var(--lumo-space-s) var(--lumo-border-radius-m);
      background-color: var(--lumo-contrast-10pct);
    }
  `,
  { moduleId: "lumo-list-box" }
);

// node_modules/@vaadin/vaadin-list-mixin/vaadin-multi-select-list-mixin.js
var MultiSelectListMixin = (superClass) => class VaadinMultiSelectListMixin extends ListMixin(superClass) {
  static get properties() {
    return {
      multiple: {
        type: Boolean,
        value: false,
        reflectToAttribute: true,
        observer: "_multipleChanged"
      },
      selectedValues: {
        type: Array,
        notify: true,
        value: () => []
      }
    };
  }
  static get observers() {
    return [`_enhanceMultipleItems(items, multiple, selected, selectedValues, selectedValues.*)`];
  }
  ready() {
    this.addEventListener("click", (e) => this._onMultipleClick(e));
    super.ready();
  }
  _enhanceMultipleItems(items, multiple, selected, selectedValues) {
    if (!items || !multiple) {
      return;
    }
    if (selectedValues) {
      const selectedItems = selectedValues.map((selectedId) => items[selectedId]);
      items.forEach((item) => {
        item.selected = selectedItems.includes(item);
      });
    }
    this._scrollToLastSelectedItem();
  }
  _scrollToLastSelectedItem() {
    const lastSelectedItem = this.selectedValues.slice(-1)[0];
    if (lastSelectedItem && !lastSelectedItem.disabled) {
      this._scrollToItem(lastSelectedItem);
    }
  }
  _onMultipleClick(event) {
    const item = this._filterItems(event.composedPath())[0];
    const idx = item && !item.disabled ? this.items.indexOf(item) : -1;
    if (idx < 0 || !this.multiple) {
      return;
    }
    event.preventDefault();
    if (this.selectedValues.includes(idx)) {
      this.selectedValues = this.selectedValues.filter((v) => v !== idx);
    } else {
      this.selectedValues = this.selectedValues.concat(idx);
    }
  }
  _multipleChanged(value, oldValue) {
    if (!value && oldValue) {
      this.selectedValues = [];
      this.items.forEach((item) => {
        item.selected = false;
      });
    }
    if (value && !oldValue && this.selected !== void 0) {
      this.selectedValues = [...this.selectedValues, this.selected];
      this.selected = void 0;
    }
  }
};

// node_modules/@vaadin/list-box/src/vaadin-list-box.js
var ListBox = class extends ElementMixin(MultiSelectListMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {
  static get template() {
    return html`
      <style>
        :host {
          display: flex;
        }

        :host([hidden]) {
          display: none !important;
        }

        [part='items'] {
          height: 100%;
          width: 100%;
          overflow-y: auto;
          -webkit-overflow-scrolling: touch;
        }
      </style>
      <div part="items">
        <slot></slot>
      </div>
    `;
  }
  static get is() {
    return "vaadin-list-box";
  }
  static get properties() {
    return {
      orientation: {
        readOnly: true
      }
    };
  }
  constructor() {
    super();
    this.focused;
  }
  ready() {
    super.ready();
    this.setAttribute("role", "list");
    setTimeout(this._checkImport.bind(this), 2e3);
  }
  get _scrollerElement() {
    return this.shadowRoot.querySelector('[part="items"]');
  }
  _checkImport() {
    const item = this.querySelector("vaadin-item");
    if (item && !(item instanceof PolymerElement)) {
      console.warn(`Make sure you have imported the vaadin-item element.`);
    }
  }
};
customElements.define(ListBox.is, ListBox);

export {
  ListBox
};
/**
 * @license
 * Copyright (c) 2017 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=chunk-H44FQUHM.js.map
