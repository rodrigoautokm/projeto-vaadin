{
  "version": 3,
  "sources": ["../../@webcomponents/shadycss/src/document-wait.js", "../../@webcomponents/shadycss/src/custom-style-interface.js", "../../@webcomponents/shadycss/src/common-regex.js", "../../@webcomponents/shadycss/src/common-utils.js", "../../@webcomponents/shadycss/src/style-settings.js", "../../@webcomponents/shadycss/entrypoints/custom-style-interface.js", "../../@polymer/polymer/lib/elements/custom-style.js"],
  "sourcesContent": ["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady =\n  (window['HTMLImports'] && window['HTMLImports']['whenReady']) || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function () {\n    if (whenReady) {\n      whenReady(callback);\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {\n          resolveFn = resolve;\n        });\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function () {\n        callback && callback();\n      });\n    }\n  });\n}\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    // NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;\n    documentWait(() => {\n      if (window['ShadyCSS']['flushCustomStyles']) {\n        window['ShadyCSS']['flushCustomStyles']();\n      }\n    });\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */ (style[\n          '__appliedElement'\n        ] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\n/* eslint-disable no-self-assign */\nCustomStyleInterface.prototype['addCustomStyle'] =\n  CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] =\n  CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] =\n  CustomStyleInterface.prototype.processStyles;\n/* eslint-enable no-self-assign */\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    },\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  },\n});\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport const CustomStyleInterfaceInterface = {};\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {MIXIN_MATCH, VAR_ASSIGN} from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(\n  window['ShadyDOM'] && window['ShadyDOM']['inUse']\n);\n/** @type {boolean} */\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings.shimcssproperties) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ =\n      nativeShadow ||\n      Boolean(\n        !navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n          window.CSS &&\n          CSS.supports &&\n          CSS.supports('box-shadow', '0 0 0 var(--foo)')\n      );\n  }\n}\n\n/** @type {string | undefined} */\nexport let cssBuild;\nif (window.ShadyCSS && window.ShadyCSS.cssBuild !== undefined) {\n  cssBuild = window.ShadyCSS.cssBuild;\n}\n\n/** @type {boolean} */\nexport const disableRuntime = Boolean(\n  window.ShadyCSS && window.ShadyCSS.disableRuntime\n);\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */ (nativeCssVariables_);\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport CustomStyleInterface from '../src/custom-style-interface.js';\n// prettier-ignore\nimport {getComputedStyleValue, updateNativeProperties} from '../src/common-utils.js';\n// prettier-ignore\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\nconst customStyleInterface = new CustomStyleInterface();\n\nif (!window.ShadyCSS) {\n  window.ShadyCSS = {\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplate(template, elementName, elementExtends) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     */\n    prepareTemplateDom(template, elementName) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplateStyles(template, elementName, elementExtends) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {Element} element\n     * @param {Object=} properties\n     */\n    styleSubtree(element, properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(element, properties);\n    },\n\n    /**\n     * @param {Element} element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    styleElement(element) {\n      customStyleInterface.processStyles();\n    },\n\n    /**\n     * @param {Object=} properties\n     */\n    styleDocument(properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(document.body, properties);\n    },\n\n    /**\n     * @param {Element} element\n     * @param {string} property\n     * @return {string}\n     */\n    getComputedStyleValue(element, property) {\n      return getComputedStyleValue(element, property);\n    },\n\n    flushCustomStyles() {},\n    nativeCss: nativeCssVariables,\n    nativeShadow: nativeShadow,\n    cssBuild: cssBuild,\n    disableRuntime: disableRuntime,\n  };\n}\n\nwindow.ShadyCSS.CustomStyleInterface = customStyleInterface;\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@webcomponents/shadycss/entrypoints/custom-style-interface.js';\n\nimport { cssFromModules } from '../utils/style-gather.js';\n\nconst attr = 'include';\n\nconst CustomStyleInterface = window.ShadyCSS.CustomStyleInterface;\n\n/**\n * Custom element for defining styles in the main document that can take\n * advantage of [shady DOM](https://github.com/webcomponents/shadycss) shims\n * for style encapsulation, custom properties, and custom mixins.\n *\n * - Document styles defined in a `<custom-style>` are shimmed to ensure they\n *   do not leak into local DOM when running on browsers without native\n *   Shadow DOM.\n * - Custom properties can be defined in a `<custom-style>`. Use the `html` selector\n *   to define custom properties that apply to all custom elements.\n * - Custom mixins can be defined in a `<custom-style>`, if you import the optional\n *   [apply shim](https://github.com/webcomponents/shadycss#about-applyshim)\n *   (`shadycss/apply-shim.html`).\n *\n * To use:\n *\n * - Import `custom-style.html`.\n * - Place a `<custom-style>` element in the main document, wrapping an inline `<style>` tag that\n *   contains the CSS rules you want to shim.\n *\n * For example:\n *\n * ```html\n * <!-- import apply shim--only required if using mixins -->\n * <link rel=\"import\" href=\"bower_components/shadycss/apply-shim.html\">\n * <!-- import custom-style element -->\n * <link rel=\"import\" href=\"bower_components/polymer/lib/elements/custom-style.html\">\n *\n * <custom-style>\n *   <style>\n *     html {\n *       --custom-color: blue;\n *       --custom-mixin: {\n *         font-weight: bold;\n *         color: red;\n *       };\n *     }\n *   </style>\n * </custom-style>\n * ```\n *\n * @customElement\n * @extends HTMLElement\n * @summary Custom element for defining styles in the main document that can\n *   take advantage of Polymer's style scoping and custom properties shims.\n */\nexport class CustomStyle extends HTMLElement {\n  constructor() {\n    super();\n    this._style = null;\n    CustomStyleInterface.addCustomStyle(this);\n  }\n  /**\n   * Returns the light-DOM `<style>` child this element wraps.  Upon first\n   * call any style modules referenced via the `include` attribute will be\n   * concatenated to this element's `<style>`.\n   *\n   * @export\n   * @return {HTMLStyleElement} This element's light-DOM `<style>`\n   */\n  getStyle() {\n    if (this._style) {\n      return this._style;\n    }\n    const style = /** @type {HTMLStyleElement} */(this.querySelector('style'));\n    if (!style) {\n      return null;\n    }\n    this._style = style;\n    const include = style.getAttribute(attr);\n    if (include) {\n      style.removeAttribute(attr);\n      /** @suppress {deprecated} */\n      style.textContent = cssFromModules(include) + style.textContent;\n    }\n    /*\n    HTML Imports styling the main document are deprecated in Chrome\n    https://crbug.com/523952\n\n    If this element is not in the main document, then it must be in an HTML Import document.\n    In that case, move the custom style to the main document.\n\n    The ordering of `<custom-style>` should stay the same as when loaded by HTML Imports, but there may be odd\n    cases of ordering w.r.t the main document styles.\n    */\n    if (this.ownerDocument !== window.document) {\n      window.document.head.appendChild(this);\n    }\n    return this._style;\n  }\n}\n\nwindow.customElements.define('custom-style', CustomStyle);\n"],
  "mappings": "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",
  "names": ["CustomStyleInterface"]
}
