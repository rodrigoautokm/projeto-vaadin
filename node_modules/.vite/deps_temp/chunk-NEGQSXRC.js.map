{
  "version": 3,
  "sources": ["../../@vaadin/field-base/src/delegate-focus-mixin.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { FocusMixin } from '@vaadin/component-base/src/focus-mixin.js';\nimport { TabindexMixin } from '@vaadin/component-base/src/tabindex-mixin.js';\n\n/**\n * A mixin to forward focus to an element in the light DOM.\n *\n * @polymerMixin\n * @mixes FocusMixin\n * @mixes TabindexMixin\n */\nexport const DelegateFocusMixin = dedupingMixin(\n  (superclass) =>\n    class DelegateFocusMixinClass extends FocusMixin(TabindexMixin(superclass)) {\n      static get properties() {\n        return {\n          /**\n           * Specify that this control should have input focus when the page loads.\n           */\n          autofocus: {\n            type: Boolean,\n          },\n\n          /**\n           * A reference to the focusable element controlled by the mixin.\n           * It can be an input, textarea, button or any element with tabindex > -1.\n           *\n           * Any component implementing this mixin is expected to provide it\n           * by using `this._setFocusElement(input)` Polymer API.\n           *\n           * Toggling `tabindex` attribute on the host element propagates its value to `focusElement`.\n           *\n           * @protected\n           * @type {!HTMLElement}\n           */\n          focusElement: {\n            type: Object,\n            readOnly: true,\n            observer: '_focusElementChanged',\n          },\n\n          /**\n           * Override the property from `TabIndexMixin`\n           * to ensure the `tabindex` attribute of the focus element\n           * will be restored to `0` after re-enabling the element.\n           *\n           * @protected\n           * @override\n           */\n          _lastTabIndex: {\n            value: 0,\n          },\n        };\n      }\n\n      constructor() {\n        super();\n\n        this._boundOnBlur = this._onBlur.bind(this);\n        this._boundOnFocus = this._onFocus.bind(this);\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        if (this.autofocus && !this.disabled) {\n          requestAnimationFrame(() => {\n            this.focus();\n            this.setAttribute('focus-ring', '');\n          });\n        }\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      focus() {\n        if (!this.focusElement || this.disabled) {\n          return;\n        }\n\n        this.focusElement.focus();\n        this._setFocused(true);\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      blur() {\n        if (!this.focusElement) {\n          return;\n        }\n        this.focusElement.blur();\n        this._setFocused(false);\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      click() {\n        if (this.focusElement && !this.disabled) {\n          this.focusElement.click();\n        }\n      }\n\n      /** @protected */\n      _focusElementChanged(element, oldElement) {\n        if (element) {\n          element.disabled = this.disabled;\n          this._addFocusListeners(element);\n          this.__forwardTabIndex(this.tabindex);\n        } else if (oldElement) {\n          this._removeFocusListeners(oldElement);\n        }\n      }\n\n      /**\n       * @param {HTMLElement} element\n       * @protected\n       */\n      _addFocusListeners(element) {\n        element.addEventListener('blur', this._boundOnBlur);\n        element.addEventListener('focus', this._boundOnFocus);\n      }\n\n      /**\n       * @param {HTMLElement} element\n       * @protected\n       */\n      _removeFocusListeners(element) {\n        element.removeEventListener('blur', this._boundOnBlur);\n        element.removeEventListener('focus', this._boundOnFocus);\n      }\n\n      /**\n       * Focus event does not bubble, so we dispatch it manually\n       * on the host element to support adding focus listeners\n       * when the focusable element is placed in light DOM.\n       * @param {FocusEvent} event\n       * @protected\n       */\n      _onFocus(event) {\n        event.stopPropagation();\n        this.dispatchEvent(new Event('focus'));\n      }\n\n      /**\n       * Blur event does not bubble, so we dispatch it manually\n       * on the host element to support adding blur listeners\n       * when the focusable element is placed in light DOM.\n       * @param {FocusEvent} event\n       * @protected\n       */\n      _onBlur(event) {\n        event.stopPropagation();\n        this.dispatchEvent(new Event('blur'));\n      }\n\n      /**\n       * @param {Event} event\n       * @return {boolean}\n       * @protected\n       * @override\n       */\n      _shouldSetFocus(event) {\n        return event.target === this.focusElement;\n      }\n\n      /**\n       * @param {boolean} disabled\n       * @param {boolean} oldDisabled\n       * @protected\n       * @override\n       */\n      _disabledChanged(disabled, oldDisabled) {\n        super._disabledChanged(disabled, oldDisabled);\n\n        if (this.focusElement) {\n          this.focusElement.disabled = disabled;\n        }\n\n        if (disabled) {\n          this.blur();\n        }\n      }\n\n      /**\n       * Override an observer from `TabindexMixin`.\n       * Do not call super to remove tabindex attribute\n       * from the host after it has been forwarded.\n       * @param {string} tabindex\n       * @protected\n       * @override\n       */\n      _tabindexChanged(tabindex) {\n        this.__forwardTabIndex(tabindex);\n      }\n\n      /** @private */\n      __forwardTabIndex(tabindex) {\n        if (tabindex !== undefined && this.focusElement) {\n          this.focusElement.tabIndex = tabindex;\n\n          // Preserve tabindex=\"-1\" on the host element\n          if (tabindex !== -1) {\n            this.tabindex = undefined;\n          }\n        }\n\n        if (this.disabled && tabindex) {\n          // If tabindex attribute was changed while component was disabled\n          if (tabindex !== -1) {\n            this._lastTabIndex = tabindex;\n          }\n          this.tabindex = undefined;\n        }\n      }\n    },\n);\n"],
  "mappings": ";;;;;;;;;;;AAgBO,IAAM,qBAAqB;AAAA,EAChC,CAAC,eACC,MAAM,gCAAgC,WAAW,cAAc,UAAU,CAAC,EAAE;AAAA,IAC1E,WAAW,aAAa;AACtB,aAAO;AAAA,QAIL,WAAW;AAAA,UACT,MAAM;AAAA,QACR;AAAA,QAcA,cAAc;AAAA,UACZ,MAAM;AAAA,UACN,UAAU;AAAA,UACV,UAAU;AAAA,QACZ;AAAA,QAUA,eAAe;AAAA,UACb,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,IAEA,cAAc;AACZ,YAAM;AAEN,WAAK,eAAe,KAAK,QAAQ,KAAK,IAAI;AAC1C,WAAK,gBAAgB,KAAK,SAAS,KAAK,IAAI;AAAA,IAC9C;AAAA,IAGA,QAAQ;AACN,YAAM,MAAM;AAEZ,UAAI,KAAK,aAAa,CAAC,KAAK,UAAU;AACpC,8BAAsB,MAAM;AAC1B,eAAK,MAAM;AACX,eAAK,aAAa,cAAc,EAAE;AAAA,QACpC,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IAMA,QAAQ;AACN,UAAI,CAAC,KAAK,gBAAgB,KAAK,UAAU;AACvC;AAAA,MACF;AAEA,WAAK,aAAa,MAAM;AACxB,WAAK,YAAY,IAAI;AAAA,IACvB;AAAA,IAMA,OAAO;AACL,UAAI,CAAC,KAAK,cAAc;AACtB;AAAA,MACF;AACA,WAAK,aAAa,KAAK;AACvB,WAAK,YAAY,KAAK;AAAA,IACxB;AAAA,IAMA,QAAQ;AACN,UAAI,KAAK,gBAAgB,CAAC,KAAK,UAAU;AACvC,aAAK,aAAa,MAAM;AAAA,MAC1B;AAAA,IACF;AAAA,IAGA,qBAAqB,SAAS,YAAY;AACxC,UAAI,SAAS;AACX,gBAAQ,WAAW,KAAK;AACxB,aAAK,mBAAmB,OAAO;AAC/B,aAAK,kBAAkB,KAAK,QAAQ;AAAA,MACtC,WAAW,YAAY;AACrB,aAAK,sBAAsB,UAAU;AAAA,MACvC;AAAA,IACF;AAAA,IAMA,mBAAmB,SAAS;AAC1B,cAAQ,iBAAiB,QAAQ,KAAK,YAAY;AAClD,cAAQ,iBAAiB,SAAS,KAAK,aAAa;AAAA,IACtD;AAAA,IAMA,sBAAsB,SAAS;AAC7B,cAAQ,oBAAoB,QAAQ,KAAK,YAAY;AACrD,cAAQ,oBAAoB,SAAS,KAAK,aAAa;AAAA,IACzD;AAAA,IASA,SAAS,OAAO;AACd,YAAM,gBAAgB;AACtB,WAAK,cAAc,IAAI,MAAM,OAAO,CAAC;AAAA,IACvC;AAAA,IASA,QAAQ,OAAO;AACb,YAAM,gBAAgB;AACtB,WAAK,cAAc,IAAI,MAAM,MAAM,CAAC;AAAA,IACtC;AAAA,IAQA,gBAAgB,OAAO;AACrB,aAAO,MAAM,WAAW,KAAK;AAAA,IAC/B;AAAA,IAQA,iBAAiB,UAAU,aAAa;AACtC,YAAM,iBAAiB,UAAU,WAAW;AAE5C,UAAI,KAAK,cAAc;AACrB,aAAK,aAAa,WAAW;AAAA,MAC/B;AAEA,UAAI,UAAU;AACZ,aAAK,KAAK;AAAA,MACZ;AAAA,IACF;AAAA,IAUA,iBAAiB,UAAU;AACzB,WAAK,kBAAkB,QAAQ;AAAA,IACjC;AAAA,IAGA,kBAAkB,UAAU;AAC1B,UAAI,aAAa,UAAa,KAAK,cAAc;AAC/C,aAAK,aAAa,WAAW;AAG7B,YAAI,aAAa,IAAI;AACnB,eAAK,WAAW;AAAA,QAClB;AAAA,MACF;AAEA,UAAI,KAAK,YAAY,UAAU;AAE7B,YAAI,aAAa,IAAI;AACnB,eAAK,gBAAgB;AAAA,QACvB;AACA,aAAK,WAAW;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AACJ;",
  "names": []
}
