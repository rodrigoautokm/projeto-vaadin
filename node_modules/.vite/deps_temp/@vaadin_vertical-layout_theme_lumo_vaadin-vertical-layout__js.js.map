{
  "version": 3,
  "sources": ["../../@vaadin/vertical-layout/theme/lumo/vaadin-vertical-layout-styles.js", "../../@vaadin/vertical-layout/src/vaadin-vertical-layout.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst verticalLayout = css`\n  :host([theme~='margin']) {\n    margin: var(--lumo-space-m);\n  }\n\n  :host([theme~='padding']) {\n    padding: var(--lumo-space-m);\n  }\n\n  :host([theme~='spacing-xs']) {\n    gap: var(--lumo-space-xs);\n  }\n\n  :host([theme~='spacing-s']) {\n    gap: var(--lumo-space-s);\n  }\n\n  :host([theme~='spacing']) {\n    gap: var(--lumo-space-m);\n  }\n\n  :host([theme~='spacing-l']) {\n    gap: var(--lumo-space-l);\n  }\n\n  :host([theme~='spacing-xl']) {\n    gap: var(--lumo-space-xl);\n  }\n`;\n\nregisterStyles('vaadin-vertical-layout', verticalLayout, { moduleId: 'lumo-vertical-layout' });\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-vertical-layout>` provides a simple way to vertically align your HTML elements.\n *\n * ```\n * <vaadin-vertical-layout>\n *   <div>Item 1</div>\n *   <div>Item 2</div>\n * </vaadin-vertical-layout>\n * ```\n *\n * ### Built-in Theme Variations\n *\n * `<vaadin-vertical-layout>` supports the following theme variations:\n *\n * Theme variation | Description\n * ---|---\n * `theme=\"margin\"` | Applies the default amount of CSS margin for the host element (specified by the theme)\n * `theme=\"padding\"` | Applies the default amount of CSS padding for the host element (specified by the theme)\n * `theme=\"spacing\"` | Applies the default amount of CSS margin between items (specified by the theme)\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes ElementMixin\n */\nclass VerticalLayout extends ElementMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          flex-direction: column;\n          align-items: flex-start;\n          box-sizing: border-box;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        /* Theme variations */\n        :host([theme~='margin']) {\n          margin: 1em;\n        }\n\n        :host([theme~='padding']) {\n          padding: 1em;\n        }\n\n        :host([theme~='spacing']) {\n          gap: 1em;\n        }\n      </style>\n\n      <slot></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-vertical-layout';\n  }\n}\n\ncustomElements.define(VerticalLayout.is, VerticalLayout);\n\nexport { VerticalLayout };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAM,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BvB,eAAe,0BAA0B,gBAAgB,EAAE,UAAU,uBAAuB,CAAC;;;ACA7F,IAAM,iBAAN,cAA6B,aAAa,cAAc,cAAc,CAAC,EAAE;AAAA,EACvE,WAAW,WAAW;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6BT;AAAA,EAEA,WAAW,KAAK;AACd,WAAO;AAAA,EACT;AACF;AAEA,eAAe,OAAO,eAAe,IAAI,cAAc;",
  "names": []
}
