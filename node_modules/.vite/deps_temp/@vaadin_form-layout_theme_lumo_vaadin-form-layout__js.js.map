{
  "version": 3,
  "sources": ["../../@vaadin/form-layout/theme/lumo/vaadin-form-layout-styles.js", "../../@vaadin/form-layout/src/vaadin-form-layout.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-form-layout',\n  css`\n    :host {\n      --vaadin-form-layout-column-spacing: var(--lumo-space-l);\n    }\n  `,\n  { moduleId: 'lumo-form-layout' },\n);\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ResizeMixin } from '@vaadin/component-base/src/resize-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-form-layout>` is a Web Component providing configurable responsive\n * layout for form elements.\n *\n * ```html\n * <vaadin-form-layout>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">First Name</label>\n *     <input class=\"full-width\" value=\"Jane\">\n *   </vaadin-form-item>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">Last Name</label>\n *     <input class=\"full-width\" value=\"Doe\">\n *   </vaadin-form-item>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">Email</label>\n *     <input class=\"full-width\" value=\"jane.doe@example.com\">\n *   </vaadin-form-item>\n *\n * </vaadin-form-layout>\n * ```\n *\n * It supports any child elements as layout items.\n *\n * By default, it makes a layout of two columns if the element width is equal or\n * wider than 40em, and a single column layout otherwise.\n *\n * The number of columns and the responsive behavior are customizable with\n * the `responsiveSteps` property.\n *\n * ### Spanning Items on Multiple Columns\n *\n * You can use `colspan` attribute on the items.\n * In the example below, the first text field spans on two columns:\n *\n * ```html\n * <vaadin-form-layout>\n *\n *   <vaadin-form-item colspan=\"2\">\n *     <label slot=\"label\">Address</label>\n *     <input class=\"full-width\">\n *   </vaadin-form-item>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">First Name</label>\n *     <input class=\"full-width\" value=\"Jane\">\n *   </vaadin-form-item>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">Last Name</label>\n *     <input class=\"full-width\" value=\"Doe\">\n *   </vaadin-form-item>\n *\n * </vaadin-form-layout>\n * ```\n *\n * ### Explicit New Row\n *\n * Use the `<br>` line break element to wrap the items on a new row:\n *\n * ```html\n * <vaadin-form-layout>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">Email</label>\n *     <input class=\"full-width\">\n *   </vaadin-form-item>\n *\n *   <br>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">Confirm Email</label>\n *     <input class=\"full-width\">\n *   </vaadin-form-item>\n *\n * </vaadin-form-layout>\n * ```\n *\n * ### CSS Properties Reference\n *\n * The following custom CSS properties are available on the `<vaadin-form-layout>`\n * element:\n *\n * Custom CSS property | Description | Default\n * ---|---|---\n * `--vaadin-form-layout-column-spacing` | Length of the spacing between columns | `2em`\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes ResizeMixin\n */\nclass FormLayout extends ResizeMixin(ElementMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          max-width: 100%;\n          animation: 1ms vaadin-form-layout-appear;\n          /* CSS API for host */\n          --vaadin-form-item-label-width: 8em;\n          --vaadin-form-item-label-spacing: 1em;\n          --vaadin-form-item-row-spacing: 1em;\n          --vaadin-form-layout-column-spacing: 2em; /* (default) */\n          align-self: stretch;\n        }\n\n        @keyframes vaadin-form-layout-appear {\n          to {\n            opacity: 1 !important; /* stylelint-disable-line keyframe-declaration-no-important */\n          }\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        #layout {\n          display: flex;\n\n          align-items: baseline; /* default \\`stretch\\` is not appropriate */\n\n          flex-wrap: wrap; /* the items should wrap */\n        }\n\n        #layout ::slotted(*) {\n          /* Items should neither grow nor shrink. */\n          flex-grow: 0;\n          flex-shrink: 0;\n\n          /* Margins make spacing between the columns */\n          margin-left: calc(0.5 * var(--vaadin-form-layout-column-spacing));\n          margin-right: calc(0.5 * var(--vaadin-form-layout-column-spacing));\n        }\n\n        #layout ::slotted(br) {\n          display: none;\n        }\n      </style>\n      <div id=\"layout\">\n        <slot id=\"slot\"></slot>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-form-layout';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * @typedef FormLayoutResponsiveStep\n       * @type {object}\n       * @property {string} minWidth - The threshold value for this step in CSS length units.\n       * @property {number} columns - Number of columns. Only natural numbers are valid.\n       * @property {string} labelsPosition - Labels position option, valid values: `\"aside\"` (default), `\"top\"`.\n       */\n\n      /**\n       * Allows specifying a responsive behavior with the number of columns\n       * and the label position depending on the layout width.\n       *\n       * Format: array of objects, each object defines one responsive step\n       * with `minWidth` CSS length, `columns` number, and optional\n       * `labelsPosition` string of `\"aside\"` or `\"top\"`. At least one item is required.\n       *\n       * #### Examples\n       *\n       * ```javascript\n       * formLayout.responsiveSteps = [{columns: 1}];\n       * // The layout is always a single column, labels aside.\n       * ```\n       *\n       * ```javascript\n       * formLayout.responsiveSteps = [\n       *   {minWidth: 0, columns: 1},\n       *   {minWidth: '40em', columns: 2}\n       * ];\n       * // Sets two responsive steps:\n       * // 1. When the layout width is < 40em, one column, labels aside.\n       * // 2. Width >= 40em, two columns, labels aside.\n       * ```\n       *\n       * ```javascript\n       * formLayout.responsiveSteps = [\n       *   {minWidth: 0, columns: 1, labelsPosition: 'top'},\n       *   {minWidth: '20em', columns: 1},\n       *   {minWidth: '40em', columns: 2}\n       * ];\n       * // Default value. Three responsive steps:\n       * // 1. Width < 20em, one column, labels on top.\n       * // 2. 20em <= width < 40em, one column, labels aside.\n       * // 3. Width >= 40em, two columns, labels aside.\n       * ```\n       *\n       * @type {!Array<!FormLayoutResponsiveStep>}\n       */\n      responsiveSteps: {\n        type: Array,\n        value() {\n          return [\n            { minWidth: 0, columns: 1, labelsPosition: 'top' },\n            { minWidth: '20em', columns: 1 },\n            { minWidth: '40em', columns: 2 },\n          ];\n        },\n        observer: '_responsiveStepsChanged',\n      },\n\n      /**\n       * Current number of columns in the layout\n       * @private\n       */\n      _columnCount: {\n        type: Number,\n      },\n\n      /**\n       * Indicates that labels are on top\n       * @private\n       */\n      _labelsOnTop: {\n        type: Boolean,\n      },\n    };\n  }\n\n  static get observers() {\n    return ['_invokeUpdateLayout(_columnCount, _labelsOnTop)'];\n  }\n\n  /** @protected */\n  ready() {\n    // Here we create and attach a style element that we use for validating\n    // CSS values in `responsiveSteps`. We can\u2019t add this to the `<template>`,\n    // because Polymer will throw it away. We need to create this before\n    // `super.ready()`, because `super.ready()` invokes property observers,\n    // and the observer for `responsiveSteps` does CSS value validation.\n    this._styleElement = document.createElement('style');\n    this.appendChild(this._styleElement);\n    // Ensure there is a child text node in the style element\n    this._styleElement.textContent = ' ';\n\n    super.ready();\n\n    this.addEventListener('animationend', this.__onAnimationEnd);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    requestAnimationFrame(() => this._selectResponsiveStep());\n    requestAnimationFrame(() => this._updateLayout());\n\n    this._observeChildrenColspanChange();\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.__mutationObserver.disconnect();\n    this.__childObserver.disconnect();\n  }\n\n  /** @private */\n  _observeChildrenColspanChange() {\n    // Observe changes in form items' `colspan` attribute and update styles\n    const mutationObserverConfig = { attributes: true };\n\n    this.__mutationObserver = new MutationObserver((mutationRecord) => {\n      mutationRecord.forEach((mutation) => {\n        if (\n          mutation.type === 'attributes' &&\n          (mutation.attributeName === 'colspan' || mutation.attributeName === 'hidden')\n        ) {\n          this._updateLayout();\n        }\n      });\n    });\n\n    this.__childObserver = new FlattenedNodesObserver(this, (info) => {\n      const addedNodes = this._getObservableNodes(info.addedNodes);\n      const removedNodes = this._getObservableNodes(info.removedNodes);\n\n      addedNodes.forEach((child) => {\n        this.__mutationObserver.observe(child, mutationObserverConfig);\n      });\n\n      if (addedNodes.length > 0 || removedNodes.length > 0) {\n        this._updateLayout();\n      }\n    });\n  }\n\n  /** @private */\n  _getObservableNodes(nodeList) {\n    const ignore = ['template', 'style', 'dom-repeat', 'dom-if'];\n    return Array.from(nodeList).filter(\n      (node) => node.nodeType === Node.ELEMENT_NODE && ignore.indexOf(node.localName.toLowerCase()) === -1,\n    );\n  }\n\n  /** @private */\n  _naturalNumberOrOne(n) {\n    if (typeof n === 'number' && n >= 1 && n < Infinity) {\n      return Math.floor(n);\n    }\n    return 1;\n  }\n\n  /** @private */\n  _isValidCSSLength(value) {\n    // Let us choose a CSS property for validating CSS <length> values:\n    // - `border-spacing` accepts `<length> | inherit`, it\u2019s the best! But\n    //   it does not disallow invalid values at all in MSIE :-(\n    // - `letter-spacing` and `word-spacing` accept\n    //   `<length> | normal | inherit`, and disallows everything else, like\n    //   `<percentage>`, `auto` and such, good enough.\n    // - `word-spacing` is used since its shorter.\n\n    // Disallow known keywords allowed as the `word-spacing` value\n    if (value === 'inherit' || value === 'normal') {\n      return false;\n    }\n\n    // Use the value in a stylesheet and check the parsed value. Invalid\n    // input value results in empty parsed value.\n    this._styleElement.firstChild.nodeValue = `#styleElement { word-spacing: ${value}; }`;\n\n    if (!this._styleElement.sheet) {\n      // Stylesheet is not ready, probably not attached to the document yet.\n      return true;\n    }\n\n    // Safari 9 sets invalid CSS rules' value to `null`\n    return ['', null].indexOf(this._styleElement.sheet.cssRules[0].style.getPropertyValue('word-spacing')) < 0;\n  }\n\n  /** @private */\n  _responsiveStepsChanged(responsiveSteps, oldResponsiveSteps) {\n    try {\n      if (!Array.isArray(responsiveSteps)) {\n        throw new Error('Invalid \"responsiveSteps\" type, an Array is required.');\n      }\n\n      if (responsiveSteps.length < 1) {\n        throw new Error('Invalid empty \"responsiveSteps\" array, at least one item is required.');\n      }\n\n      responsiveSteps.forEach((step) => {\n        if (this._naturalNumberOrOne(step.columns) !== step.columns) {\n          throw new Error(`Invalid 'columns' value of ${step.columns}, a natural number is required.`);\n        }\n\n        if (step.minWidth !== undefined && !this._isValidCSSLength(step.minWidth)) {\n          throw new Error(`Invalid 'minWidth' value of ${step.minWidth}, a valid CSS length required.`);\n        }\n\n        if (step.labelsPosition !== undefined && ['aside', 'top'].indexOf(step.labelsPosition) === -1) {\n          throw new Error(\n            `Invalid 'labelsPosition' value of ${step.labelsPosition}, 'aside' or 'top' string is required.`,\n          );\n        }\n      });\n    } catch (e) {\n      if (oldResponsiveSteps && oldResponsiveSteps !== responsiveSteps) {\n        console.warn(`${e.message} Using previously set 'responsiveSteps' instead.`);\n        this.responsiveSteps = oldResponsiveSteps;\n      } else {\n        console.warn(`${e.message} Using default 'responsiveSteps' instead.`);\n        this.responsiveSteps = [\n          { minWidth: 0, columns: 1, labelsPosition: 'top' },\n          { minWidth: '20em', columns: 1 },\n          { minWidth: '40em', columns: 2 },\n        ];\n      }\n    }\n\n    this._selectResponsiveStep();\n  }\n\n  /** @private */\n  __onAnimationEnd(e) {\n    if (e.animationName.indexOf('vaadin-form-layout-appear') === 0) {\n      this._selectResponsiveStep();\n    }\n  }\n\n  /** @private */\n  _selectResponsiveStep() {\n    // Iterate through responsiveSteps and choose the step\n    let selectedStep;\n    const tmpStyleProp = 'background-position';\n    this.responsiveSteps.forEach((step) => {\n      // Convert minWidth to px units for comparison\n      this.$.layout.style.setProperty(tmpStyleProp, step.minWidth);\n      const stepMinWidthPx = parseFloat(getComputedStyle(this.$.layout).getPropertyValue(tmpStyleProp));\n\n      // Compare step min-width with the host width, select the passed step\n      if (stepMinWidthPx <= this.offsetWidth) {\n        selectedStep = step;\n      }\n    });\n    this.$.layout.style.removeProperty(tmpStyleProp);\n\n    // Sometimes converting units is not possible, e.g, when element is\n    // not connected. Then the `selectedStep` stays `undefined`.\n    if (selectedStep) {\n      // Apply the chosen responsive step\u2019s properties\n      this._columnCount = selectedStep.columns;\n      this._labelsOnTop = selectedStep.labelsPosition === 'top';\n    }\n  }\n\n  /** @private */\n  _invokeUpdateLayout() {\n    this._updateLayout();\n  }\n\n  /**\n   * Set custom CSS property values and update the layout.\n   *\n   * @deprecated Since Vaadin 23, `updateStyles()` is deprecated.\n   * Use the native element.style.setProperty API to set custom CSS property values.\n   */\n  updateStyles(properties = {}) {\n    console.warn(\n      `WARNING: Since Vaadin 23, updateStyles() is deprecated. Use the native element.style.setProperty API to set custom CSS property values.`,\n    );\n\n    Object.entries(properties).forEach(([key, value]) => {\n      this.style.setProperty(key, value);\n    });\n\n    this._updateLayout();\n  }\n\n  /**\n   * Update the layout.\n   * @protected\n   */\n  _updateLayout() {\n    /*\n      The item width formula:\n\n          itemWidth = colspan / columnCount * 100% - columnSpacing\n\n      We have to subtract columnSpacing, because the column spacing space is taken\n      by item margins of 1/2 * spacing on both sides\n    */\n\n    const style = getComputedStyle(this);\n    const columnSpacing = style.getPropertyValue('--vaadin-form-layout-column-spacing');\n\n    const direction = style.direction;\n    const marginStartProp = `margin-${direction === 'ltr' ? 'left' : 'right'}`;\n    const marginEndProp = `margin-${direction === 'ltr' ? 'right' : 'left'}`;\n\n    const containerWidth = this.offsetWidth;\n\n    let col = 0;\n    Array.from(this.children)\n      .filter((child) => child.localName === 'br' || getComputedStyle(child).display !== 'none')\n      .forEach((child, index, children) => {\n        if (child.localName === 'br') {\n          // Reset column count on line break\n          col = 0;\n          return;\n        }\n\n        let colspan;\n        colspan = this._naturalNumberOrOne(parseFloat(child.getAttribute('colspan')));\n\n        // Never span further than the number of columns\n        colspan = Math.min(colspan, this._columnCount);\n\n        const childRatio = colspan / this._columnCount;\n\n        // Note: using 99.9% for 100% fixes rounding errors in MS Edge\n        // (< v16), otherwise the items might wrap, resizing is wobbly.\n        child.style.width = `calc(${childRatio * 99.9}% - ${1 - childRatio} * ${columnSpacing})`;\n\n        if (col + colspan > this._columnCount) {\n          // Too big to fit on this row, let\u2019s wrap it\n          col = 0;\n        }\n\n        // At the start edge\n        if (col === 0) {\n          child.style.setProperty(marginStartProp, '0px');\n        } else {\n          child.style.removeProperty(marginStartProp);\n        }\n\n        const nextIndex = index + 1;\n        const nextLineBreak = nextIndex < children.length && children[nextIndex].localName === 'br';\n\n        // At the end edge\n        if (col + colspan === this._columnCount) {\n          child.style.setProperty(marginEndProp, '0px');\n        } else if (nextLineBreak) {\n          const colspanRatio = (this._columnCount - col - colspan) / this._columnCount;\n          child.style.setProperty(\n            marginEndProp,\n            `calc(${colspanRatio * containerWidth}px + ${colspanRatio} * ${columnSpacing})`,\n          );\n        } else {\n          child.style.removeProperty(marginEndProp);\n        }\n\n        // Move the column counter\n        col = (col + colspan) % this._columnCount;\n\n        if (child.localName === 'vaadin-form-item') {\n          if (this._labelsOnTop) {\n            if (child.getAttribute('label-position') !== 'top') {\n              child.__useLayoutLabelPosition = true;\n              child.setAttribute('label-position', 'top');\n            }\n          } else if (child.__useLayoutLabelPosition) {\n            delete child.__useLayoutLabelPosition;\n            child.removeAttribute('label-position');\n          }\n        }\n      });\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  _onResize() {\n    this._selectResponsiveStep();\n  }\n}\n\ncustomElements.define(FormLayout.is, FormLayout);\n\nexport { FormLayout };\n"],
  "mappings": "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",
  "names": []
}
