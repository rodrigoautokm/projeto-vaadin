{
  "version": 3,
  "sources": ["../../@vaadin/field-base/src/virtual-keyboard-controller.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller which prevents the virtual keyboard from showing up on mobile devices\n * when the field's overlay is closed.\n */\nexport class VirtualKeyboardController {\n  /**\n   * @param {{ inputElement?: HTMLElement; opened: boolean } & HTMLElement} host\n   */\n  constructor(host) {\n    this.host = host;\n\n    host.addEventListener('opened-changed', () => {\n      if (!host.opened) {\n        // Prevent opening the virtual keyboard when the input gets re-focused on dropdown close\n        this.__setVirtualKeyboardEnabled(false);\n      }\n    });\n\n    // Re-enable virtual keyboard on blur, so it gets opened when the field is focused again\n    host.addEventListener('blur', () => this.__setVirtualKeyboardEnabled(true));\n\n    // Re-enable the virtual keyboard whenever the field is touched\n    host.addEventListener('touchstart', () => this.__setVirtualKeyboardEnabled(true));\n  }\n\n  /** @private */\n  __setVirtualKeyboardEnabled(value) {\n    if (this.host.inputElement) {\n      this.host.inputElement.inputMode = value ? '' : 'none';\n    }\n  }\n}\n"],
  "mappings": ";AAUO,IAAM,4BAAN,MAAgC;AAAA,EAIrC,YAAY,MAAM;AAChB,SAAK,OAAO;AAEZ,SAAK,iBAAiB,kBAAkB,MAAM;AAC5C,UAAI,CAAC,KAAK,QAAQ;AAEhB,aAAK,4BAA4B,KAAK;AAAA,MACxC;AAAA,IACF,CAAC;AAGD,SAAK,iBAAiB,QAAQ,MAAM,KAAK,4BAA4B,IAAI,CAAC;AAG1E,SAAK,iBAAiB,cAAc,MAAM,KAAK,4BAA4B,IAAI,CAAC;AAAA,EAClF;AAAA,EAGA,4BAA4B,OAAO;AACjC,QAAI,KAAK,KAAK,cAAc;AAC1B,WAAK,KAAK,aAAa,YAAY,QAAQ,KAAK;AAAA,IAClD;AAAA,EACF;AACF;",
  "names": []
}
