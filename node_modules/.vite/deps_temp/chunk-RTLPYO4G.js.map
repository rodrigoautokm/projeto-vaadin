{
  "version": 3,
  "sources": ["../../@vaadin/vaadin-lumo-styles/mixins/loader.js", "../../@vaadin/combo-box/theme/lumo/vaadin-combo-box-dropdown-styles.js", "../../@vaadin/combo-box/theme/lumo/vaadin-combo-box-item-styles.js", "../../@vaadin/combo-box/src/vaadin-combo-box-item.js", "../../@vaadin/combo-box/src/vaadin-combo-box-overlay.js", "../../@vaadin/combo-box/src/vaadin-combo-box-scroller.js", "../../@vaadin/combo-box/src/vaadin-combo-box-mixin.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../sizing.js';\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst loader = css`\n  [part~='loader'] {\n    box-sizing: border-box;\n    width: var(--lumo-icon-size-s);\n    height: var(--lumo-icon-size-s);\n    border: 2px solid transparent;\n    border-color: var(--lumo-primary-color-10pct) var(--lumo-primary-color-10pct) var(--lumo-primary-color)\n      var(--lumo-primary-color);\n    border-radius: calc(0.5 * var(--lumo-icon-size-s));\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  :host(:not([loading])) [part~='loader'] {\n    display: none;\n  }\n\n  :host([loading]) [part~='loader'] {\n    animation: 1s linear infinite lumo-loader-rotate, 0.3s 0.1s lumo-loader-fade-in both;\n  }\n\n  @keyframes lumo-loader-fade-in {\n    0% {\n      opacity: 0;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes lumo-loader-rotate {\n    0% {\n      transform: rotate(0deg);\n    }\n\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport { loader };\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay.js';\nimport { loader } from '@vaadin/vaadin-lumo-styles/mixins/loader.js';\nimport { menuOverlayCore } from '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\nimport { overlay } from '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst comboBoxOverlay = css`\n  [part='content'] {\n    padding: 0;\n  }\n\n  :host {\n    --_vaadin-combo-box-items-container-border-width: var(--lumo-space-xs);\n    --_vaadin-combo-box-items-container-border-style: solid;\n    --_vaadin-combo-box-items-container-border-color: transparent;\n  }\n\n  /* Loading state */\n\n  /* When items are empty, the spinner needs some room */\n  :host(:not([closing])) [part~='content'] {\n    min-height: calc(2 * var(--lumo-space-s) + var(--lumo-icon-size-s));\n  }\n\n  [part~='overlay'] {\n    position: relative;\n  }\n\n  :host([top-aligned]) [part~='overlay'] {\n    margin-top: var(--lumo-space-xs);\n  }\n\n  :host([bottom-aligned]) [part~='overlay'] {\n    margin-bottom: var(--lumo-space-xs);\n  }\n\n  [part~='loader'] {\n    position: absolute;\n    z-index: 1;\n    left: var(--lumo-space-s);\n    right: var(--lumo-space-s);\n    top: var(--lumo-space-s);\n    margin-left: auto;\n    margin-inline-start: auto;\n    margin-inline-end: 0;\n  }\n\n  /* RTL specific styles */\n\n  :host([dir='rtl']) [part~='loader'] {\n    left: auto;\n    margin-left: 0;\n    margin-right: auto;\n    margin-inline-start: 0;\n    margin-inline-end: auto;\n  }\n`;\n\nregisterStyles('vaadin-combo-box-overlay', [overlay, menuOverlayCore, comboBoxOverlay, loader], {\n  moduleId: 'lumo-combo-box-overlay',\n});\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { item } from '@vaadin/item/theme/lumo/vaadin-item-styles.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst comboBoxItem = css`\n  :host {\n    transition: background-color 100ms;\n    overflow: hidden;\n    --_lumo-item-selected-icon-display: block;\n  }\n\n  @media (any-hover: hover) {\n    :host([focused]:not([disabled])) {\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n  }\n`;\n\nregisterStyles('vaadin-combo-box-item', [item, comboBoxItem], {\n  moduleId: 'lumo-combo-box-item',\n});\n", "/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * An item element used by the `<vaadin-combo-box>` dropdown.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name   | Description\n * ------------|--------------\n * `checkmark` | The graphical checkmark shown for a selected item\n * `content`   | The element that wraps the item content\n *\n * The following state attributes are exposed for styling:\n *\n * Attribute    | Description\n * -------------|-------------\n * `selected`   | Set when the item is selected\n * `focused`    | Set when the item is focused\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @private\n */\nexport class ComboBoxItem extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n      </style>\n      <span part=\"checkmark\" aria-hidden=\"true\"></span>\n      <div part=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-combo-box-item';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The index of the item\n       */\n      index: Number,\n\n      /**\n       * The item to render\n       * @type {(String|Object)}\n       */\n      item: Object,\n\n      /**\n       * The text label corresponding to the item\n       */\n      label: String,\n\n      /**\n       * True when item is selected\n       */\n      selected: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * True when item is focused\n       */\n      focused: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Custom function for rendering the content of the `<vaadin-combo-box-item>` propagated from the combo box element.\n       */\n      renderer: Function,\n\n      /**\n       * Saved instance of a custom renderer function.\n       */\n      _oldRenderer: Function,\n    };\n  }\n\n  static get observers() {\n    return ['__rendererOrItemChanged(renderer, index, item.*, selected, focused)', '__updateLabel(label, renderer)'];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._comboBox = this.parentNode.comboBox;\n\n    const hostDir = this._comboBox.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the item.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (!this.renderer) {\n      return;\n    }\n\n    const model = {\n      index: this.index,\n      item: this.item,\n      focused: this.focused,\n      selected: this.selected,\n    };\n\n    this.renderer(this, this._comboBox, model);\n  }\n\n  /** @private */\n  __rendererOrItemChanged(renderer, index, item) {\n    if (item === undefined || index === undefined) {\n      return;\n    }\n\n    if (this._oldRenderer !== renderer) {\n      this.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this._$litPart$;\n    }\n\n    if (renderer) {\n      this._oldRenderer = renderer;\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __updateLabel(label, renderer) {\n    if (renderer) {\n      return;\n    }\n\n    this.textContent = label;\n  }\n}\n\ncustomElements.define(ComboBoxItem.is, ComboBoxItem);\n", "/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { PositionMixin } from '@vaadin/vaadin-overlay/src/vaadin-overlay-position-mixin.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-combo-box-overlay',\n  css`\n    #overlay {\n      width: var(--vaadin-combo-box-overlay-width, var(--_vaadin-combo-box-overlay-default-width, auto));\n    }\n\n    [part='content'] {\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n    }\n  `,\n  { moduleId: 'vaadin-combo-box-overlay-styles' },\n);\n\nlet memoizedTemplate;\n\n/**\n * An element used internally by `<vaadin-combo-box>`. Not intended to be used separately.\n *\n * @extends OverlayElement\n * @private\n */\nexport class ComboBoxOverlay extends PositionMixin(OverlayElement) {\n  static get is() {\n    return 'vaadin-combo-box-overlay';\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n      memoizedTemplate.content.querySelector('[part~=\"overlay\"]').removeAttribute('tabindex');\n    }\n\n    return memoizedTemplate;\n  }\n\n  static get observers() {\n    return ['_setOverlayWidth(positionTarget, opened)'];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    const comboBox = this._comboBox;\n\n    const hostDir = comboBox && comboBox.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n\n  ready() {\n    super.ready();\n    const loader = document.createElement('div');\n    loader.setAttribute('part', 'loader');\n    const content = this.shadowRoot.querySelector('[part~=\"content\"]');\n    content.parentNode.insertBefore(loader, content);\n  }\n\n  _outsideClickListener(event) {\n    const eventPath = event.composedPath();\n    if (!eventPath.includes(this.positionTarget) && !eventPath.includes(this)) {\n      this.close();\n    }\n  }\n\n  _setOverlayWidth(positionTarget, opened) {\n    if (positionTarget && opened) {\n      const propPrefix = this.localName;\n      this.style.setProperty(`--_${propPrefix}-default-width`, `${positionTarget.clientWidth}px`);\n\n      const customWidth = getComputedStyle(this._comboBox).getPropertyValue(`--${propPrefix}-width`);\n\n      if (customWidth === '') {\n        this.style.removeProperty(`--${propPrefix}-width`);\n      } else {\n        this.style.setProperty(`--${propPrefix}-width`, customWidth);\n      }\n\n      this._updatePosition();\n    }\n  }\n}\n\ncustomElements.define(ComboBoxOverlay.is, ComboBoxOverlay);\n", "/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\nimport { Virtualizer } from '@vaadin/component-base/src/virtualizer.js';\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * Element for internal use only.\n *\n * @extends HTMLElement\n * @private\n */\nexport class ComboBoxScroller extends PolymerElement {\n  static get is() {\n    return 'vaadin-combo-box-scroller';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          min-height: 1px;\n          overflow: auto;\n\n          /* Fixes item background from getting on top of scrollbars on Safari */\n          transform: translate3d(0, 0, 0);\n\n          /* Enable momentum scrolling on iOS */\n          -webkit-overflow-scrolling: touch;\n\n          /* Fixes scrollbar disappearing when 'Show scroll bars: Always' enabled in Safari */\n          box-shadow: 0 0 0 white;\n        }\n\n        #selector {\n          border-width: var(--_vaadin-combo-box-items-container-border-width);\n          border-style: var(--_vaadin-combo-box-items-container-border-style);\n          border-color: var(--_vaadin-combo-box-items-container-border-color);\n        }\n      </style>\n      <div id=\"selector\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * A full set of items to filter the visible options from.\n       * Set to an empty array when combo-box is not opened.\n       */\n      items: {\n        type: Array,\n        observer: '__itemsChanged',\n      },\n\n      /**\n       * Index of an item that has focus outline and is scrolled into view.\n       * The actual focus still remains in the input field.\n       */\n      focusedIndex: {\n        type: Number,\n        observer: '__focusedIndexChanged',\n      },\n\n      /**\n       * Set to true while combo-box fetches new page from the data provider.\n       */\n      loading: {\n        type: Boolean,\n        observer: '__loadingChanged',\n      },\n\n      /**\n       * Whether the combo-box is currently opened or not. If set to false,\n       * calling `scrollIntoView` does not have any effect.\n       */\n      opened: {\n        type: Boolean,\n        observer: '__openedChanged',\n      },\n\n      /**\n       * The selected item from the `items` array.\n       */\n      selectedItem: {\n        type: Object,\n        observer: '__selectedItemChanged',\n      },\n\n      /**\n       * Path for the id of the item, used to detect whether the item is selected.\n       */\n      itemIdPath: {\n        type: String,\n      },\n\n      /**\n       * Reference to the combo-box, used by the item elements.\n       */\n      comboBox: {\n        type: Object,\n      },\n\n      /**\n       * Function used to set a label for every combo-box item.\n       */\n      getItemLabel: {\n        type: Object,\n      },\n\n      /**\n       * Function used to render the content of every combo-box item.\n       */\n      renderer: {\n        type: Object,\n        observer: '__rendererChanged',\n      },\n\n      /**\n       * Used to propagate the `theme` attribute from the host element.\n       */\n      theme: {\n        type: String,\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    this.__boundOnItemClick = this.__onItemClick.bind(this);\n  }\n\n  __openedChanged(opened) {\n    if (opened) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // Ensure every instance has unique ID\n    this.id = `${this.localName}-${generateUniqueId()}`;\n\n    // Allow extensions to customize tag name for the items\n    this.__hostTagName = this.constructor.is.replace('-scroller', '');\n\n    this.setAttribute('role', 'listbox');\n\n    this.addEventListener('click', (e) => e.stopPropagation());\n\n    this.__patchWheelOverScrolling();\n\n    this.__virtualizer = new Virtualizer({\n      createElements: this.__createElements.bind(this),\n      updateElement: this.__updateElement.bind(this),\n      elementsContainer: this,\n      scrollTarget: this,\n      scrollContainer: this.$.selector,\n    });\n  }\n\n  requestContentUpdate() {\n    if (this.__virtualizer) {\n      this.__virtualizer.update();\n    }\n  }\n\n  scrollIntoView(index) {\n    if (!(this.opened && index >= 0)) {\n      return;\n    }\n\n    const visibleItemsCount = this._visibleItemsCount();\n\n    let targetIndex = index;\n\n    if (index > this.__virtualizer.lastVisibleIndex - 1) {\n      // Index is below the bottom, scrolling down. Make the item appear at the bottom.\n      // First scroll to target (will be at the top of the scroller) to make sure it's rendered.\n      this.__virtualizer.scrollToIndex(index);\n      // Then calculate the index for the following scroll (to get the target to bottom of the scroller).\n      targetIndex = index - visibleItemsCount + 1;\n    } else if (index > this.__virtualizer.firstVisibleIndex) {\n      // The item is already visible, scrolling is unnecessary per se. But we need to trigger iron-list to set\n      // the correct scrollTop on the scrollTarget. Scrolling to firstVisibleIndex.\n      targetIndex = this.__virtualizer.firstVisibleIndex;\n    }\n    this.__virtualizer.scrollToIndex(Math.max(0, targetIndex));\n\n    // Sometimes the item is partly below the bottom edge, detect and adjust.\n    const lastPhysicalItem = [...this.children].find(\n      (el) => !el.hidden && el.index === this.__virtualizer.lastVisibleIndex,\n    );\n    if (!lastPhysicalItem || index !== lastPhysicalItem.index) {\n      return;\n    }\n    const lastPhysicalItemRect = lastPhysicalItem.getBoundingClientRect();\n    const scrollerRect = this.getBoundingClientRect();\n    const scrollTopAdjust = lastPhysicalItemRect.bottom - scrollerRect.bottom + this._viewportTotalPaddingBottom;\n    if (scrollTopAdjust > 0) {\n      this.scrollTop += scrollTopAdjust;\n    }\n  }\n\n  /** @private */\n  __getAriaRole(itemIndex) {\n    return itemIndex !== undefined ? 'option' : false;\n  }\n\n  /** @private */\n  __getAriaSelected(focusedIndex, itemIndex) {\n    return this.__isItemFocused(focusedIndex, itemIndex).toString();\n  }\n\n  /** @private */\n  __isItemFocused(focusedIndex, itemIndex) {\n    return !this.loading && focusedIndex === itemIndex;\n  }\n\n  /** @private */\n  __isItemSelected(item, selectedItem, itemIdPath) {\n    if (item instanceof ComboBoxPlaceholder) {\n      return false;\n    } else if (itemIdPath && item !== undefined && selectedItem !== undefined) {\n      return this.get(itemIdPath, item) === this.get(itemIdPath, selectedItem);\n    }\n    return item === selectedItem;\n  }\n\n  /** @private */\n  __itemsChanged(items) {\n    if (this.__virtualizer && items) {\n      this.__virtualizer.size = items.length;\n      this.__virtualizer.flush();\n      // Ensure the total count of items is properly announced.\n      this.setAttribute('aria-setsize', items.length);\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __loadingChanged() {\n    if (this.__virtualizer) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __selectedItemChanged() {\n    if (this.__virtualizer) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __focusedIndexChanged(index, oldIndex) {\n    if (!this.__virtualizer) {\n      return;\n    }\n\n    if (index !== oldIndex) {\n      this.requestContentUpdate();\n    }\n\n    // Do not jump back to the previously focused item while loading\n    // when requesting next page from the data provider on scroll.\n    if (index >= 0 && !this.loading) {\n      this.scrollIntoView(index);\n    }\n  }\n\n  /** @private */\n  __rendererChanged(renderer, oldRenderer) {\n    if (renderer || oldRenderer) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __createElements(count) {\n    return [...Array(count)].map(() => {\n      const item = document.createElement(`${this.__hostTagName}-item`);\n      item.addEventListener('click', this.__boundOnItemClick);\n      // Negative tabindex prevents the item content from being focused.\n      item.tabIndex = '-1';\n      item.style.width = '100%';\n      return item;\n    });\n  }\n\n  /** @private */\n  __updateElement(el, index) {\n    const item = this.items[index];\n    const focusedIndex = this.focusedIndex;\n\n    el.setProperties({\n      item,\n      index,\n      label: this.getItemLabel(item),\n      selected: this.__isItemSelected(item, this.selectedItem, this.itemIdPath),\n      renderer: this.renderer,\n      focused: this.__isItemFocused(focusedIndex, index),\n    });\n\n    el.id = `${this.__hostTagName}-item-${index}`;\n    el.setAttribute('role', this.__getAriaRole(index));\n    el.setAttribute('aria-selected', this.__getAriaSelected(focusedIndex, index));\n    el.setAttribute('aria-posinset', index + 1);\n\n    if (this.theme) {\n      el.setAttribute('theme', this.theme);\n    } else {\n      el.removeAttribute('theme');\n    }\n\n    if (item instanceof ComboBoxPlaceholder) {\n      this.__requestItemByIndex(index);\n    }\n  }\n\n  /** @private */\n  __onItemClick(e) {\n    this.dispatchEvent(new CustomEvent('selection-changed', { detail: { item: e.currentTarget.item } }));\n  }\n\n  /**\n   * We want to prevent the kinetic scrolling energy from being transferred from the overlay contents over to the parent.\n   * Further improvement ideas: after the contents have been scrolled to the top or bottom and scrolling has stopped, it could allow\n   * scrolling the parent similarly to touch scrolling.\n   */\n  __patchWheelOverScrolling() {\n    this.$.selector.addEventListener('wheel', (e) => {\n      const scrolledToTop = this.scrollTop === 0;\n      const scrolledToBottom = this.scrollHeight - this.scrollTop - this.clientHeight <= 1;\n      if (scrolledToTop && e.deltaY < 0) {\n        e.preventDefault();\n      } else if (scrolledToBottom && e.deltaY > 0) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  get _viewportTotalPaddingBottom() {\n    if (this._cachedViewportTotalPaddingBottom === undefined) {\n      const itemsStyle = window.getComputedStyle(this.$.selector);\n      this._cachedViewportTotalPaddingBottom = [itemsStyle.paddingBottom, itemsStyle.borderBottomWidth]\n        .map((v) => {\n          return parseInt(v, 10);\n        })\n        .reduce((sum, v) => {\n          return sum + v;\n        });\n    }\n\n    return this._cachedViewportTotalPaddingBottom;\n  }\n\n  /**\n   * Dispatches an `index-requested` event for the given index to notify\n   * the data provider that it should start loading the page containing the requested index.\n   *\n   * The event is dispatched asynchronously to prevent an immediate page request and therefore\n   * a possible infinite recursion in case the data provider implements page request cancelation logic\n   * by invoking data provider page callbacks with an empty array.\n   * The infinite recursion may occur otherwise since invoking a data provider page callback with an empty array\n   * triggers a synchronous scroller update and, if the callback corresponds to the currently visible page,\n   * the scroller will synchronously request the page again which may lead to looping in the end.\n   * That was the case for the Flow counterpart:\n   * https://github.com/vaadin/flow-components/issues/3553#issuecomment-1239344828\n   */\n  __requestItemByIndex(index) {\n    requestAnimationFrame(() => {\n      this.dispatchEvent(\n        new CustomEvent('index-requested', {\n          detail: {\n            index,\n            currentScrollerPos: this._oldScrollerPosition,\n          },\n        }),\n      );\n    });\n  }\n\n  /** @private */\n  _visibleItemsCount() {\n    // Ensure items are positioned\n    this.__virtualizer.scrollToIndex(this.__virtualizer.firstVisibleIndex);\n    const hasItems = this.__virtualizer.size > 0;\n    return hasItems ? this.__virtualizer.lastVisibleIndex - this.__virtualizer.firstVisibleIndex + 1 : 0;\n  }\n}\n\ncustomElements.define(ComboBoxScroller.is, ComboBoxScroller);\n", "/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isTouch } from '@vaadin/component-base/src/browser-utils.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { DisabledMixin } from '@vaadin/component-base/src/disabled-mixin.js';\nimport { isElementFocused } from '@vaadin/component-base/src/focus-utils.js';\nimport { KeyboardMixin } from '@vaadin/component-base/src/keyboard-mixin.js';\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\nimport { InputMixin } from '@vaadin/field-base/src/input-mixin.js';\nimport { VirtualKeyboardController } from '@vaadin/field-base/src/virtual-keyboard-controller.js';\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * Checks if the value is supported as an item value in this control.\n *\n * @param {unknown} value\n * @return {boolean}\n */\nfunction isValidValue(value) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * Returns the index of the first item that satisfies the provided testing function\n * ignoring placeholder items.\n *\n * @param {Array<ComboBoxItem | string>} items\n * @param {Function} callback\n * @return {number}\n */\nfunction findItemIndex(items, callback) {\n  return items.findIndex((item) => {\n    if (item instanceof ComboBoxPlaceholder) {\n      return false;\n    }\n\n    return callback(item);\n  });\n}\n\n/**\n * @polymerMixin\n * @param {function(new:HTMLElement)} subclass\n */\nexport const ComboBoxMixin = (subclass) =>\n  class VaadinComboBoxMixinElement extends ControllerMixin(KeyboardMixin(InputMixin(DisabledMixin(subclass)))) {\n    static get properties() {\n      return {\n        /**\n         * True if the dropdown is open, false otherwise.\n         * @type {boolean}\n         */\n        opened: {\n          type: Boolean,\n          notify: true,\n          value: false,\n          reflectToAttribute: true,\n          observer: '_openedChanged',\n        },\n\n        /**\n         * Set true to prevent the overlay from opening automatically.\n         * @attr {boolean} auto-open-disabled\n         */\n        autoOpenDisabled: {\n          type: Boolean,\n        },\n\n        /**\n         * When present, it specifies that the field is read-only.\n         * @type {boolean}\n         */\n        readonly: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * Custom function for rendering the content of every item.\n         * Receives three arguments:\n         *\n         * - `root` The `<vaadin-combo-box-item>` internal container DOM element.\n         * - `comboBox` The reference to the `<vaadin-combo-box>` element.\n         * - `model` The object with the properties related with the rendered\n         *   item, contains:\n         *   - `model.index` The index of the rendered item.\n         *   - `model.item` The item.\n         * @type {ComboBoxRenderer | undefined}\n         */\n        renderer: Function,\n\n        /**\n         * A full set of items to filter the visible options from.\n         * The items can be of either `String` or `Object` type.\n         * @type {!Array<!ComboBoxItem | string> | undefined}\n         */\n        items: {\n          type: Array,\n          observer: '_itemsChanged',\n        },\n\n        /**\n         * If `true`, the user can input a value that is not present in the items list.\n         * `value` property will be set to the input value in this case.\n         * Also, when `value` is set programmatically, the input value will be set\n         * to reflect that value.\n         * @attr {boolean} allow-custom-value\n         * @type {boolean}\n         */\n        allowCustomValue: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * A subset of items, filtered based on the user input. Filtered items\n         * can be assigned directly to omit the internal filtering functionality.\n         * The items can be of either `String` or `Object` type.\n         * @type {!Array<!ComboBoxItem | string> | undefined}\n         */\n        filteredItems: {\n          type: Array,\n          observer: '_filteredItemsChanged',\n        },\n\n        /**\n         * Used to detect user value changes and fire `change` events.\n         * @private\n         */\n        _lastCommittedValue: String,\n\n        /**\n         * When set to `true`, \"loading\" attribute is added to host and the overlay element.\n         * @type {boolean}\n         */\n        loading: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * @type {number}\n         * @protected\n         */\n        _focusedIndex: {\n          type: Number,\n          observer: '_focusedIndexChanged',\n          value: -1,\n        },\n\n        /**\n         * Filtering string the user has typed into the input field.\n         * @type {string}\n         */\n        filter: {\n          type: String,\n          value: '',\n          notify: true,\n        },\n\n        /**\n         * The selected item from the `items` array.\n         * @type {ComboBoxItem | string | undefined}\n         */\n        selectedItem: {\n          type: Object,\n          notify: true,\n        },\n\n        /**\n         * Path for label of the item. If `items` is an array of objects, the\n         * `itemLabelPath` is used to fetch the displayed string label for each\n         * item.\n         *\n         * The item label is also used for matching items when processing user\n         * input, i.e., for filtering and selecting items.\n         * @attr {string} item-label-path\n         * @type {string}\n         */\n        itemLabelPath: {\n          type: String,\n          value: 'label',\n          observer: '_itemLabelPathChanged',\n        },\n\n        /**\n         * Path for the value of the item. If `items` is an array of objects, the\n         * `itemValuePath:` is used to fetch the string value for the selected\n         * item.\n         *\n         * The item value is used in the `value` property of the combo box,\n         * to provide the form value.\n         * @attr {string} item-value-path\n         * @type {string}\n         */\n        itemValuePath: {\n          type: String,\n          value: 'value',\n        },\n\n        /**\n         * Path for the id of the item. If `items` is an array of objects,\n         * the `itemIdPath` is used to compare and identify the same item\n         * in `selectedItem` and `filteredItems` (items given by the\n         * `dataProvider` callback).\n         * @attr {string} item-id-path\n         */\n        itemIdPath: String,\n\n        /**\n         * @type {!HTMLElement | undefined}\n         * @protected\n         */\n        _toggleElement: {\n          type: Object,\n          observer: '_toggleElementChanged',\n        },\n\n        /** @private */\n        _closeOnBlurIsPrevented: Boolean,\n\n        /** @private */\n        _scroller: Object,\n\n        /** @private */\n        _overlayOpened: {\n          type: Boolean,\n          observer: '_overlayOpenedChanged',\n        },\n      };\n    }\n\n    static get observers() {\n      return [\n        '_selectedItemChanged(selectedItem, itemValuePath, itemLabelPath)',\n        '_openedOrItemsChanged(opened, filteredItems, loading)',\n        '_updateScroller(_scroller, filteredItems, opened, loading, selectedItem, itemIdPath, _focusedIndex, renderer, theme)',\n      ];\n    }\n\n    constructor() {\n      super();\n      this._boundOnFocusout = this._onFocusout.bind(this);\n      this._boundOverlaySelectedItemChanged = this._overlaySelectedItemChanged.bind(this);\n      this._boundOnClearButtonMouseDown = this.__onClearButtonMouseDown.bind(this);\n      this._boundOnClick = this._onClick.bind(this);\n      this._boundOnOverlayTouchAction = this._onOverlayTouchAction.bind(this);\n      this._boundOnTouchend = this._onTouchend.bind(this);\n    }\n\n    /**\n     * Tag name prefix used by scroller and items.\n     * @protected\n     * @return {string}\n     */\n    get _tagNamePrefix() {\n      return 'vaadin-combo-box';\n    }\n\n    /**\n     * @return {string | undefined}\n     * @protected\n     */\n    get _inputElementValue() {\n      return this.inputElement ? this.inputElement[this._propertyForValue] : undefined;\n    }\n\n    /**\n     * @param {string} value\n     * @protected\n     */\n    set _inputElementValue(value) {\n      if (this.inputElement) {\n        this.inputElement[this._propertyForValue] = value;\n      }\n    }\n\n    /**\n     * Get a reference to the native `<input>` element.\n     * Override to provide a custom input.\n     * @protected\n     * @return {HTMLInputElement | undefined}\n     */\n    get _nativeInput() {\n      return this.inputElement;\n    }\n\n    /**\n     * Override method inherited from `InputMixin`\n     * to customize the input element.\n     * @protected\n     * @override\n     */\n    _inputElementChanged(inputElement) {\n      super._inputElementChanged(inputElement);\n\n      const input = this._nativeInput;\n\n      if (input) {\n        input.autocomplete = 'off';\n        input.autocapitalize = 'off';\n\n        input.setAttribute('role', 'combobox');\n        input.setAttribute('aria-autocomplete', 'list');\n        input.setAttribute('aria-expanded', !!this.opened);\n\n        // Disable the macOS Safari spell check auto corrections.\n        input.setAttribute('spellcheck', 'false');\n\n        // Disable iOS autocorrect suggestions.\n        input.setAttribute('autocorrect', 'off');\n\n        this._revertInputValueToValue();\n\n        if (this.clearElement) {\n          this.clearElement.addEventListener('mousedown', this._boundOnClearButtonMouseDown);\n        }\n      }\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this._initOverlay();\n      this._initScroller();\n\n      this.addEventListener('focusout', this._boundOnFocusout);\n\n      this._lastCommittedValue = this.value;\n\n      this.addEventListener('click', this._boundOnClick);\n      this.addEventListener('touchend', this._boundOnTouchend);\n\n      const bringToFrontListener = () => {\n        requestAnimationFrame(() => {\n          this.$.overlay.bringToFront();\n        });\n      };\n\n      this.addEventListener('mousedown', bringToFrontListener);\n      this.addEventListener('touchstart', bringToFrontListener);\n\n      processTemplates(this);\n\n      this.addController(new VirtualKeyboardController(this));\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      // Close the overlay on detach\n      this.close();\n    }\n\n    /**\n     * Requests an update for the content of items.\n     * While performing the update, it invokes the renderer (passed in the `renderer` property) once an item.\n     *\n     * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n     */\n    requestContentUpdate() {\n      if (!this._scroller) {\n        return;\n      }\n\n      this._scroller.requestContentUpdate();\n\n      this._getItemElements().forEach((item) => {\n        item.requestContentUpdate();\n      });\n    }\n\n    /**\n     * Opens the dropdown list.\n     */\n    open() {\n      // Prevent _open() being called when input is disabled or read-only\n      if (!this.disabled && !this.readonly) {\n        this.opened = true;\n      }\n    }\n\n    /**\n     * Closes the dropdown list.\n     */\n    close() {\n      this.opened = false;\n    }\n\n    /**\n     * Override Polymer lifecycle callback to handle `filter` property change after\n     * the observer for `opened` property is triggered. This is needed when opening\n     * combo-box on user input to ensure the focused index is set correctly.\n     *\n     * @param {!Object} currentProps Current accessor values\n     * @param {?Object} changedProps Properties changed since the last call\n     * @param {?Object} oldProps Previous values for each changed property\n     * @protected\n     * @override\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) {\n      super._propertiesChanged(currentProps, changedProps, oldProps);\n\n      if (changedProps.filter !== undefined) {\n        this._filterChanged(changedProps.filter);\n      }\n    }\n\n    /** @private */\n    _initOverlay() {\n      const overlay = this.$.overlay;\n\n      // Store instance for detecting \"dir\" attribute on opening\n      overlay._comboBox = this;\n\n      overlay.addEventListener('touchend', this._boundOnOverlayTouchAction);\n      overlay.addEventListener('touchmove', this._boundOnOverlayTouchAction);\n\n      // Prevent blurring the input when clicking inside the overlay\n      overlay.addEventListener('mousedown', (e) => e.preventDefault());\n\n      // Manual two-way binding for the overlay \"opened\" property\n      overlay.addEventListener('opened-changed', (e) => {\n        this._overlayOpened = e.detail.value;\n      });\n    }\n\n    /**\n     * Create and initialize the scroller element.\n     * Override to provide custom host reference.\n     *\n     * @protected\n     */\n    _initScroller(host) {\n      const scrollerTag = `${this._tagNamePrefix}-scroller`;\n\n      const overlay = this.$.overlay;\n\n      overlay.renderer = (root) => {\n        if (!root.firstChild) {\n          root.appendChild(document.createElement(scrollerTag));\n        }\n      };\n\n      // Ensure the scroller is rendered\n      overlay.requestContentUpdate();\n\n      const scroller = overlay.querySelector(scrollerTag);\n\n      scroller.comboBox = host || this;\n      scroller.getItemLabel = this._getItemLabel.bind(this);\n      scroller.addEventListener('selection-changed', this._boundOverlaySelectedItemChanged);\n\n      // Trigger the observer to set properties\n      this._scroller = scroller;\n    }\n\n    /** @private */\n    // eslint-disable-next-line max-params\n    _updateScroller(scroller, items, opened, loading, selectedItem, itemIdPath, focusedIndex, renderer, theme) {\n      if (scroller) {\n        if (opened) {\n          scroller.style.maxHeight =\n            getComputedStyle(this).getPropertyValue(`--${this._tagNamePrefix}-overlay-max-height`) || '65vh';\n        }\n\n        scroller.setProperties({\n          items: opened ? items : [],\n          opened,\n          loading,\n          selectedItem,\n          itemIdPath,\n          focusedIndex,\n          renderer,\n          theme,\n        });\n      }\n    }\n\n    /** @private */\n    _openedOrItemsChanged(opened, items, loading) {\n      // Close the overlay if there are no items to display.\n      // See https://github.com/vaadin/vaadin-combo-box/pull/964\n      this._overlayOpened = !!(opened && (loading || (items && items.length)));\n    }\n\n    /** @private */\n    _overlayOpenedChanged(opened, wasOpened) {\n      if (opened) {\n        this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-opened', { bubbles: true, composed: true }));\n\n        this._onOpened();\n      } else if (wasOpened && this.filteredItems && this.filteredItems.length) {\n        this.close();\n\n        this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-closed', { bubbles: true, composed: true }));\n      }\n    }\n\n    /** @private */\n    _focusedIndexChanged(index, oldIndex) {\n      if (oldIndex === undefined) {\n        return;\n      }\n      this._updateActiveDescendant(index);\n    }\n\n    /** @protected */\n    _isInputFocused() {\n      return this.inputElement && isElementFocused(this.inputElement);\n    }\n\n    /** @private */\n    _updateActiveDescendant(index) {\n      const input = this._nativeInput;\n      if (!input) {\n        return;\n      }\n\n      const item = this._getItemElements().find((el) => el.index === index);\n      if (item) {\n        input.setAttribute('aria-activedescendant', item.id);\n      } else {\n        input.removeAttribute('aria-activedescendant');\n      }\n    }\n\n    /** @private */\n    _openedChanged(opened, wasOpened) {\n      // Prevent _close() being called when opened is set to its default value (false).\n      if (wasOpened === undefined) {\n        return;\n      }\n\n      if (opened) {\n        this._openedWithFocusRing = this.hasAttribute('focus-ring');\n        // For touch devices, we don't want to popup virtual keyboard\n        // unless input element is explicitly focused by the user.\n        if (!this._isInputFocused() && !isTouch) {\n          this.focus();\n        }\n\n        this.$.overlay.restoreFocusOnClose = true;\n      } else {\n        this._onClosed();\n        if (this._openedWithFocusRing && this._isInputFocused()) {\n          this.setAttribute('focus-ring', '');\n        }\n      }\n\n      const input = this._nativeInput;\n      if (input) {\n        input.setAttribute('aria-expanded', !!opened);\n\n        if (opened) {\n          input.setAttribute('aria-controls', this._scroller.id);\n        } else {\n          input.removeAttribute('aria-controls');\n        }\n      }\n    }\n\n    /** @private */\n    _onOverlayTouchAction() {\n      // On touch devices, blur the input on touch start inside the overlay, in order to hide\n      // the virtual keyboard. But don't close the overlay on this blur.\n      this._closeOnBlurIsPrevented = true;\n      this.inputElement.blur();\n      this._closeOnBlurIsPrevented = false;\n    }\n\n    /** @protected */\n    _isClearButton(event) {\n      return event.composedPath()[0] === this.clearElement;\n    }\n\n    /**\n     * @param {Event} event\n     * @protected\n     */\n    _handleClearButtonClick(event) {\n      event.preventDefault();\n      this._clear();\n\n      // De-select dropdown item\n      if (this.opened) {\n        this.requestContentUpdate();\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onToggleButtonClick(event) {\n      // Prevent parent components such as `vaadin-grid`\n      // from handling the click event after it bubbles.\n      event.preventDefault();\n\n      if (this.opened) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @protected\n     */\n    _onHostClick(event) {\n      if (!this.autoOpenDisabled) {\n        event.preventDefault();\n        this.open();\n      }\n    }\n\n    /** @private */\n    _onClick(e) {\n      const path = e.composedPath();\n\n      if (this._isClearButton(e)) {\n        this._handleClearButtonClick(e);\n      } else if (path.indexOf(this._toggleElement) > -1) {\n        this._onToggleButtonClick(e);\n      } else {\n        this._onHostClick(e);\n      }\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     *\n     * @param {KeyboardEvent} e\n     * @protected\n     * @override\n     */\n    _onKeyDown(e) {\n      super._onKeyDown(e);\n\n      if (e.key === 'Tab') {\n        this.$.overlay.restoreFocusOnClose = false;\n      } else if (e.key === 'ArrowDown') {\n        this._onArrowDown();\n\n        // Prevent caret from moving\n        e.preventDefault();\n      } else if (e.key === 'ArrowUp') {\n        this._onArrowUp();\n\n        // Prevent caret from moving\n        e.preventDefault();\n      }\n    }\n\n    /** @private */\n    _getItemLabel(item) {\n      let label = item && this.itemLabelPath ? this.get(this.itemLabelPath, item) : undefined;\n      if (label === undefined || label === null) {\n        label = item ? item.toString() : '';\n      }\n      return label;\n    }\n\n    /** @private */\n    _getItemValue(item) {\n      let value = item && this.itemValuePath ? this.get(this.itemValuePath, item) : undefined;\n      if (value === undefined) {\n        value = item ? item.toString() : '';\n      }\n      return value;\n    }\n\n    /** @private */\n    _onArrowDown() {\n      if (this.opened) {\n        const items = this.filteredItems;\n        if (items) {\n          this._focusedIndex = Math.min(items.length - 1, this._focusedIndex + 1);\n          this._prefillFocusedItemLabel();\n        }\n      } else {\n        this.open();\n      }\n    }\n\n    /** @private */\n    _onArrowUp() {\n      if (this.opened) {\n        if (this._focusedIndex > -1) {\n          this._focusedIndex = Math.max(0, this._focusedIndex - 1);\n        } else {\n          const items = this.filteredItems;\n          if (items) {\n            this._focusedIndex = items.length - 1;\n          }\n        }\n\n        this._prefillFocusedItemLabel();\n      } else {\n        this.open();\n      }\n    }\n\n    /** @private */\n    _prefillFocusedItemLabel() {\n      if (this._focusedIndex > -1) {\n        const focusedItem = this.filteredItems[this._focusedIndex];\n        this._inputElementValue = this._getItemLabel(focusedItem);\n        this._markAllSelectionRange();\n      }\n    }\n\n    /** @private */\n    _setSelectionRange(start, end) {\n      // Setting selection range focuses and/or moves the caret in some browsers,\n      // and there's no need to modify the selection range if the input isn't focused anyway.\n      // This affects Safari. When the overlay is open, and then hitting tab, browser should focus\n      // the next focusable element instead of the combo-box itself.\n      if (this._isInputFocused() && this.inputElement.setSelectionRange) {\n        this.inputElement.setSelectionRange(start, end);\n      }\n    }\n\n    /** @private */\n    _markAllSelectionRange() {\n      if (this._inputElementValue !== undefined) {\n        this._setSelectionRange(0, this._inputElementValue.length);\n      }\n    }\n\n    /** @private */\n    _clearSelectionRange() {\n      if (this._inputElementValue !== undefined) {\n        const pos = this._inputElementValue ? this._inputElementValue.length : 0;\n        this._setSelectionRange(pos, pos);\n      }\n    }\n\n    /** @private */\n    _closeOrCommit() {\n      if (!this.opened && !this.loading) {\n        this._commitValue();\n      } else {\n        this.close();\n      }\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     *\n     * @param {KeyboardEvent} e\n     * @protected\n     * @override\n     */\n    _onEnter(e) {\n      // Do not commit value when custom values are disallowed and input value is not a valid option\n      // also stop propagation of the event, otherwise the user could submit a form while the input\n      // still contains an invalid value\n      if (!this.allowCustomValue && this._inputElementValue !== '' && this._focusedIndex < 0) {\n        // Do not submit the surrounding form.\n        e.preventDefault();\n        // Do not trigger global listeners\n        e.stopPropagation();\n        return;\n      }\n\n      // Stop propagation of the enter event only if the dropdown is opened, this\n      // \"consumes\" the enter event for the action of closing the dropdown\n      if (this.opened) {\n        // Do not submit the surrounding form.\n        e.preventDefault();\n        // Do not trigger global listeners\n        e.stopPropagation();\n      }\n\n      this._closeOrCommit();\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     * Do not call `super` in order to override clear\n     * button logic defined in `InputControlMixin`.\n     *\n     * @param {!KeyboardEvent} e\n     * @protected\n     * @override\n     */\n    _onEscape(e) {\n      if (this.autoOpenDisabled) {\n        // Auto-open is disabled\n        if (this.opened || (this.value !== this._inputElementValue && this._inputElementValue.length > 0)) {\n          // The overlay is open or\n          // The input value has changed but the change hasn't been committed, so cancel it.\n          e.stopPropagation();\n          this._focusedIndex = -1;\n          this.cancel();\n        } else if (this.clearButtonVisible && !this.opened && !!this.value) {\n          e.stopPropagation();\n          // The clear button is visible and the overlay is closed, so clear the value.\n          this._clear();\n        }\n      } else if (this.opened) {\n        // Auto-open is enabled\n        // The overlay is open\n        e.stopPropagation();\n\n        if (this._focusedIndex > -1) {\n          // An item is focused, revert the input to the filtered value\n          this._focusedIndex = -1;\n          this._revertInputValue();\n        } else {\n          // No item is focused, cancel the change and close the overlay\n          this.cancel();\n        }\n      } else if (this.clearButtonVisible && !!this.value) {\n        e.stopPropagation();\n        // The clear button is visible and the overlay is closed, so clear the value.\n        this._clear();\n      }\n    }\n\n    /** @private */\n    _toggleElementChanged(toggleElement) {\n      if (toggleElement) {\n        // Don't blur the input on toggle mousedown\n        toggleElement.addEventListener('mousedown', (e) => e.preventDefault());\n        // Unfocus previously focused element if focus is not inside combo box (on touch devices)\n        toggleElement.addEventListener('click', () => {\n          if (isTouch && !this._isInputFocused()) {\n            document.activeElement.blur();\n          }\n        });\n      }\n    }\n\n    /**\n     * Clears the current value.\n     * @protected\n     */\n    _clear() {\n      this.selectedItem = null;\n\n      if (this.allowCustomValue) {\n        this.value = '';\n      }\n\n      this._detectAndDispatchChange();\n    }\n\n    /**\n     * Reverts back to original value.\n     */\n    cancel() {\n      this._revertInputValueToValue();\n      // In the next _detectAndDispatchChange() call, the change detection should not pass\n      this._lastCommittedValue = this.value;\n      this._closeOrCommit();\n    }\n\n    /** @private */\n    _onOpened() {\n      // Defer scroll position adjustment to improve performance.\n      requestAnimationFrame(() => {\n        this._scrollIntoView(this._focusedIndex);\n\n        // Set attribute after the items are rendered when overlay is opened for the first time.\n        this._updateActiveDescendant(this._focusedIndex);\n      });\n\n      // _detectAndDispatchChange() should not consider value changes done before opening\n      this._lastCommittedValue = this.value;\n    }\n\n    /** @private */\n    _onClosed() {\n      if (!this.loading || this.allowCustomValue) {\n        this._commitValue();\n      }\n    }\n\n    /** @private */\n    _commitValue() {\n      if (this._focusedIndex > -1) {\n        const focusedItem = this.filteredItems[this._focusedIndex];\n        if (this.selectedItem !== focusedItem) {\n          this.selectedItem = focusedItem;\n        }\n        // Make sure input field is updated in case value doesn't change (i.e. FOO -> foo)\n        this._inputElementValue = this._getItemLabel(this.selectedItem);\n      } else if (this._inputElementValue === '' || this._inputElementValue === undefined) {\n        this.selectedItem = null;\n\n        if (this.allowCustomValue) {\n          this.value = '';\n        }\n      } else {\n        // Try to find an item which label matches the input value.\n        const items = [...(this.filteredItems || []), this.selectedItem];\n        const itemMatchingInputValue = items[this.__getItemIndexByLabel(items, this._inputElementValue)];\n\n        if (\n          this.allowCustomValue &&\n          // To prevent a repetitive input value being saved after pressing ESC and Tab.\n          !itemMatchingInputValue\n        ) {\n          const customValue = this._inputElementValue;\n\n          // Store reference to the last custom value for checking it on focusout.\n          this._lastCustomValue = customValue;\n\n          // An item matching by label was not found, but custom values are allowed.\n          // Dispatch a custom-value-set event with the input value.\n          const e = new CustomEvent('custom-value-set', {\n            detail: customValue,\n            composed: true,\n            cancelable: true,\n            bubbles: true,\n          });\n          this.dispatchEvent(e);\n          if (!e.defaultPrevented) {\n            this.value = customValue;\n          }\n        } else if (!this.allowCustomValue && !this.opened && itemMatchingInputValue) {\n          // An item matching by label was found, select it.\n          this.value = this._getItemValue(itemMatchingInputValue);\n        } else {\n          // Revert the input value\n          this._inputElementValue = this.selectedItem ? this._getItemLabel(this.selectedItem) : this.value || '';\n        }\n      }\n\n      this._detectAndDispatchChange();\n\n      this._clearSelectionRange();\n\n      this.filter = '';\n    }\n\n    /**\n     * @return {string}\n     * @protected\n     */\n    get _propertyForValue() {\n      return 'value';\n    }\n\n    /**\n     * Override an event listener from `InputMixin`.\n     * @param {!Event} event\n     * @protected\n     * @override\n     */\n    _onInput(event) {\n      const filter = this._inputElementValue;\n\n      // When opening dropdown on user input, both `opened` and `filter` properties are set.\n      // Perform a batched property update instead of relying on sync property observers.\n      // This is necessary to avoid an extra data-provider request for loading first page.\n      const props = {};\n\n      if (this.filter === filter) {\n        // Filter and input value might get out of sync, while keyboard navigating for example.\n        // Afterwards, input value might be changed to the same value as used in filtering.\n        // In situation like these, we need to make sure all the filter changes handlers are run.\n        this._filterChanged(this.filter);\n      } else {\n        props.filter = filter;\n      }\n\n      if (!this.opened && !this._isClearButton(event) && !this.autoOpenDisabled) {\n        props.opened = true;\n      }\n\n      this.setProperties(props);\n    }\n\n    /**\n     * Override an event listener from `InputMixin`.\n     * @param {!Event} event\n     * @protected\n     * @override\n     */\n    _onChange(event) {\n      // Suppress the native change event fired on the native input.\n      // We use `_detectAndDispatchChange` to fire a custom event.\n      event.stopPropagation();\n    }\n\n    /** @private */\n    _itemLabelPathChanged(itemLabelPath) {\n      if (typeof itemLabelPath !== 'string') {\n        console.error('You should set itemLabelPath to a valid string');\n      }\n    }\n\n    /** @private */\n    _filterChanged(filter) {\n      // Scroll to the top of the list whenever the filter changes.\n      this._scrollIntoView(0);\n\n      this._focusedIndex = -1;\n\n      if (this.items) {\n        this.filteredItems = this._filterItems(this.items, filter);\n      } else {\n        // With certain use cases (e. g., external filtering), `items` are\n        // undefined. Filtering is unnecessary per se, but the filteredItems\n        // observer should still be invoked to update focused item.\n        this._filteredItemsChanged(this.filteredItems);\n      }\n    }\n\n    /** @protected */\n    _revertInputValue() {\n      if (this.filter !== '') {\n        this._inputElementValue = this.filter;\n      } else {\n        this._revertInputValueToValue();\n      }\n      this._clearSelectionRange();\n    }\n\n    /** @private */\n    _revertInputValueToValue() {\n      if (this.allowCustomValue && !this.selectedItem) {\n        this._inputElementValue = this.value;\n      } else {\n        this._inputElementValue = this._getItemLabel(this.selectedItem);\n      }\n    }\n\n    /** @private */\n    _selectedItemChanged(selectedItem) {\n      if (selectedItem === null || selectedItem === undefined) {\n        if (this.filteredItems) {\n          if (!this.allowCustomValue) {\n            this.value = '';\n          }\n\n          this._toggleHasValue(this._hasValue);\n          this._inputElementValue = this.value;\n        }\n      } else {\n        const value = this._getItemValue(selectedItem);\n        if (this.value !== value) {\n          this.value = value;\n          if (this.value !== value) {\n            // The value was changed to something else in value-changed listener,\n            // so prevent from resetting it to the previous value.\n            return;\n          }\n        }\n\n        this._toggleHasValue(true);\n        this._inputElementValue = this._getItemLabel(selectedItem);\n      }\n\n      if (this.filteredItems) {\n        this._focusedIndex = this.filteredItems.indexOf(selectedItem);\n      }\n    }\n\n    /**\n     * Override an observer from `InputMixin`.\n     * @protected\n     * @override\n     */\n    _valueChanged(value, oldVal) {\n      if (value === '' && oldVal === undefined) {\n        // Initializing, no need to do anything\n        // See https://github.com/vaadin/vaadin-combo-box/issues/554\n        return;\n      }\n\n      if (isValidValue(value)) {\n        if (this._getItemValue(this.selectedItem) !== value) {\n          this._selectItemForValue(value);\n        }\n\n        if (!this.selectedItem && this.allowCustomValue) {\n          this._inputElementValue = value;\n        }\n\n        this._toggleHasValue(this._hasValue);\n      } else {\n        this.selectedItem = null;\n      }\n\n      this.filter = '';\n\n      // In the next _detectAndDispatchChange() call, the change detection should pass\n      this._lastCommittedValue = undefined;\n    }\n\n    /** @private */\n    _detectAndDispatchChange() {\n      if (this.value !== this._lastCommittedValue) {\n        this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n        this._lastCommittedValue = this.value;\n      }\n    }\n\n    /** @private */\n    _itemsChanged(items, oldItems) {\n      this._ensureItemsOrDataProvider(() => {\n        this.items = oldItems;\n      });\n\n      if (items) {\n        this.filteredItems = items.slice(0);\n      } else if (oldItems) {\n        // Only clear filteredItems if the component had items previously but got cleared\n        this.filteredItems = null;\n      }\n    }\n\n    /** @private */\n    _filteredItemsChanged(filteredItems, oldFilteredItems) {\n      // Store the currently focused item if any. The focused index preserves\n      // in the case when more filtered items are loading but it is reset\n      // when the user types in a filter query.\n      const focusedItem = oldFilteredItems ? oldFilteredItems[this._focusedIndex] : null;\n\n      // Try to sync `selectedItem` based on `value` once a new set of `filteredItems` is available\n      // (as a result of external filtering or when they have been loaded by the data provider).\n      // When `value` is specified but `selectedItem` is not, it means that there was no item\n      // matching `value` at the moment `value` was set, so `selectedItem` has remained unsynced.\n      const valueIndex = this.__getItemIndexByValue(filteredItems, this.value);\n      if ((this.selectedItem === null || this.selectedItem === undefined) && valueIndex >= 0) {\n        this.selectedItem = filteredItems[valueIndex];\n      }\n\n      // Try to first set focus on the item that had been focused before `filteredItems` were updated\n      // if it is still present in the `filteredItems` array. Otherwise, set the focused index\n      // depending on the selected item or the filter query.\n      const focusedItemIndex = this.__getItemIndexByValue(filteredItems, this._getItemValue(focusedItem));\n      if (focusedItemIndex > -1) {\n        this._focusedIndex = focusedItemIndex;\n      } else {\n        this.__setInitialFocusedIndex();\n      }\n    }\n\n    /** @private */\n    __setInitialFocusedIndex() {\n      const inputValue = this._inputElementValue;\n      if (inputValue === undefined || inputValue === this._getItemLabel(this.selectedItem)) {\n        // When the input element value is the same as the current value or not defined,\n        // set the focused index to the item that matches the value.\n        this._focusedIndex = this.__getItemIndexByLabel(this.filteredItems, this._getItemLabel(this.selectedItem));\n      } else {\n        // When the user filled in something that is different from the current value = filtering is enabled,\n        // set the focused index to the item that matches the filter query.\n        this._focusedIndex = this.__getItemIndexByLabel(this.filteredItems, this.filter);\n      }\n    }\n\n    /** @private */\n    _filterItems(arr, filter) {\n      if (!arr) {\n        return arr;\n      }\n\n      const filteredItems = arr.filter((item) => {\n        filter = filter ? filter.toString().toLowerCase() : '';\n        // Check if item contains input value.\n        return this._getItemLabel(item).toString().toLowerCase().indexOf(filter) > -1;\n      });\n\n      return filteredItems;\n    }\n\n    /** @private */\n    _selectItemForValue(value) {\n      const valueIndex = this.__getItemIndexByValue(this.filteredItems, value);\n      const previouslySelectedItem = this.selectedItem;\n\n      if (valueIndex >= 0) {\n        this.selectedItem = this.filteredItems[valueIndex];\n      } else if (this.dataProvider && this.selectedItem === undefined) {\n        this.selectedItem = undefined;\n      } else {\n        this.selectedItem = null;\n      }\n\n      if (this.selectedItem === null && previouslySelectedItem === null) {\n        this._selectedItemChanged(this.selectedItem);\n      }\n    }\n\n    /** @private */\n    _getItemElements() {\n      return Array.from(this._scroller.querySelectorAll(`${this._tagNamePrefix}-item`));\n    }\n\n    /** @private */\n    _scrollIntoView(index) {\n      if (!this._scroller) {\n        return;\n      }\n      this._scroller.scrollIntoView(index);\n    }\n\n    /**\n     * Returns the first item that matches the provided value.\n     *\n     * @private\n     */\n    __getItemIndexByValue(items, value) {\n      if (!items || !isValidValue(value)) {\n        return -1;\n      }\n\n      return findItemIndex(items, (item) => {\n        return this._getItemValue(item) === value;\n      });\n    }\n\n    /**\n     * Returns the first item that matches the provided label.\n     * Labels are matched against each other case insensitively.\n     *\n     * @private\n     */\n    __getItemIndexByLabel(items, label) {\n      if (!items || !label) {\n        return -1;\n      }\n\n      return findItemIndex(items, (item) => {\n        return this._getItemLabel(item).toString().toLowerCase() === label.toString().toLowerCase();\n      });\n    }\n\n    /** @private */\n    _overlaySelectedItemChanged(e) {\n      // Stop this private event from leaking outside.\n      e.stopPropagation();\n\n      if (e.detail.item instanceof ComboBoxPlaceholder) {\n        // Placeholder items should not be selectable.\n        return;\n      }\n\n      if (this.opened) {\n        this._focusedIndex = this.filteredItems.indexOf(e.detail.item);\n        this.close();\n      }\n    }\n\n    /** @private */\n    __onClearButtonMouseDown(event) {\n      event.preventDefault(); // Prevent native focusout event\n      this.inputElement.focus();\n    }\n\n    /** @private */\n    _onFocusout(event) {\n      // VoiceOver on iOS fires `focusout` event when moving focus to the item in the dropdown.\n      // Do not focus the input in this case, because it would break announcement for the item.\n      if (event.relatedTarget && event.relatedTarget.localName === `${this._tagNamePrefix}-item`) {\n        return;\n      }\n\n      // Fixes the problem with `focusout` happening when clicking on the scroll bar on Edge\n      if (event.relatedTarget === this.$.overlay) {\n        event.composedPath()[0].focus();\n        return;\n      }\n      if (!this.readonly && !this._closeOnBlurIsPrevented) {\n        // User's logic in `custom-value-set` event listener might cause input to blur,\n        // which will result in attempting to commit the same custom value once again.\n        if (!this.opened && this.allowCustomValue && this._inputElementValue === this._lastCustomValue) {\n          delete this._lastCustomValue;\n          return;\n        }\n\n        this._closeOrCommit();\n      }\n    }\n\n    /** @private */\n    _onTouchend(event) {\n      if (!this.clearElement || event.composedPath()[0] !== this.clearElement) {\n        return;\n      }\n\n      event.preventDefault();\n      this._clear();\n    }\n\n    /**\n     * Fired when the value changes.\n     *\n     * @event value-changed\n     * @param {Object} detail\n     * @param {String} detail.value the combobox value\n     */\n\n    /**\n     * Fired when selected item changes.\n     *\n     * @event selected-item-changed\n     * @param {Object} detail\n     * @param {Object|String} detail.value the selected item. Type is the same as the type of `items`.\n     */\n\n    /**\n     * Fired when the user sets a custom value.\n     * @event custom-value-set\n     * @param {String} detail the custom value\n     */\n\n    /**\n     * Fired when value changes.\n     * To comply with https://developer.mozilla.org/en-US/docs/Web/Events/change\n     * @event change\n     */\n\n    /**\n     * Fired after the `vaadin-combo-box-overlay` opens.\n     *\n     * @event vaadin-combo-box-dropdown-opened\n     */\n\n    /**\n     * Fired after the `vaadin-combo-box-overlay` closes.\n     *\n     * @event vaadin-combo-box-dropdown-closed\n     */\n  };\n"],
  "mappings": "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",
  "names": ["item", "loader", "item", "item", "overlay"]
}
