{
  "version": 3,
  "sources": ["../../@vaadin/notification/theme/lumo/vaadin-notification-styles.js", "../../@vaadin/notification/src/vaadin-notification.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-notification-card',\n  css`\n    :host {\n      position: relative;\n      margin: var(--lumo-space-s);\n    }\n\n    [part='overlay'] {\n      background: var(--lumo-base-color) linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\n      border-radius: var(--lumo-border-radius-l);\n      box-shadow: 0 0 0 1px var(--lumo-contrast-10pct), var(--lumo-box-shadow-l);\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-m);\n      font-weight: 400;\n      line-height: var(--lumo-line-height-s);\n      letter-spacing: 0;\n      text-transform: none;\n      -webkit-text-size-adjust: 100%;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    [part='content'] {\n      padding: var(--lumo-space-wide-l);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    [part='content'] ::slotted(vaadin-button) {\n      flex: none;\n      margin: 0 calc(var(--lumo-space-s) * -1) 0 var(--lumo-space-m);\n    }\n\n    :host([slot^='middle']) {\n      max-width: 80vw;\n      margin: var(--lumo-space-s) auto;\n    }\n\n    :host([slot\\$='stretch']) {\n      margin: 0;\n    }\n\n    :host([slot\\$='stretch']) [part='overlay'] {\n      border-radius: 0;\n    }\n\n    @media (min-width: 421px) {\n      :host(:not([slot\\$='stretch'])) {\n        display: flex;\n      }\n\n      :host([slot\\$='end']) {\n        justify-content: flex-end;\n      }\n\n      :host([slot^='middle']),\n      :host([slot\\$='center']) {\n        display: flex;\n        justify-content: center;\n      }\n    }\n\n    @keyframes lumo-notification-exit-fade-out {\n      100% {\n        opacity: 0;\n      }\n    }\n\n    @keyframes lumo-notification-enter-fade-in {\n      0% {\n        opacity: 0;\n      }\n    }\n\n    @keyframes lumo-notification-enter-slide-down {\n      0% {\n        transform: translateY(-200%);\n        opacity: 0;\n      }\n    }\n\n    @keyframes lumo-notification-exit-slide-up {\n      100% {\n        transform: translateY(-200%);\n        opacity: 0;\n      }\n    }\n\n    @keyframes lumo-notification-enter-slide-up {\n      0% {\n        transform: translateY(200%);\n        opacity: 0;\n      }\n    }\n\n    @keyframes lumo-notification-exit-slide-down {\n      100% {\n        transform: translateY(200%);\n        opacity: 0;\n      }\n    }\n\n    :host([slot='middle'][opening]) {\n      animation: lumo-notification-enter-fade-in 300ms;\n    }\n\n    :host([slot='middle'][closing]) {\n      animation: lumo-notification-exit-fade-out 300ms;\n    }\n\n    :host([slot^='top'][opening]) {\n      animation: lumo-notification-enter-slide-down 300ms;\n    }\n\n    :host([slot^='top'][closing]) {\n      animation: lumo-notification-exit-slide-up 300ms;\n    }\n\n    :host([slot^='bottom'][opening]) {\n      animation: lumo-notification-enter-slide-up 300ms;\n    }\n\n    :host([slot^='bottom'][closing]) {\n      animation: lumo-notification-exit-slide-down 300ms;\n    }\n\n    :host([theme~='primary']) [part='overlay'] {\n      background: var(--lumo-primary-color);\n      color: var(--lumo-primary-contrast-color);\n      box-shadow: var(--lumo-box-shadow-l);\n    }\n\n    :host([theme~='primary']) {\n      --_lumo-button-background-color: var(--lumo-shade-20pct);\n      --_lumo-button-color: var(--lumo-primary-contrast-color);\n      --_lumo-button-primary-background-color: var(--lumo-primary-contrast-color);\n      --_lumo-button-primary-color: var(--lumo-primary-text-color);\n    }\n\n    :host([theme~='contrast']) [part='overlay'] {\n      background: var(--lumo-contrast);\n      color: var(--lumo-base-color);\n      box-shadow: var(--lumo-box-shadow-l);\n    }\n\n    :host([theme~='contrast']) {\n      --_lumo-button-background-color: var(--lumo-contrast-20pct);\n      --_lumo-button-color: var(--lumo-base-color);\n      --_lumo-button-primary-background-color: var(--lumo-base-color);\n      --_lumo-button-primary-color: var(--lumo-contrast);\n    }\n\n    :host([theme~='success']) [part='overlay'] {\n      background: var(--lumo-success-color);\n      color: var(--lumo-success-contrast-color);\n      box-shadow: var(--lumo-box-shadow-l);\n    }\n\n    :host([theme~='success']) {\n      --_lumo-button-background-color: var(--lumo-shade-20pct);\n      --_lumo-button-color: var(--lumo-success-contrast-color);\n      --_lumo-button-primary-background-color: var(--lumo-success-contrast-color);\n      --_lumo-button-primary-color: var(--lumo-success-text-color);\n    }\n\n    :host([theme~='error']) [part='overlay'] {\n      background: var(--lumo-error-color);\n      color: var(--lumo-error-contrast-color);\n      box-shadow: var(--lumo-box-shadow-l);\n    }\n\n    :host([theme~='error']) {\n      --_lumo-button-background-color: var(--lumo-shade-20pct);\n      --_lumo-button-color: var(--lumo-error-contrast-color);\n      --_lumo-button-primary-background-color: var(--lumo-error-contrast-color);\n      --_lumo-button-primary-color: var(--lumo-error-text-color);\n    }\n  `,\n  { moduleId: 'lumo-notification-card' },\n);\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { render } from 'lit';\nimport { isTemplateResult } from 'lit/directive-helpers.js';\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\n\n/**\n * An element used internally by `<vaadin-notification>`. Not intended to be used separately.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @private\n */\nclass NotificationContainer extends ThemableMixin(ElementMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          position: fixed;\n          z-index: 1000;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          box-sizing: border-box;\n\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          pointer-events: none;\n        }\n\n        [region-group] {\n          flex: 1 1 0%;\n          display: flex;\n        }\n\n        [region-group='top'] {\n          align-items: flex-start;\n        }\n\n        [region-group='bottom'] {\n          align-items: flex-end;\n        }\n\n        [region-group] > [region] {\n          flex: 1 1 0%;\n        }\n\n        @media (max-width: 420px) {\n          [region-group] {\n            flex-direction: column;\n            align-items: stretch;\n          }\n\n          [region-group='top'] {\n            justify-content: flex-start;\n          }\n\n          [region-group='bottom'] {\n            justify-content: flex-end;\n          }\n\n          [region-group] > [region] {\n            flex: initial;\n          }\n        }\n      </style>\n\n      <div region=\"top-stretch\"><slot name=\"top-stretch\"></slot></div>\n      <div region-group=\"top\">\n        <div region=\"top-start\"><slot name=\"top-start\"></slot></div>\n        <div region=\"top-center\"><slot name=\"top-center\"></slot></div>\n        <div region=\"top-end\"><slot name=\"top-end\"></slot></div>\n      </div>\n      <div region=\"middle\"><slot name=\"middle\"></slot></div>\n      <div region-group=\"bottom\">\n        <div region=\"bottom-start\"><slot name=\"bottom-start\"></slot></div>\n        <div region=\"bottom-center\"><slot name=\"bottom-center\"></slot></div>\n        <div region=\"bottom-end\"><slot name=\"bottom-end\"></slot></div>\n      </div>\n      <div region=\"bottom-stretch\"><slot name=\"bottom-stretch\"></slot></div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-notification-container';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True when the container is opened\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: '_openedChanged',\n      },\n    };\n  }\n\n  constructor() {\n    super();\n\n    this._boundVaadinOverlayClose = this._onVaadinOverlayClose.bind(this);\n    if (isIOS) {\n      this._boundIosResizeListener = () => this._detectIosNavbar();\n    }\n  }\n\n  /** @private */\n  _openedChanged(opened) {\n    if (opened) {\n      document.body.appendChild(this);\n      document.addEventListener('vaadin-overlay-close', this._boundVaadinOverlayClose);\n      if (this._boundIosResizeListener) {\n        this._detectIosNavbar();\n        window.addEventListener('resize', this._boundIosResizeListener);\n      }\n    } else {\n      document.body.removeChild(this);\n      document.removeEventListener('vaadin-overlay-close', this._boundVaadinOverlayClose);\n      if (this._boundIosResizeListener) {\n        window.removeEventListener('resize', this._boundIosResizeListener);\n      }\n    }\n  }\n\n  /** @private */\n  _detectIosNavbar() {\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n    const landscape = innerWidth > innerHeight;\n    const clientHeight = document.documentElement.clientHeight;\n    if (landscape && clientHeight > innerHeight) {\n      this.style.bottom = `${clientHeight - innerHeight}px`;\n    } else {\n      this.style.bottom = '0';\n    }\n  }\n\n  /** @private */\n  _onVaadinOverlayClose(event) {\n    // Notifications are a separate overlay mechanism from vaadin-overlay, and\n    // interacting with them should not close modal overlays\n    const sourceEvent = event.detail.sourceEvent;\n    const isFromNotification = sourceEvent && sourceEvent.composedPath().indexOf(this) >= 0;\n    if (isFromNotification) {\n      event.preventDefault();\n    }\n  }\n}\n\n/**\n * An element used internally by `<vaadin-notification>`. Not intended to be used separately.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @private\n */\nclass NotificationCard extends ThemableMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        [part='overlay'] {\n          pointer-events: auto;\n        }\n      </style>\n\n      <div part=\"overlay\">\n        <div part=\"content\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-notification-card';\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.setAttribute('role', 'alert');\n    this.setAttribute('aria-live', 'polite');\n  }\n}\n\n/**\n * `<vaadin-notification>` is a Web Component providing accessible and customizable notifications (toasts).\n *\n * ### Rendering\n *\n * The content of the notification can be populated by using the renderer callback function.\n *\n * The renderer function provides `root`, `notification` arguments.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `notification`. Before generating new content,\n * users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-notification id=\"notification\"></vaadin-notification>\n * ```\n * ```js\n * const notification = document.querySelector('#notification');\n * notification.renderer = function(root, notification) {\n *   root.textContent = \"Your work has been saved\";\n * };\n * ```\n *\n * Renderer is called on the opening of the notification.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * ### Styling\n *\n * `<vaadin-notification>` uses `<vaadin-notification-card>` internal\n * themable component as the actual visible notification cards.\n *\n * The following shadow DOM parts of the `<vaadin-notification-card>` are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `overlay` | The notification container\n * `content` | The content of the notification\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * Note: the `theme` attribute value set on `<vaadin-notification>` is\n * propagated to the internal `<vaadin-notification-card>`.\n *\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n *\n * @extends HTMLElement\n * @mixes ThemePropertyMixin\n * @mixes ElementMixin\n */\nclass Notification extends ThemePropertyMixin(ElementMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: none !important;\n        }\n      </style>\n      <vaadin-notification-card theme$=\"[[_theme]]\"> </vaadin-notification-card>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-notification';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The duration in milliseconds to show the notification.\n       * Set to `0` or a negative number to disable the notification auto-closing.\n       * @type {number}\n       */\n      duration: {\n        type: Number,\n        value: 5000,\n      },\n\n      /**\n       * True if the notification is currently displayed.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        observer: '_openedChanged',\n      },\n\n      /**\n       * Alignment of the notification in the viewport\n       * Valid values are `top-stretch|top-start|top-center|top-end|middle|bottom-start|bottom-center|bottom-end|bottom-stretch`\n       * @type {!NotificationPosition}\n       */\n      position: {\n        type: String,\n        value: 'bottom-start',\n        observer: '_positionChanged',\n      },\n\n      /**\n       * Custom function for rendering the content of the notification.\n       * Receives two arguments:\n       *\n       * - `root` The `<vaadin-notification-card>` DOM element. Append\n       *   your content to it.\n       * - `notification` The reference to the `<vaadin-notification>` element.\n       * @type {!NotificationRenderer | undefined}\n       */\n      renderer: Function,\n    };\n  }\n\n  static get observers() {\n    return ['_durationChanged(duration, opened)', '_rendererChanged(renderer, opened, _card)'];\n  }\n\n  /**\n   * Shows a notification with the given content.\n   * By default, positions the notification at `bottom-start` and uses a 5 second duration.\n   * An options object can be passed to configure the notification.\n   * The options object has the following structure:\n   *\n   * ```\n   * {\n   *   position?: string\n   *   duration?: number\n   *   theme?: string\n   * }\n   * ```\n   *\n   * See the individual documentation for:\n   * - [`position`](#/elements/vaadin-notification#property-position)\n   * - [`duration`](#/elements/vaadin-notification#property-duration)\n   *\n   * @param contents the contents to show, either as a string or a Lit template.\n   * @param options optional options for customizing the notification.\n   */\n  static show(contents, options) {\n    if (isTemplateResult(contents)) {\n      return Notification._createAndShowNotification((root) => {\n        render(contents, root);\n      }, options);\n    }\n    return Notification._createAndShowNotification((root) => {\n      root.innerText = contents;\n    }, options);\n  }\n\n  /** @private */\n  static _createAndShowNotification(renderer, options) {\n    const notification = document.createElement(Notification.is);\n    if (options && Number.isFinite(options.duration)) {\n      notification.duration = options.duration;\n    }\n    if (options && options.position) {\n      notification.position = options.position;\n    }\n    if (options && options.theme) {\n      notification.setAttribute('theme', options.theme);\n    }\n    notification.renderer = renderer;\n    document.body.appendChild(notification);\n    notification.opened = true;\n\n    notification.addEventListener('opened-changed', (e) => {\n      if (!e.detail.value) {\n        notification.remove();\n      }\n    });\n\n    return notification;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._card = this.shadowRoot.querySelector('vaadin-notification-card');\n\n    processTemplates(this);\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.opened = false;\n  }\n\n  /**\n   * Requests an update for the content of the notification.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (!this.renderer) {\n      return;\n    }\n\n    this.renderer(this._card, this);\n  }\n\n  /** @private */\n  _rendererChanged(renderer, opened, card) {\n    if (!card) {\n      return;\n    }\n\n    const rendererChanged = this._oldRenderer !== renderer;\n    this._oldRenderer = renderer;\n\n    if (rendererChanged) {\n      card.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete card._$litPart$;\n    }\n\n    if (opened) {\n      if (!this._didAnimateNotificationAppend) {\n        this._animatedAppendNotificationCard();\n      }\n      this.requestContentUpdate();\n    }\n  }\n\n  /**\n   * Opens the notification.\n   */\n  open() {\n    this.opened = true;\n  }\n\n  /**\n   * Closes the notification.\n   */\n  close() {\n    this.opened = false;\n  }\n\n  /** @private */\n  get _container() {\n    if (!Notification._container) {\n      Notification._container = document.createElement('vaadin-notification-container');\n      document.body.appendChild(Notification._container);\n    }\n    return Notification._container;\n  }\n\n  /** @private */\n  _openedChanged(opened) {\n    if (opened) {\n      this._container.opened = true;\n      this._animatedAppendNotificationCard();\n    } else if (this._card) {\n      this._closeNotificationCard();\n    }\n  }\n\n  /** @private */\n  _animatedAppendNotificationCard() {\n    if (this._card) {\n      this._card.setAttribute('opening', '');\n      this._appendNotificationCard();\n      const listener = () => {\n        this._card.removeEventListener('animationend', listener);\n        this._card.removeAttribute('opening');\n      };\n      this._card.addEventListener('animationend', listener);\n      this._didAnimateNotificationAppend = true;\n    } else {\n      this._didAnimateNotificationAppend = false;\n    }\n  }\n\n  /** @private */\n  _appendNotificationCard() {\n    if (!this._card) {\n      return;\n    }\n\n    if (!this._container.shadowRoot.querySelector(`slot[name=\"${this.position}\"]`)) {\n      console.warn(`Invalid alignment parameter provided: position=${this.position}`);\n      return;\n    }\n\n    this._card.slot = this.position;\n    if (this._container.firstElementChild && /top/.test(this.position)) {\n      this._container.insertBefore(this._card, this._container.firstElementChild);\n    } else {\n      this._container.appendChild(this._card);\n    }\n  }\n\n  /** @private */\n  _removeNotificationCard() {\n    if (this._card.parentNode) {\n      this._card.parentNode.removeChild(this._card);\n    }\n    this._card.removeAttribute('closing');\n    this._container.opened = Boolean(this._container.firstElementChild);\n  }\n\n  /** @private */\n  _closeNotificationCard() {\n    if (this._durationTimeoutId) {\n      clearTimeout(this._durationTimeoutId);\n    }\n    this._animatedRemoveNotificationCard();\n  }\n\n  /** @private */\n  _animatedRemoveNotificationCard() {\n    this._card.setAttribute('closing', '');\n    const name = getComputedStyle(this._card).getPropertyValue('animation-name');\n    if (name && name !== 'none') {\n      const listener = () => {\n        this._removeNotificationCard();\n        this._card.removeEventListener('animationend', listener);\n      };\n      this._card.addEventListener('animationend', listener);\n    } else {\n      this._removeNotificationCard();\n    }\n  }\n\n  /** @private */\n  _positionChanged() {\n    if (this.opened) {\n      this._animatedAppendNotificationCard();\n    }\n  }\n\n  /** @private */\n  _durationChanged(duration, opened) {\n    if (opened) {\n      clearTimeout(this._durationTimeoutId);\n      if (duration > 0) {\n        this._durationTimeoutId = setTimeout(() => this.close(), duration);\n      }\n    }\n  }\n}\n\ncustomElements.define(NotificationContainer.is, NotificationContainer);\ncustomElements.define(NotificationCard.is, NotificationCard);\ncustomElements.define(Notification.is, Notification);\n\nexport { Notification };\n"],
  "mappings": "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",
  "names": []
}
