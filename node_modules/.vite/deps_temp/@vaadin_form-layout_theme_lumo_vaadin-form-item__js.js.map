{
  "version": 3,
  "sources": ["../../@vaadin/form-layout/theme/lumo/vaadin-form-item-styles.js", "../../@vaadin/form-layout/src/vaadin-form-item.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-form-item',\n  css`\n    :host {\n      --vaadin-form-item-row-spacing: 0;\n    }\n\n    /* font-weight, margin-bottom, transition and line-height same as for part label in text-field */\n    [part='label'] {\n      color: var(--lumo-secondary-text-color);\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-s);\n      font-weight: 500;\n      margin-top: var(--lumo-space-m);\n      margin-left: calc(var(--lumo-border-radius-m) / 4);\n      margin-bottom: var(--lumo-space-xs);\n      transition: color 0.4s;\n      line-height: 1.333;\n    }\n\n    [part='required-indicator']::after {\n      content: var(--lumo-required-field-indicator, '\u2022');\n      transition: opacity 0.2s;\n      opacity: 0;\n      color: var(--lumo-required-field-indicator-color, var(--lumo-primary-text-color));\n      position: relative;\n      width: 1em;\n      text-align: center;\n    }\n\n    :host([required]) [part='required-indicator']::after {\n      opacity: 1;\n    }\n\n    :host([invalid]) [part='required-indicator']::after {\n      color: var(--lumo-required-field-indicator-color, var(--lumo-error-text-color));\n    }\n  `,\n  { moduleId: 'lumo-form-item' },\n);\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { addValueToAttribute, removeValueFromAttribute } from '@vaadin/component-base/src/dom-utils.js';\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-form-item>` is a Web Component providing labelled form item wrapper\n * for using inside `<vaadin-form-layout>`.\n *\n * `<vaadin-form-item>` accepts a single child as the input content,\n * and also has a separate named `label` slot:\n *\n * ```html\n * <vaadin-form-item>\n *   <label slot=\"label\">Label aside</label>\n *   <input>\n * </vaadin-form-item>\n * ```\n *\n * The label is optional and can be omitted:\n *\n * ```html\n * <vaadin-form-item>\n *   <input type=\"checkbox\"> Subscribe to our Newsletter\n * </vaadin-form-item>\n * ```\n *\n * By default, the `label` slot content is displayed aside of the input content.\n * When `label-position=\"top\"` is set, the `label` slot content is displayed on top:\n *\n * ```html\n * <vaadin-form-item label-position=\"top\">\n *   <label slot=\"label\">Label on top</label>\n *   <input>\n * </vaadin-form-item>\n * ```\n *\n * **Note:** Normally, `<vaadin-form-item>` is used as a child of\n * a `<vaadin-form-layout>` element. Setting `label-position` is unnecessary,\n * because the `label-position` attribute is triggered automatically by the parent\n * `<vaadin-form-layout>`, depending on its width and responsive behavior.\n *\n * ### Input Width\n *\n * By default, `<vaadin-form-item>` does not manipulate the width of the slotted\n * input element. Optionally you can stretch the child input element to fill\n * the available width for the input content by adding the `full-width` class:\n *\n * ```html\n * <vaadin-form-item>\n *   <label slot=\"label\">Label</label>\n *   <input class=\"full-width\">\n * </vaadin-form-item>\n * ```\n *\n * ### Styling\n *\n * The `label-position` host attribute can be used to target the label on top state:\n *\n * ```\n * :host([label-position=\"top\"]) {\n *   padding-top: 0.5rem;\n * }\n * ```\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * label | The label slot container\n *\n * ### Custom CSS Properties Reference\n *\n * The following custom CSS properties are available on the `<vaadin-form-item>`\n * element:\n *\n * Custom CSS property | Description | Default\n * ---|---|---\n * `--vaadin-form-item-label-width` | Width of the label column when the labels are aside | `8em`\n * `--vaadin-form-item-label-spacing` | Spacing between the label column and the input column when the labels are aside | `1em`\n * `--vaadin-form-item-row-spacing` | Height of the spacing between the form item elements | `1em`\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n */\nclass FormItem extends ThemableMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-flex;\n          flex-direction: row;\n          align-items: baseline;\n          margin: calc(0.5 * var(--vaadin-form-item-row-spacing, 1em)) 0;\n        }\n\n        :host([label-position='top']) {\n          flex-direction: column;\n          align-items: stretch;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        #label {\n          width: var(--vaadin-form-item-label-width, 8em);\n          flex: 0 0 auto;\n        }\n\n        :host([label-position='top']) #label {\n          width: auto;\n        }\n\n        #spacing {\n          width: var(--vaadin-form-item-label-spacing, 1em);\n          flex: 0 0 auto;\n        }\n\n        #content {\n          flex: 1 1 auto;\n        }\n\n        #content ::slotted(.full-width) {\n          box-sizing: border-box;\n          width: 100%;\n          min-width: 0;\n        }\n      </style>\n      <div id=\"label\" part=\"label\" on-click=\"__onLabelClick\">\n        <slot name=\"label\" id=\"labelSlot\" on-slotchange=\"__onLabelSlotChange\"></slot>\n        <span part=\"required-indicator\" aria-hidden=\"true\"></span>\n      </div>\n      <div id=\"spacing\"></div>\n      <div id=\"content\">\n        <slot id=\"contentSlot\" on-slotchange=\"__onContentSlotChange\"></slot>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-form-item';\n  }\n\n  constructor() {\n    super();\n    this.__updateInvalidState = this.__updateInvalidState.bind(this);\n\n    /**\n     * An observer for a field node to reflect its `required` and `invalid` attributes to the component.\n     *\n     * @type {MutationObserver}\n     * @private\n     */\n    this.__fieldNodeObserver = new MutationObserver(() => this.__updateRequiredState(this.__fieldNode.required));\n\n    /**\n     * The first label node in the label slot.\n     *\n     * @type {HTMLElement | null}\n     * @private\n     */\n    this.__labelNode = null;\n\n    /**\n     * The first field node in the content slot.\n     *\n     * An element is considered a field when it has the `checkValidity` or `validate` method.\n     *\n     * @type {HTMLElement | null}\n     * @private\n     */\n    this.__fieldNode = null;\n  }\n\n  /**\n   * Returns a target element to add ARIA attributes to for a field.\n   *\n   * - For Vaadin field components, the method returns an element\n   * obtained through the `ariaTarget` property defined in `FieldMixin`.\n   * - In other cases, the method returns the field element itself.\n   *\n   * @param {HTMLElement} field\n   * @protected\n   */\n  _getFieldAriaTarget(field) {\n    return field.ariaTarget || field;\n  }\n\n  /**\n   * Links the label to a field by adding the label id to\n   * the `aria-labelledby` attribute of the field's ARIA target element.\n   *\n   * @param {HTMLElement} field\n   * @private\n   */\n  __linkLabelToField(field) {\n    addValueToAttribute(this._getFieldAriaTarget(field), 'aria-labelledby', this.__labelId);\n  }\n\n  /**\n   * Unlinks the label from a field by removing the label id from\n   * the `aria-labelledby` attribute of the field's ARIA target element.\n   *\n   * @param {HTMLElement} field\n   * @private\n   */\n  __unlinkLabelFromField(field) {\n    removeValueFromAttribute(this._getFieldAriaTarget(field), 'aria-labelledby', this.__labelId);\n  }\n\n  /** @private */\n  __onLabelClick() {\n    const fieldNode = this.__fieldNode;\n    if (fieldNode) {\n      fieldNode.focus();\n      fieldNode.click();\n    }\n  }\n\n  /** @private */\n  __getValidateFunction(field) {\n    return field.validate || field.checkValidity;\n  }\n\n  /**\n   * A `slotchange` event handler for the label slot.\n   *\n   * - Ensures the label id is only assigned to the first label node.\n   * - Ensures the label node is linked to the first field node via the `aria-labelledby` attribute\n   * if both nodes are provided, and unlinked otherwise.\n   *\n   * @private\n   */\n  __onLabelSlotChange() {\n    if (this.__labelNode) {\n      this.__labelNode = null;\n\n      if (this.__fieldNode) {\n        this.__unlinkLabelFromField(this.__fieldNode);\n      }\n    }\n\n    const newLabelNode = this.$.labelSlot.assignedElements()[0];\n    if (newLabelNode) {\n      this.__labelNode = newLabelNode;\n\n      if (this.__labelNode.id) {\n        // The new label node already has an id. Let's use it.\n        this.__labelId = this.__labelNode.id;\n      } else {\n        // The new label node doesn't have an id yet. Generate a unique one.\n        this.__labelId = `label-${this.localName}-${generateUniqueId()}`;\n        this.__labelNode.id = this.__labelId;\n      }\n\n      if (this.__fieldNode) {\n        this.__linkLabelToField(this.__fieldNode);\n      }\n    }\n  }\n\n  /**\n   * A `slotchange` event handler for the content slot.\n   *\n   * - Ensures the label node is only linked to the first field node via the `aria-labelledby` attribute.\n   * - Sets up an observer for the `required` attribute changes on the first field\n   * to reflect the attribute on the component. Ensures the observer is disconnected from the field\n   * as soon as it is removed or replaced by another one.\n   *\n   * @private\n   */\n  __onContentSlotChange() {\n    if (this.__fieldNode) {\n      // Discard the old field\n      this.__unlinkLabelFromField(this.__fieldNode);\n      this.__updateRequiredState(false);\n      this.__fieldNodeObserver.disconnect();\n      this.__fieldNode = null;\n    }\n\n    const fieldNodes = this.$.contentSlot.assignedElements();\n    if (fieldNodes.length > 1) {\n      console.warn(\n        `WARNING: Since Vaadin 23, placing multiple fields directly to a <vaadin-form-item> is deprecated.\nPlease wrap fields with a <vaadin-custom-field> instead.`,\n      );\n    }\n\n    const newFieldNode = fieldNodes.find((field) => {\n      return !!this.__getValidateFunction(field);\n    });\n    if (newFieldNode) {\n      this.__fieldNode = newFieldNode;\n      this.__updateRequiredState(this.__fieldNode.required);\n      this.__fieldNodeObserver.observe(this.__fieldNode, { attributes: true, attributeFilter: ['required'] });\n\n      if (this.__labelNode) {\n        this.__linkLabelToField(this.__fieldNode);\n      }\n    }\n  }\n\n  /** @private */\n  __updateRequiredState(required) {\n    if (required) {\n      this.setAttribute('required', '');\n      this.__fieldNode.addEventListener('blur', this.__updateInvalidState);\n      this.__fieldNode.addEventListener('change', this.__updateInvalidState);\n    } else {\n      this.removeAttribute('invalid');\n      this.removeAttribute('required');\n      this.__fieldNode.removeEventListener('blur', this.__updateInvalidState);\n      this.__fieldNode.removeEventListener('change', this.__updateInvalidState);\n    }\n  }\n\n  /** @private */\n  __updateInvalidState() {\n    const isValid = this.__getValidateFunction(this.__fieldNode).call(this.__fieldNode);\n    this.toggleAttribute('invalid', isValid === false);\n  }\n}\n\ncustomElements.define(FormItem.is, FormItem);\n\nexport { FormItem };\n"],
  "mappings": "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",
  "names": []
}
