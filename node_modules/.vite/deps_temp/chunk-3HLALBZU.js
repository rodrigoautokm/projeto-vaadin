import {
  ElementMixin
} from "./chunk-PT6BHIKU.js";
import {
  ThemableMixin
} from "./chunk-SPVNJBW3.js";
import {
  PolymerElement,
  html
} from "./chunk-ZKSNVHJS.js";

// node_modules/@vaadin/progress-bar/src/vaadin-progress-mixin.js
var ProgressMixin = (superClass) => class VaadinProgressMixin extends superClass {
  static get properties() {
    return {
      value: {
        type: Number,
        observer: "_valueChanged"
      },
      min: {
        type: Number,
        value: 0,
        observer: "_minChanged"
      },
      max: {
        type: Number,
        value: 1,
        observer: "_maxChanged"
      },
      indeterminate: {
        type: Boolean,
        value: false,
        reflectToAttribute: true
      }
    };
  }
  static get observers() {
    return ["_normalizedValueChanged(value, min, max)"];
  }
  ready() {
    super.ready();
    this.setAttribute("role", "progressbar");
  }
  _normalizedValueChanged(value, min, max) {
    const newNormalizedValue = this._normalizeValue(value, min, max);
    this.style.setProperty("--vaadin-progress-value", newNormalizedValue);
  }
  _valueChanged(newV) {
    this.setAttribute("aria-valuenow", newV);
  }
  _minChanged(newV) {
    this.setAttribute("aria-valuemin", newV);
  }
  _maxChanged(newV) {
    this.setAttribute("aria-valuemax", newV);
  }
  _normalizeValue(value, min, max) {
    let nV;
    if (!value && value !== 0) {
      nV = 0;
    } else if (min >= max) {
      nV = 1;
    } else {
      nV = (value - min) / (max - min);
      nV = Math.min(Math.max(nV, 0), 1);
    }
    return nV;
  }
};

// node_modules/@vaadin/progress-bar/src/vaadin-progress-bar.js
var ProgressBar = class extends ElementMixin(ThemableMixin(ProgressMixin(PolymerElement))) {
  static get template() {
    return html`
      <style>
        :host {
          display: block;
          width: 100%; /* prevent collapsing inside non-stretching column flex */
          height: 8px;
        }

        :host([hidden]) {
          display: none !important;
        }

        [part='bar'] {
          height: 100%;
        }

        [part='value'] {
          height: 100%;
          transform-origin: 0 50%;
          transform: scaleX(var(--vaadin-progress-value));
        }

        /* RTL specific styles */

        :host([dir='rtl']) [part='value'] {
          transform-origin: 100% 50%;
        }
      </style>

      <div part="bar">
        <div part="value"></div>
      </div>
    `;
  }
  static get is() {
    return "vaadin-progress-bar";
  }
};
customElements.define(ProgressBar.is, ProgressBar);
/**
 * @license
 * Copyright (c) 2017 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=chunk-3HLALBZU.js.map
