import {
  DelegateFocusMixin
} from "./chunk-NEGQSXRC.js";
import {
  generateUniqueId
} from "./chunk-26L5GZ27.js";
import {
  KeyboardMixin
} from "./chunk-TXOUNVRU.js";
import {
  ElementMixin
} from "./chunk-PT6BHIKU.js";
import {
  ThemableMixin,
  registerStyles
} from "./chunk-SPVNJBW3.js";
import {
  css
} from "./chunk-BVJZYYEF.js";
import {
  PolymerElement,
  html
} from "./chunk-ZKSNVHJS.js";

// node_modules/@vaadin/details/theme/lumo/vaadin-details-styles.js
var details = css`
  :host {
    margin: var(--lumo-space-xs) 0;
    outline: none;
  }

  [part='summary'] {
    display: flex;
    align-items: center;
    width: 100%;
    outline: none;
    padding: var(--lumo-space-s) 0;
    box-sizing: border-box;
    font-family: var(--lumo-font-family);
    font-size: var(--lumo-font-size-m);
    font-weight: 500;
    line-height: var(--lumo-line-height-xs);
    color: var(--lumo-secondary-text-color);
    background-color: inherit;
    border-radius: var(--lumo-border-radius-m);
    cursor: var(--lumo-clickable-cursor);
    -webkit-tap-highlight-color: transparent;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  :host([focus-ring]) [part='summary'] {
    box-shadow: 0 0 0 2px var(--lumo-primary-color-50pct);
  }

  [part='toggle'] {
    display: block;
    width: 1em;
    height: 1em;
    margin-left: calc(var(--lumo-space-xs) * -1);
    margin-right: var(--lumo-space-xs);
    font-size: var(--lumo-icon-size-s);
    line-height: 1;
    color: var(--lumo-contrast-60pct);
    font-family: 'lumo-icons';
    cursor: var(--lumo-clickable-cursor);
  }

  :host([disabled]) [part='summary'],
  :host([disabled]) [part='toggle'] {
    color: var(--lumo-disabled-text-color);
    cursor: default;
  }

  @media (hover: hover) {
    :host(:not([disabled])) [part='summary']:hover,
    :host(:not([disabled])) [part='summary']:hover [part='toggle'] {
      color: var(--lumo-contrast-80pct);
    }
  }

  [part='toggle']::before {
    content: var(--lumo-icons-angle-right);
  }

  :host([opened]) [part='toggle'] {
    transform: rotate(90deg);
  }

  [part='content'] {
    padding: var(--lumo-space-xs) 0 var(--lumo-space-s);
    font-size: var(--lumo-font-size-m);
    line-height: var(--lumo-line-height-m);
  }

  :host([theme~='filled']) {
    background-color: var(--lumo-contrast-5pct);
    border-radius: var(--lumo-border-radius-m);
  }

  :host([theme~='filled']) [part='summary'] {
    padding: var(--lumo-space-s) calc(var(--lumo-space-s) + var(--lumo-space-xs) / 2);
  }

  :host([theme~='filled']) [part='content'] {
    padding-left: var(--lumo-space-m);
    padding-right: var(--lumo-space-m);
  }

  :host([theme~='small']) [part='summary'] {
    padding-top: var(--lumo-space-xs);
    padding-bottom: var(--lumo-space-xs);
  }

  :host([theme~='small']) [part='toggle'] {
    margin-right: calc(var(--lumo-space-xs) / 2);
  }

  :host([theme~='small']) [part\$='content'] {
    font-size: var(--lumo-font-size-s);
  }

  :host([theme~='reverse']) [part='summary'] {
    justify-content: space-between;
  }

  :host([theme~='reverse']) [part='toggle'] {
    order: 1;
    margin-right: 0;
  }

  :host([theme~='reverse'][theme~='filled']) [part='summary'] {
    padding-left: var(--lumo-space-m);
  }

  /* RTL specific styles */
  :host([dir='rtl']) [part='toggle'] {
    margin-left: var(--lumo-space-xs);
    margin-right: calc(var(--lumo-space-xs) * -1);
  }

  :host([dir='rtl']) [part='toggle']::before {
    content: var(--lumo-icons-angle-left);
  }

  :host([opened][dir='rtl']) [part='toggle'] {
    transform: rotate(-90deg);
  }

  :host([theme~='small'][dir='rtl']) [part='toggle'] {
    margin-left: calc(var(--lumo-space-xs) / 2);
  }

  :host([theme~='reverse'][dir='rtl']) [part='toggle'] {
    margin-left: 0;
  }

  :host([theme~='reverse'][theme~='filled'][dir='rtl']) [part='summary'] {
    padding-right: var(--lumo-space-m);
  }
`;
registerStyles("vaadin-details", details, { moduleId: "lumo-details" });

// node_modules/@vaadin/field-base/src/shadow-focus-mixin.js
var ShadowFocusMixin = (superClass) => class ShadowFocusMixinClass extends DelegateFocusMixin(KeyboardMixin(superClass)) {
  static get properties() {
    return {
      tabindex: {
        type: Number,
        value: 0
      }
    };
  }
  _onKeyDown(event) {
    super._onKeyDown(event);
    if (!event.defaultPrevented && event.keyCode === 9 && event.shiftKey) {
      HTMLElement.prototype.focus.apply(this);
    }
  }
  _shouldSetFocus(event) {
    if (!this.disabled && this.focusElement) {
      const path = event.composedPath();
      if (path[0] === this && this._keyboardActive) {
        this.focusElement.focus();
      }
      if (path[0] === this || path.includes(this.focusElement)) {
        return true;
      }
    }
    return false;
  }
  _tabindexChanged(tabindex) {
    if (tabindex !== void 0) {
      this.focusElement.tabIndex = tabindex;
    }
    if (this.disabled && tabindex) {
      if (tabindex !== -1) {
        this._lastTabIndex = tabindex;
      }
      this.tabindex = void 0;
    }
  }
};

// node_modules/@vaadin/details/src/vaadin-details.js
var Details = class extends ShadowFocusMixin(ElementMixin(ThemableMixin(PolymerElement))) {
  static get template() {
    return html`
      <style>
        :host {
          display: block;
        }

        :host([hidden]) {
          display: none !important;
        }

        [part='content'] {
          display: none;
          overflow: hidden;
        }

        [part='summary'][disabled] {
          pointer-events: none;
        }

        :host([opened]) [part='content'] {
          display: block;
          overflow: visible;
        }
      </style>
      <div role="heading">
        <div
          role="button"
          part="summary"
          on-click="_onToggleClick"
          on-keydown="_onToggleKeyDown"
          disabled$="[[disabled]]"
          aria-expanded$="[[_getAriaExpanded(opened)]]"
          aria-controls$="[[_contentId]]"
        >
          <span part="toggle" aria-hidden="true"></span>
          <span part="summary-content"><slot name="summary"></slot></span>
        </div>
      </div>
      <section id$="[[_contentId]]" part="content" aria-hidden$="[[_getAriaHidden(opened)]]">
        <slot></slot>
      </section>
    `;
  }
  static get is() {
    return "vaadin-details";
  }
  static get properties() {
    return {
      opened: {
        type: Boolean,
        value: false,
        reflectToAttribute: true,
        notify: true,
        observer: "_openedChanged"
      }
    };
  }
  get _collapsible() {
    return this.shadowRoot.querySelector('[part="content"]');
  }
  get focusElement() {
    return this.shadowRoot.querySelector('[part="summary"]');
  }
  ready() {
    super.ready();
    this._contentId = `${this.constructor.is}-content-${generateUniqueId()}`;
    this._collapsible.addEventListener("keydown", (e) => {
      if (e.shiftKey && e.keyCode === 9) {
        e.stopPropagation();
      }
    });
  }
  _getAriaExpanded(opened) {
    return opened ? "true" : "false";
  }
  _getAriaHidden(opened) {
    return opened ? "false" : "true";
  }
  _openedChanged(opened) {
    this._collapsible.style.maxHeight = opened ? "" : "0px";
  }
  _onToggleClick() {
    this.opened = !this.opened;
  }
  _onToggleKeyDown(e) {
    if ([13, 32].indexOf(e.keyCode) > -1) {
      e.preventDefault();
      this.opened = !this.opened;
    }
  }
};
customElements.define(Details.is, Details);

export {
  details,
  Details
};
/**
 * @license
 * Copyright (c) 2019 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
/**
 * @license
 * Copyright (c) 2021 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=chunk-EQZYXTST.js.map
