import {
  ElementMixin,
  wrap
} from "./chunk-ZKSNVHJS.js";
import {
  dedupingMixin
} from "./chunk-NCN7ELFS.js";

// node_modules/@polymer/polymer/lib/mixins/disable-upgrade-mixin.js
var DISABLED_ATTR = "disable-upgrade";
var findObservedAttributesGetter = (ctor) => {
  while (ctor) {
    const desc = Object.getOwnPropertyDescriptor(ctor, "observedAttributes");
    if (desc) {
      return desc.get;
    }
    ctor = Object.getPrototypeOf(ctor.prototype).constructor;
  }
  return () => [];
};
var DisableUpgradeMixin = dedupingMixin((base) => {
  const superClass = ElementMixin(base);
  let observedAttributesGetter = findObservedAttributesGetter(superClass);
  class DisableUpgradeClass extends superClass {
    constructor() {
      super();
      this.__isUpgradeDisabled;
    }
    static get observedAttributes() {
      return observedAttributesGetter.call(this).concat(DISABLED_ATTR);
    }
    _initializeProperties() {
      if (this.hasAttribute(DISABLED_ATTR)) {
        this.__isUpgradeDisabled = true;
      } else {
        super._initializeProperties();
      }
    }
    _enableProperties() {
      if (!this.__isUpgradeDisabled) {
        super._enableProperties();
      }
    }
    _canApplyPropertyDefault(property) {
      return super._canApplyPropertyDefault(property) && !(this.__isUpgradeDisabled && this._isPropertyPending(property));
    }
    attributeChangedCallback(name, old, value, namespace) {
      if (name == DISABLED_ATTR) {
        if (this.__isUpgradeDisabled && value == null) {
          super._initializeProperties();
          this.__isUpgradeDisabled = false;
          if (wrap(this).isConnected) {
            super.connectedCallback();
          }
        }
      } else {
        super.attributeChangedCallback(
          name,
          old,
          value,
          namespace
        );
      }
    }
    connectedCallback() {
      if (!this.__isUpgradeDisabled) {
        super.connectedCallback();
      }
    }
    disconnectedCallback() {
      if (!this.__isUpgradeDisabled) {
        super.disconnectedCallback();
      }
    }
  }
  return DisableUpgradeClass;
});

export {
  findObservedAttributesGetter,
  DisableUpgradeMixin
};
/**
 * @fileoverview
 * @suppress {checkPrototypalTypes}
 * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt The complete set of authors may be found
 * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may
 * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by
 * Google as part of the polymer project is also subject to an additional IP
 * rights grant found at http://polymer.github.io/PATENTS.txt
 */
//# sourceMappingURL=chunk-7ZAE2LQL.js.map
