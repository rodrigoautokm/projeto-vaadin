import {
  InputConstraintsMixin
} from "./chunk-KP6A4WLM.js";
import {
  Debouncer
} from "./chunk-VUWTYCVF.js";
import {
  timeOut
} from "./chunk-CQH3N2QY.js";

// node_modules/@vaadin/field-base/src/pattern-mixin.js
var PatternMixin = (superclass) => class PatternMixinClass extends InputConstraintsMixin(superclass) {
  static get properties() {
    return {
      pattern: {
        type: String
      },
      preventInvalidInput: {
        type: Boolean,
        observer: "_preventInvalidInputChanged"
      }
    };
  }
  static get delegateAttrs() {
    return [...super.delegateAttrs, "pattern"];
  }
  static get constraints() {
    return [...super.constraints, "pattern"];
  }
  _checkInputValue() {
    if (this.preventInvalidInput) {
      const input = this.inputElement;
      if (input && input.value.length > 0 && !this.checkValidity()) {
        input.value = this.value || "";
        this.setAttribute("input-prevented", "");
        this._inputDebouncer = Debouncer.debounce(this._inputDebouncer, timeOut.after(200), () => {
          this.removeAttribute("input-prevented");
        });
      }
    }
  }
  _onInput(event) {
    this._checkInputValue();
    super._onInput(event);
  }
  _preventInvalidInputChanged(preventInvalidInput) {
    if (preventInvalidInput) {
      console.warn(
        `WARNING: Since Vaadin 23.2, "preventInvalidInput" is deprecated. Please use "allowedCharPattern" instead.`
      );
    }
  }
};

export {
  PatternMixin
};
/**
 * @license
 * Copyright (c) 2021 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=chunk-3X24PFLT.js.map
