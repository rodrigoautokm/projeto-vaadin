{
  "version": 3,
  "sources": ["../../@vaadin/progress-bar/src/vaadin-progress-mixin.js", "../../@vaadin/progress-bar/src/vaadin-progress-bar.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const ProgressMixin = (superClass) =>\n  class VaadinProgressMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Current progress value.\n         */\n        value: {\n          type: Number,\n          observer: '_valueChanged',\n        },\n\n        /**\n         * Minimum bound of the progress bar.\n         * @type {number}\n         */\n        min: {\n          type: Number,\n          value: 0,\n          observer: '_minChanged',\n        },\n\n        /**\n         * Maximum bound of the progress bar.\n         * @type {number}\n         */\n        max: {\n          type: Number,\n          value: 1,\n          observer: '_maxChanged',\n        },\n\n        /**\n         * Indeterminate state of the progress bar.\n         * This property takes precedence over other state properties (min, max, value).\n         * @type {boolean}\n         */\n        indeterminate: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n      };\n    }\n\n    static get observers() {\n      return ['_normalizedValueChanged(value, min, max)'];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.setAttribute('role', 'progressbar');\n    }\n\n    /** @private */\n    _normalizedValueChanged(value, min, max) {\n      const newNormalizedValue = this._normalizeValue(value, min, max);\n\n      this.style.setProperty('--vaadin-progress-value', newNormalizedValue);\n    }\n\n    /** @private */\n    _valueChanged(newV) {\n      this.setAttribute('aria-valuenow', newV);\n    }\n\n    /** @private */\n    _minChanged(newV) {\n      this.setAttribute('aria-valuemin', newV);\n    }\n\n    /** @private */\n    _maxChanged(newV) {\n      this.setAttribute('aria-valuemax', newV);\n    }\n\n    /**\n     * Percent of current progress relative to whole progress bar (max - min)\n     * @private\n     */\n    _normalizeValue(value, min, max) {\n      let nV;\n\n      if (!value && value !== 0) {\n        nV = 0;\n      } else if (min >= max) {\n        nV = 1;\n      } else {\n        nV = (value - min) / (max - min);\n\n        nV = Math.min(Math.max(nV, 0), 1);\n      }\n\n      return nV;\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ProgressMixin } from './vaadin-progress-mixin.js';\n\n/**\n * `<vaadin-progress-bar>` is a Web Component for progress bars.\n *\n * ```html\n * <vaadin-progress-bar min=\"0\" max=\"1\" value=\"0.5\">\n * </vaadin-progress-bar>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `bar` | Progress-bar's background\n * `value` | Progress-bar's foreground\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * The following custom properties are available:\n *\n * Custom property | Description | Default\n * ----------------|-------------|-------------\n * `--vaadin-progress-value` | current progress value (between 0 and 1) | 0\n *\n * The following state attributes are available for styling:\n *\n * Attribute       | Description | Part name\n * ----------------|-------------|------------\n * `indeterminate` | Set to an indeterminate progress bar | :host\n *\n * @extends HTMLElement\n * @mixes ProgressMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n */\nclass ProgressBar extends ElementMixin(ThemableMixin(ProgressMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          width: 100%; /* prevent collapsing inside non-stretching column flex */\n          height: 8px;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='bar'] {\n          height: 100%;\n        }\n\n        [part='value'] {\n          height: 100%;\n          transform-origin: 0 50%;\n          transform: scaleX(var(--vaadin-progress-value));\n        }\n\n        /* RTL specific styles */\n\n        :host([dir='rtl']) [part='value'] {\n          transform-origin: 100% 50%;\n        }\n      </style>\n\n      <div part=\"bar\">\n        <div part=\"value\"></div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-progress-bar';\n  }\n}\n\ncustomElements.define(ProgressBar.is, ProgressBar);\n\nexport { ProgressBar };\n"],
  "mappings": ";;;;;;;;;;;;AASO,IAAM,gBAAgB,CAAC,eAC5B,MAAM,4BAA4B,WAAW;AAAA,EAC3C,WAAW,aAAa;AACtB,WAAO;AAAA,MAIL,OAAO;AAAA,QACL,MAAM;AAAA,QACN,UAAU;AAAA,MACZ;AAAA,MAMA,KAAK;AAAA,QACH,MAAM;AAAA,QACN,OAAO;AAAA,QACP,UAAU;AAAA,MACZ;AAAA,MAMA,KAAK;AAAA,QACH,MAAM;AAAA,QACN,OAAO;AAAA,QACP,UAAU;AAAA,MACZ;AAAA,MAOA,eAAe;AAAA,QACb,MAAM;AAAA,QACN,OAAO;AAAA,QACP,oBAAoB;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AAAA,EAEA,WAAW,YAAY;AACrB,WAAO,CAAC,0CAA0C;AAAA,EACpD;AAAA,EAGA,QAAQ;AACN,UAAM,MAAM;AAEZ,SAAK,aAAa,QAAQ,aAAa;AAAA,EACzC;AAAA,EAGA,wBAAwB,OAAO,KAAK,KAAK;AACvC,UAAM,qBAAqB,KAAK,gBAAgB,OAAO,KAAK,GAAG;AAE/D,SAAK,MAAM,YAAY,2BAA2B,kBAAkB;AAAA,EACtE;AAAA,EAGA,cAAc,MAAM;AAClB,SAAK,aAAa,iBAAiB,IAAI;AAAA,EACzC;AAAA,EAGA,YAAY,MAAM;AAChB,SAAK,aAAa,iBAAiB,IAAI;AAAA,EACzC;AAAA,EAGA,YAAY,MAAM;AAChB,SAAK,aAAa,iBAAiB,IAAI;AAAA,EACzC;AAAA,EAMA,gBAAgB,OAAO,KAAK,KAAK;AAC/B,QAAI;AAEJ,QAAI,CAAC,SAAS,UAAU,GAAG;AACzB,WAAK;AAAA,IACP,WAAW,OAAO,KAAK;AACrB,WAAK;AAAA,IACP,OAAO;AACL,YAAM,QAAQ,QAAQ,MAAM;AAE5B,WAAK,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC;AAAA,IAClC;AAEA,WAAO;AAAA,EACT;AACF;;;AC5DF,IAAM,cAAN,cAA0B,aAAa,cAAc,cAAc,cAAc,CAAC,CAAC,EAAE;AAAA,EACnF,WAAW,WAAW;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiCT;AAAA,EAEA,WAAW,KAAK;AACd,WAAO;AAAA,EACT;AACF;AAEA,eAAe,OAAO,YAAY,IAAI,WAAW;",
  "names": []
}
