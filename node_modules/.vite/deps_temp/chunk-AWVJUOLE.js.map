{
  "version": 3,
  "sources": ["../../@vaadin/component-base/src/overflow-controller.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { animationFrame } from './async.js';\nimport { Debouncer } from './debounce.js';\n\n/**\n * A controller that detects if content inside the element overflows its scrolling viewport,\n * and sets the `overflow` attribute on the host with a value that indicates the directions\n * where content is overflowing. Supported values are: `top`, `bottom`, `start`, `end`.\n */\nexport class OverflowController {\n  constructor(host, scrollTarget) {\n    /**\n     * The controller host element.\n     *\n     * @type {HTMLElement}\n     */\n    this.host = host;\n\n    /**\n     * The element that wraps scrollable content.\n     * If not set, the host element is used.\n     *\n     * @type {HTMLElement}\n     */\n    this.scrollTarget = scrollTarget || host;\n\n    /** @private */\n    this.__boundOnScroll = this.__onScroll.bind(this);\n  }\n\n  hostConnected() {\n    if (!this.initialized) {\n      this.initialized = true;\n\n      this.observe();\n    }\n  }\n\n  /**\n   * Setup scroll listener and observers to update overflow.\n   * Also performs one-time update synchronously when called.\n   * @protected\n   */\n  observe() {\n    this.__resizeObserver = new ResizeObserver(() => {\n      this.__debounceOverflow = Debouncer.debounce(this.__debounceOverflow, animationFrame, () => {\n        this.__updateOverflow();\n      });\n    });\n\n    this.__resizeObserver.observe(this.host);\n\n    this.__childObserver = new FlattenedNodesObserver(this.host, (info) => {\n      info.addedNodes.forEach((node) => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n          this.__resizeObserver.observe(node);\n        }\n      });\n\n      info.removedNodes.forEach((node) => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n          this.__resizeObserver.unobserve(node);\n        }\n      });\n\n      this.__updateOverflow();\n    });\n\n    // Update overflow attribute on scroll\n    this.scrollTarget.addEventListener('scroll', this.__boundOnScroll);\n\n    this.__updateOverflow();\n  }\n\n  /** @private */\n  __onScroll() {\n    this.__updateOverflow();\n  }\n\n  /** @private */\n  __updateOverflow() {\n    const target = this.scrollTarget;\n\n    let overflow = '';\n\n    if (target.scrollTop > 0) {\n      overflow += ' top';\n    }\n\n    if (target.scrollTop < target.scrollHeight - target.clientHeight) {\n      overflow += ' bottom';\n    }\n\n    const scrollLeft = Math.abs(target.scrollLeft);\n    if (scrollLeft > 0) {\n      overflow += ' start';\n    }\n\n    if (scrollLeft < target.scrollWidth - target.clientWidth) {\n      overflow += ' end';\n    }\n\n    overflow = overflow.trim();\n    if (overflow.length > 0 && this.host.getAttribute('overflow') !== overflow) {\n      this.host.setAttribute('overflow', overflow);\n    } else if (overflow.length === 0 && this.host.hasAttribute('overflow')) {\n      this.host.removeAttribute('overflow');\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAcO,IAAM,qBAAN,MAAyB;AAAA,EAC9B,YAAY,MAAM,cAAc;AAM9B,SAAK,OAAO;AAQZ,SAAK,eAAe,gBAAgB;AAGpC,SAAK,kBAAkB,KAAK,WAAW,KAAK,IAAI;AAAA,EAClD;AAAA,EAEA,gBAAgB;AACd,QAAI,CAAC,KAAK,aAAa;AACrB,WAAK,cAAc;AAEnB,WAAK,QAAQ;AAAA,IACf;AAAA,EACF;AAAA,EAOA,UAAU;AACR,SAAK,mBAAmB,IAAI,eAAe,MAAM;AAC/C,WAAK,qBAAqB,UAAU,SAAS,KAAK,oBAAoB,gBAAgB,MAAM;AAC1F,aAAK,iBAAiB;AAAA,MACxB,CAAC;AAAA,IACH,CAAC;AAED,SAAK,iBAAiB,QAAQ,KAAK,IAAI;AAEvC,SAAK,kBAAkB,IAAI,uBAAuB,KAAK,MAAM,CAAC,SAAS;AACrE,WAAK,WAAW,QAAQ,CAAC,SAAS;AAChC,YAAI,KAAK,aAAa,KAAK,cAAc;AACvC,eAAK,iBAAiB,QAAQ,IAAI;AAAA,QACpC;AAAA,MACF,CAAC;AAED,WAAK,aAAa,QAAQ,CAAC,SAAS;AAClC,YAAI,KAAK,aAAa,KAAK,cAAc;AACvC,eAAK,iBAAiB,UAAU,IAAI;AAAA,QACtC;AAAA,MACF,CAAC;AAED,WAAK,iBAAiB;AAAA,IACxB,CAAC;AAGD,SAAK,aAAa,iBAAiB,UAAU,KAAK,eAAe;AAEjE,SAAK,iBAAiB;AAAA,EACxB;AAAA,EAGA,aAAa;AACX,SAAK,iBAAiB;AAAA,EACxB;AAAA,EAGA,mBAAmB;AACjB,UAAM,SAAS,KAAK;AAEpB,QAAI,WAAW;AAEf,QAAI,OAAO,YAAY,GAAG;AACxB,kBAAY;AAAA,IACd;AAEA,QAAI,OAAO,YAAY,OAAO,eAAe,OAAO,cAAc;AAChE,kBAAY;AAAA,IACd;AAEA,UAAM,aAAa,KAAK,IAAI,OAAO,UAAU;AAC7C,QAAI,aAAa,GAAG;AAClB,kBAAY;AAAA,IACd;AAEA,QAAI,aAAa,OAAO,cAAc,OAAO,aAAa;AACxD,kBAAY;AAAA,IACd;AAEA,eAAW,SAAS,KAAK;AACzB,QAAI,SAAS,SAAS,KAAK,KAAK,KAAK,aAAa,UAAU,MAAM,UAAU;AAC1E,WAAK,KAAK,aAAa,YAAY,QAAQ;AAAA,IAC7C,WAAW,SAAS,WAAW,KAAK,KAAK,KAAK,aAAa,UAAU,GAAG;AACtE,WAAK,KAAK,gBAAgB,UAAU;AAAA,IACtC;AAAA,EACF;AACF;",
  "names": []
}
