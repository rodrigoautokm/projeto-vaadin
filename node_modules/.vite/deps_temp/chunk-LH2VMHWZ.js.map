{
  "version": 3,
  "sources": ["../../@vaadin/vaadin-lumo-styles/mixins/overlay.js", "../../@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay-styles.js", "../../@vaadin/vaadin-overlay/src/vaadin-overlay.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../spacing.js';\nimport '../style.js';\nimport '../typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst overlay = css`\n  :host {\n    top: var(--lumo-space-m);\n    right: var(--lumo-space-m);\n    bottom: var(--lumo-space-m);\n    left: var(--lumo-space-m);\n    /* Workaround for Edge issue (only on Surface), where an overflowing vaadin-list-box inside vaadin-select-overlay makes the overlay transparent */\n    /* stylelint-disable-next-line */\n    outline: 0px solid transparent;\n  }\n\n  [part='overlay'] {\n    background-color: var(--lumo-base-color);\n    background-image: linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\n    border-radius: var(--lumo-border-radius-m);\n    box-shadow: 0 0 0 1px var(--lumo-shade-5pct), var(--lumo-box-shadow-m);\n    color: var(--lumo-body-text-color);\n    font-family: var(--lumo-font-family);\n    font-size: var(--lumo-font-size-m);\n    font-weight: 400;\n    line-height: var(--lumo-line-height-m);\n    letter-spacing: 0;\n    text-transform: none;\n    -webkit-text-size-adjust: 100%;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  [part='content'] {\n    padding: var(--lumo-space-xs);\n  }\n\n  [part='backdrop'] {\n    background-color: var(--lumo-shade-20pct);\n    animation: 0.2s lumo-overlay-backdrop-enter both;\n    will-change: opacity;\n  }\n\n  @keyframes lumo-overlay-backdrop-enter {\n    0% {\n      opacity: 0;\n    }\n  }\n\n  :host([closing]) [part='backdrop'] {\n    animation: 0.2s lumo-overlay-backdrop-exit both;\n  }\n\n  @keyframes lumo-overlay-backdrop-exit {\n    100% {\n      opacity: 0;\n    }\n  }\n\n  @keyframes lumo-overlay-dummy-animation {\n    0% {\n      opacity: 1;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nregisterStyles('', overlay, { moduleId: 'lumo-overlay' });\n\nexport { overlay };\n", "import { overlay } from '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\nimport { registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-overlay', overlay, { moduleId: 'lumo-vaadin-overlay' });\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { FocusTrapController } from '@vaadin/component-base/src/focus-trap-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n *\n * `<vaadin-overlay>` is a Web Component for creating overlays. The content of the overlay\n * can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Rendering\n *\n * By default, the overlay uses the content provided by using the renderer callback function.\n *\n * The renderer function provides `root`, `owner`, `model` arguments when applicable.\n * Generate DOM content by using `model` object properties if needed, append it to the `root`\n * element and control the state of the host element by accessing `owner`. Before generating new\n * content, users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-overlay id=\"overlay\"></vaadin-overlay>\n * ```\n * ```js\n * const overlay = document.querySelector('#overlay');\n * overlay.renderer = function(root) {\n *  root.textContent = \"Overlay content\";\n * };\n * ```\n *\n * Renderer is called on the opening of the overlay and each time the related model is updated.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * **NOTE:** when the renderer property is defined, the `<template>` content is not used.\n *\n * ### Templating\n *\n * Alternatively, the content can be provided with Polymer Template.\n * Overlay finds the first child template and uses that in case renderer callback function\n * is not provided. You can also set a custom template using the `template` property.\n *\n * After the content from the template is stamped, the `content` property\n * points to the content container.\n *\n * The overlay provides `forwardHostProp` when calling\n * `Polymer.Templatize.templatize` for the template, so that the bindings\n * from the parent scope propagate to the content.\n *\n * ### Styling\n *\n * To style the overlay content, use styles in the parent scope:\n *\n * - If the overlay is used in a component, then the component styles\n *   apply the overlay content.\n * - If the overlay is used in the global DOM scope, then global styles\n *   apply to the overlay content.\n *\n * See examples for styling the overlay content in the live demos.\n *\n * The following Shadow DOM parts are available for styling the overlay component itself:\n *\n * Part name  | Description\n * -----------|---------------------------------------------------------|\n * `backdrop` | Backdrop of the overlay\n * `overlay`  | Container for position/sizing/alignment of the content\n * `content`  | Content of the overlay\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part\n * ---|---|---\n * `opening` | Applied just after the overlay is attached to the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n * `closing` | Applied just before the overlay is detached from the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n *\n * The following custom CSS properties are available for styling:\n *\n * Custom CSS property | Description | Default value\n * ---|---|---\n * `--vaadin-overlay-viewport-bottom` | Bottom offset of the visible viewport area | `0` or detected offset\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} vaadin-overlay-open - Fired after the overlay is opened.\n * @fires {CustomEvent} vaadin-overlay-close - Fired before the overlay will be closed. If canceled the closing of the overlay is canceled as well.\n * @fires {CustomEvent} vaadin-overlay-closing - Fired when the overlay will be closed.\n * @fires {CustomEvent} vaadin-overlay-outside-click - Fired before the overlay will be closed on outside click. If canceled the closing of the overlay is canceled as well.\n * @fires {CustomEvent} vaadin-overlay-escape-press - Fired before the overlay will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @mixes ControllerMixin\n */\nclass OverlayElement extends ThemableMixin(DirMixin(ControllerMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          z-index: 200;\n          position: fixed;\n\n          /* Despite of what the names say, <vaadin-overlay> is just a container\n          for position/sizing/alignment. The actual overlay is the overlay part. */\n\n          /* Default position constraints: the entire viewport. Note: themes can\n          override this to introduce gaps between the overlay and the viewport. */\n          top: 0;\n          right: 0;\n          bottom: var(--vaadin-overlay-viewport-bottom);\n          left: 0;\n\n          /* Use flexbox alignment for the overlay part. */\n          display: flex;\n          flex-direction: column; /* makes dropdowns sizing easier */\n          /* Align to center by default. */\n          align-items: center;\n          justify-content: center;\n\n          /* Allow centering when max-width/max-height applies. */\n          margin: auto;\n\n          /* The host is not clickable, only the overlay part is. */\n          pointer-events: none;\n\n          /* Remove tap highlight on touch devices. */\n          -webkit-tap-highlight-color: transparent;\n\n          /* CSS API for host */\n          --vaadin-overlay-viewport-bottom: 0;\n        }\n\n        :host([hidden]),\n        :host(:not([opened]):not([closing])) {\n          display: none !important;\n        }\n\n        [part='overlay'] {\n          -webkit-overflow-scrolling: touch;\n          overflow: auto;\n          pointer-events: auto;\n\n          /* Prevent overflowing the host in MSIE 11 */\n          max-width: 100%;\n          box-sizing: border-box;\n\n          -webkit-tap-highlight-color: initial; /* reenable tap highlight inside */\n        }\n\n        [part='backdrop'] {\n          z-index: -1;\n          content: '';\n          background: rgba(0, 0, 0, 0.5);\n          position: fixed;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          pointer-events: auto;\n        }\n      </style>\n\n      <div id=\"backdrop\" part=\"backdrop\" hidden$=\"[[!withBackdrop]]\"></div>\n      <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\n        <div part=\"content\" id=\"content\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-overlay';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * When true, the overlay is visible and attached to body.\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        observer: '_openedChanged',\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Owner element passed with renderer function\n       * @type {HTMLElement}\n       */\n      owner: Element,\n\n      /**\n       * Custom function for rendering the content of the overlay.\n       * Receives three arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `owner` The host element of the renderer function.\n       * - `model` The object with the properties related with rendering.\n       * @type {OverlayRenderer | null | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * The template of the overlay content.\n       * @type {HTMLTemplateElement | null | undefined}\n       */\n      template: {\n        type: Object,\n        notify: true,\n      },\n\n      /**\n       * References the content container after the template is stamped.\n       * @type {!HTMLElement | undefined}\n       */\n      content: {\n        type: Object,\n        notify: true,\n      },\n\n      /**\n       * When true the overlay has backdrop on top of content when opened.\n       * @type {boolean}\n       */\n      withBackdrop: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Object with properties that is passed to `renderer` function\n       */\n      model: Object,\n\n      /**\n       * When true the overlay won't disable the main content, showing\n       * it doesn\u2019t change the functionality of the user interface.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_modelessChanged',\n      },\n\n      /**\n       * When set to true, the overlay is hidden. This also closes the overlay\n       * immediately in case there is a closing animation in progress.\n       * @type {boolean}\n       */\n      hidden: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_hiddenChanged',\n      },\n\n      /**\n       * When true move focus to the first focusable element in the overlay,\n       * or to the overlay if there are no focusable elements.\n       * @type {boolean}\n       */\n      focusTrap: {\n        type: Boolean,\n        value: false,\n      },\n\n      /**\n       * Set to true to enable restoring of focus when overlay is closed.\n       * @type {boolean}\n       */\n      restoreFocusOnClose: {\n        type: Boolean,\n        value: false,\n      },\n\n      /**\n       * Set to specify the element which should be focused on overlay close,\n       * if `restoreFocusOnClose` is set to true.\n       * @type {HTMLElement}\n       */\n      restoreFocusNode: {\n        type: HTMLElement,\n      },\n\n      /** @private */\n      _mouseDownInside: {\n        type: Boolean,\n      },\n\n      /** @private */\n      _mouseUpInside: {\n        type: Boolean,\n      },\n\n      /** @private */\n      _instance: {\n        type: Object,\n      },\n\n      /** @private */\n      _originalContentPart: Object,\n\n      /** @private */\n      _contentNodes: Array,\n\n      /** @private */\n      _oldOwner: Element,\n\n      /** @private */\n      _oldModel: Object,\n\n      /** @private */\n      _oldTemplate: Object,\n\n      /** @private */\n      _oldRenderer: Object,\n\n      /** @private */\n      _oldOpened: Boolean,\n    };\n  }\n\n  static get observers() {\n    return ['_templateOrRendererChanged(template, renderer, owner, model, opened)'];\n  }\n\n  constructor() {\n    super();\n    this._boundMouseDownListener = this._mouseDownListener.bind(this);\n    this._boundMouseUpListener = this._mouseUpListener.bind(this);\n    this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n    this._boundKeydownListener = this._keydownListener.bind(this);\n\n    this._observer = new FlattenedNodesObserver(this, (info) => {\n      this._setTemplateFromNodes(info.addedNodes);\n    });\n\n    // Listener for preventing closing of the paper-dialog and all components extending `iron-overlay-behavior`.\n    this._boundIronOverlayCanceledListener = this._ironOverlayCanceled.bind(this);\n\n    /* c8 ignore next 3 */\n    if (isIOS) {\n      this._boundIosResizeListener = () => this._detectIosNavbar();\n    }\n\n    this.__focusTrapController = new FocusTrapController(this);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._observer.flush();\n\n    // Need to add dummy click listeners to this and the backdrop or else\n    // the document click event listener (_outsideClickListener) may never\n    // get invoked on iOS Safari (reproducible in <vaadin-dialog>\n    // and <vaadin-context-menu>).\n    this.addEventListener('click', () => {});\n    this.$.backdrop.addEventListener('click', () => {});\n\n    this.addController(this.__focusTrapController);\n  }\n\n  /** @private */\n  _detectIosNavbar() {\n    /* c8 ignore next 15 */\n    if (!this.opened) {\n      return;\n    }\n\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n\n    const landscape = innerWidth > innerHeight;\n\n    const clientHeight = document.documentElement.clientHeight;\n\n    if (landscape && clientHeight > innerHeight) {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', `${clientHeight - innerHeight}px`);\n    } else {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\n    }\n  }\n\n  /**\n   * @param {!Array<!Element>} nodes\n   * @protected\n   */\n  _setTemplateFromNodes(nodes) {\n    this.template = nodes.filter((node) => node.localName && node.localName === 'template')[0] || this.template;\n  }\n\n  /**\n   * @param {Event=} sourceEvent\n   * @event vaadin-overlay-close\n   * fired before the `vaadin-overlay` will be closed. If canceled the closing of the overlay is canceled as well.\n   */\n  close(sourceEvent) {\n    const evt = new CustomEvent('vaadin-overlay-close', {\n      bubbles: true,\n      cancelable: true,\n      detail: { sourceEvent },\n    });\n    this.dispatchEvent(evt);\n    if (!evt.defaultPrevented) {\n      this.opened = false;\n    }\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      this._detectIosNavbar();\n      window.addEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      window.removeEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the overlay.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (this.renderer) {\n      this.renderer.call(this.owner, this.content, this.owner, this.model);\n    }\n  }\n\n  /** @private */\n  _ironOverlayCanceled(event) {\n    event.preventDefault();\n  }\n\n  /** @private */\n  _mouseDownListener(event) {\n    this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /** @private */\n  _mouseUpListener(event) {\n    this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /**\n   * We need to listen on 'click' / 'tap' event and capture it and close the overlay before\n   * propagating the event to the listener in the button. Otherwise, if the clicked button would call\n   * open(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4\n   *\n   * @event vaadin-overlay-outside-click\n   * fired before the `vaadin-overlay` will be closed on outside click. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _outsideClickListener(event) {\n    if (event.composedPath().includes(this.$.overlay) || this._mouseDownInside || this._mouseUpInside) {\n      this._mouseDownInside = false;\n      this._mouseUpInside = false;\n      return;\n    }\n    if (!this._last) {\n      return;\n    }\n\n    const evt = new CustomEvent('vaadin-overlay-outside-click', {\n      bubbles: true,\n      cancelable: true,\n      detail: { sourceEvent: event },\n    });\n    this.dispatchEvent(evt);\n\n    if (this.opened && !evt.defaultPrevented) {\n      this.close(event);\n    }\n  }\n\n  /**\n   * @event vaadin-overlay-escape-press\n   * fired before the `vaadin-overlay` will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _keydownListener(event) {\n    if (!this._last) {\n      return;\n    }\n\n    // Only close modeless overlay on Esc press when it contains focus\n    if (this.modeless && !event.composedPath().includes(this.$.overlay)) {\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      const evt = new CustomEvent('vaadin-overlay-escape-press', {\n        bubbles: true,\n        cancelable: true,\n        detail: { sourceEvent: event },\n      });\n      this.dispatchEvent(evt);\n\n      if (this.opened && !evt.defaultPrevented) {\n        this.close(event);\n      }\n    }\n  }\n\n  /** @protected */\n  _ensureTemplatized() {\n    this._setTemplateFromNodes(Array.from(this.children));\n  }\n\n  /**\n   * @event vaadin-overlay-open\n   * fired after the `vaadin-overlay` is opened.\n   *\n   * @private\n   */\n  _openedChanged(opened, wasOpened) {\n    if (!this._instance) {\n      this._ensureTemplatized();\n    }\n\n    if (opened) {\n      // Store focused node.\n      this.__restoreFocusNode = this._getActiveElement();\n      this._animatedOpening();\n\n      afterNextRender(this, () => {\n        if (this.focusTrap) {\n          this.__focusTrapController.trapFocus(this.$.overlay);\n        }\n\n        const evt = new CustomEvent('vaadin-overlay-open', { bubbles: true });\n        this.dispatchEvent(evt);\n      });\n\n      document.addEventListener('keydown', this._boundKeydownListener);\n\n      if (!this.modeless) {\n        this._addGlobalListeners();\n      }\n    } else if (wasOpened) {\n      if (this.focusTrap) {\n        this.__focusTrapController.releaseFocus();\n      }\n\n      this._animatedClosing();\n\n      document.removeEventListener('keydown', this._boundKeydownListener);\n\n      if (!this.modeless) {\n        this._removeGlobalListeners();\n      }\n    }\n  }\n\n  /** @private */\n  _hiddenChanged(hidden) {\n    if (hidden && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  _shouldAnimate() {\n    const name = getComputedStyle(this).getPropertyValue('animation-name');\n    const hidden = getComputedStyle(this).getPropertyValue('display') === 'none';\n    return !hidden && name && name !== 'none';\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} callback\n   * @protected\n   */\n  _enqueueAnimation(type, callback) {\n    const handler = `__${type}Handler`;\n    const listener = (event) => {\n      if (event && event.target !== this) {\n        return;\n      }\n      callback();\n      this.removeEventListener('animationend', listener);\n      delete this[handler];\n    };\n    this[handler] = listener;\n    this.addEventListener('animationend', listener);\n  }\n\n  /**\n   * @param {string} type\n   * @protected\n   */\n  _flushAnimation(type) {\n    const handler = `__${type}Handler`;\n    if (typeof this[handler] === 'function') {\n      this[handler]();\n    }\n  }\n\n  /** @protected */\n  _animatedOpening() {\n    if (this.parentNode === document.body && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n    this._attachOverlay();\n    if (!this.modeless) {\n      this._enterModalState();\n    }\n    this.setAttribute('opening', '');\n\n    if (this._shouldAnimate()) {\n      this._enqueueAnimation('opening', () => {\n        this._finishOpening();\n      });\n    } else {\n      this._finishOpening();\n    }\n  }\n\n  /** @protected */\n  _attachOverlay() {\n    this._placeholder = document.createComment('vaadin-overlay-placeholder');\n    this.parentNode.insertBefore(this._placeholder, this);\n    document.body.appendChild(this);\n    this.bringToFront();\n  }\n\n  /** @protected */\n  _finishOpening() {\n    document.addEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n    this.removeAttribute('opening');\n  }\n\n  /** @protected */\n  _finishClosing() {\n    document.removeEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n    this._detachOverlay();\n    this.$.overlay.style.removeProperty('pointer-events');\n    this.removeAttribute('closing');\n  }\n\n  /**\n   * @event vaadin-overlay-closing\n   * Fired when the overlay will be closed.\n   *\n   * @protected\n   */\n  _animatedClosing() {\n    if (this.hasAttribute('opening')) {\n      this._flushAnimation('opening');\n    }\n    if (this._placeholder) {\n      this._exitModalState();\n\n      // Use this.restoreFocusNode if specified, otherwise fallback to the node\n      // which was focused before opening the overlay.\n      const restoreFocusNode = this.restoreFocusNode || this.__restoreFocusNode;\n\n      if (this.restoreFocusOnClose && restoreFocusNode) {\n        // If the activeElement is `<body>` or inside the overlay,\n        // we are allowed to restore the focus. In all the other\n        // cases focus might have been moved elsewhere by another\n        // component or by the user interaction (e.g. click on a\n        // button outside the overlay).\n        const activeElement = this._getActiveElement();\n\n        if (activeElement === document.body || this._deepContains(activeElement)) {\n          // Focusing the restoreFocusNode doesn't always work synchronously on Firefox and Safari\n          // (e.g. combo-box overlay close on outside click).\n          setTimeout(() => restoreFocusNode.focus());\n        }\n        this.__restoreFocusNode = null;\n      }\n\n      this.setAttribute('closing', '');\n      this.dispatchEvent(new CustomEvent('vaadin-overlay-closing'));\n\n      if (this._shouldAnimate()) {\n        this._enqueueAnimation('closing', () => {\n          this._finishClosing();\n        });\n      } else {\n        this._finishClosing();\n      }\n    }\n  }\n\n  /** @protected */\n  _detachOverlay() {\n    this._placeholder.parentNode.insertBefore(this, this._placeholder);\n    this._placeholder.parentNode.removeChild(this._placeholder);\n  }\n\n  /**\n   * Returns all attached overlays in visual stacking order.\n   * @private\n   */\n  static get __attachedInstances() {\n    return Array.from(document.body.children)\n      .filter((el) => el instanceof OverlayElement && !el.hasAttribute('closing'))\n      .sort((a, b) => a.__zIndex - b.__zIndex || 0);\n  }\n\n  /**\n   * Returns true if this is the last one in the opened overlays stack\n   * @return {boolean}\n   * @protected\n   */\n  get _last() {\n    return this === OverlayElement.__attachedInstances.pop();\n  }\n\n  /** @private */\n  _modelessChanged(modeless) {\n    if (!modeless) {\n      if (this.opened) {\n        this._addGlobalListeners();\n        this._enterModalState();\n      }\n    } else {\n      this._removeGlobalListeners();\n      this._exitModalState();\n    }\n  }\n\n  /** @protected */\n  _addGlobalListeners() {\n    document.addEventListener('mousedown', this._boundMouseDownListener);\n    document.addEventListener('mouseup', this._boundMouseUpListener);\n    // Firefox leaks click to document on contextmenu even if prevented\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n    document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @protected */\n  _enterModalState() {\n    if (document.body.style.pointerEvents !== 'none') {\n      // Set body pointer-events to 'none' to disable mouse interactions with\n      // other document nodes.\n      this._previousDocumentPointerEvents = document.body.style.pointerEvents;\n      document.body.style.pointerEvents = 'none';\n    }\n\n    // Disable pointer events in other attached overlays\n    OverlayElement.__attachedInstances.forEach((el) => {\n      if (el !== this) {\n        el.shadowRoot.querySelector('[part=\"overlay\"]').style.pointerEvents = 'none';\n      }\n    });\n  }\n\n  /** @protected */\n  _removeGlobalListeners() {\n    document.removeEventListener('mousedown', this._boundMouseDownListener);\n    document.removeEventListener('mouseup', this._boundMouseUpListener);\n    document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @protected */\n  _exitModalState() {\n    if (this._previousDocumentPointerEvents !== undefined) {\n      // Restore body pointer-events\n      document.body.style.pointerEvents = this._previousDocumentPointerEvents;\n      delete this._previousDocumentPointerEvents;\n    }\n\n    // Restore pointer events in the previous overlay(s)\n    const instances = OverlayElement.__attachedInstances;\n    let el;\n    // Use instances.pop() to ensure the reverse order\n    while ((el = instances.pop())) {\n      if (el === this) {\n        // Skip the current instance\n        continue;\n      }\n      el.shadowRoot.querySelector('[part=\"overlay\"]').style.removeProperty('pointer-events');\n      if (!el.modeless) {\n        // Stop after the last modal\n        break;\n      }\n    }\n  }\n\n  /** @protected */\n  _removeOldContent() {\n    if (!this.content || !this._contentNodes) {\n      return;\n    }\n\n    this._observer.disconnect();\n\n    this._contentNodes.forEach((node) => {\n      if (node.parentNode === this.content) {\n        this.content.removeChild(node);\n      }\n    });\n\n    if (this._originalContentPart) {\n      // Restore the original <div part=\"content\">\n      this.$.content.parentNode.replaceChild(this._originalContentPart, this.$.content);\n      this.$.content = this._originalContentPart;\n      this._originalContentPart = undefined;\n    }\n\n    this._observer.connect();\n\n    this._contentNodes = undefined;\n    this.content = undefined;\n  }\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @protected\n   */\n  _stampOverlayTemplate(template) {\n    this._removeOldContent();\n\n    if (!template._Templatizer) {\n      template._Templatizer = templatize(template, this, {\n        forwardHostProp(prop, value) {\n          if (this._instance) {\n            this._instance.forwardHostProp(prop, value);\n          }\n        },\n      });\n    }\n\n    this._instance = new template._Templatizer({});\n    this._contentNodes = Array.from(this._instance.root.childNodes);\n\n    const templateRoot = template._templateRoot || (template._templateRoot = template.getRootNode());\n\n    if (templateRoot !== document) {\n      if (!this.$.content.shadowRoot) {\n        this.$.content.attachShadow({ mode: 'open' });\n      }\n\n      let scopeCssText = Array.from(templateRoot.querySelectorAll('style')).reduce(\n        (result, style) => result + style.textContent,\n        '',\n      );\n\n      // The overlay root\u2019s :host styles should not apply inside the overlay\n      scopeCssText = scopeCssText.replace(/:host/g, ':host-nomatch');\n\n      if (scopeCssText) {\n        // Append a style to the content shadowRoot\n        const style = document.createElement('style');\n        style.textContent = scopeCssText;\n        this.$.content.shadowRoot.appendChild(style);\n        this._contentNodes.unshift(style);\n      }\n\n      this.$.content.shadowRoot.appendChild(this._instance.root);\n      this.content = this.$.content.shadowRoot;\n    } else {\n      this.appendChild(this._instance.root);\n      this.content = this;\n    }\n  }\n\n  /** @private */\n  _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n    if (template !== oldTemplate) {\n      this.template = undefined;\n    } else if (renderer !== oldRenderer) {\n      this.renderer = undefined;\n    }\n  }\n\n  /** @private */\n  // eslint-disable-next-line max-params\n  _templateOrRendererChanged(template, renderer, owner, model, opened) {\n    if (template && renderer) {\n      this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n      throw new Error('You should only use either a renderer or a template for overlay content');\n    }\n\n    const ownerOrModelChanged = this._oldOwner !== owner || this._oldModel !== model;\n    this._oldModel = model;\n    this._oldOwner = owner;\n\n    const templateChanged = this._oldTemplate !== template;\n    this._oldTemplate = template;\n\n    const rendererChanged = this._oldRenderer !== renderer;\n    this._oldRenderer = renderer;\n\n    const openedChanged = this._oldOpened !== opened;\n    this._oldOpened = opened;\n\n    if (rendererChanged) {\n      this.content = this;\n      this.content.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this.content._$litPart$;\n    }\n\n    if (template && templateChanged) {\n      this._stampOverlayTemplate(template);\n    } else if (renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\n      if (opened) {\n        this.requestContentUpdate();\n      }\n    }\n  }\n\n  /**\n   * @return {!Element}\n   * @protected\n   */\n  _getActiveElement() {\n    // Document.activeElement can be null\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n    let active = document.activeElement || document.body;\n    while (active.shadowRoot && active.shadowRoot.activeElement) {\n      active = active.shadowRoot.activeElement;\n    }\n    return active;\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   * @protected\n   */\n  _deepContains(node) {\n    if (this.contains(node)) {\n      return true;\n    }\n    let n = node;\n    const doc = node.ownerDocument;\n    // Walk from node to `this` or `document`\n    while (n && n !== doc && n !== this) {\n      n = n.parentNode || n.host;\n    }\n    return n === this;\n  }\n\n  /**\n   * Brings the overlay as visually the frontmost one\n   */\n  bringToFront() {\n    let zIndex = '';\n    const frontmost = OverlayElement.__attachedInstances.filter((o) => o !== this).pop();\n    if (frontmost) {\n      const frontmostZIndex = frontmost.__zIndex;\n      zIndex = frontmostZIndex + 1;\n    }\n    this.style.zIndex = zIndex;\n    this.__zIndex = zIndex || parseFloat(getComputedStyle(this).zIndex);\n  }\n}\n\ncustomElements.define(OverlayElement.is, OverlayElement);\nexport { OverlayElement };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiEhB,eAAe,IAAI,SAAS,EAAE,UAAU,eAAe,CAAC;;;ACzExD,eAAe,kBAAkB,SAAS,EAAE,UAAU,sBAAsB,CAAC;;;ACuG7E,IAAM,iBAAN,cAA6B,cAAc,SAAS,gBAAgB,cAAc,CAAC,CAAC,EAAE;AAAA,EACpF,WAAW,WAAW;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyET;AAAA,EAEA,WAAW,KAAK;AACd,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,aAAa;AACtB,WAAO;AAAA,MAIL,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,oBAAoB;AAAA,MACtB;AAAA,MAMA,OAAO;AAAA,MAWP,UAAU;AAAA,MAMV,UAAU;AAAA,QACR,MAAM;AAAA,QACN,QAAQ;AAAA,MACV;AAAA,MAMA,SAAS;AAAA,QACP,MAAM;AAAA,QACN,QAAQ;AAAA,MACV;AAAA,MAMA,cAAc;AAAA,QACZ,MAAM;AAAA,QACN,OAAO;AAAA,QACP,oBAAoB;AAAA,MACtB;AAAA,MAKA,OAAO;AAAA,MAOP,UAAU;AAAA,QACR,MAAM;AAAA,QACN,OAAO;AAAA,QACP,oBAAoB;AAAA,QACpB,UAAU;AAAA,MACZ;AAAA,MAOA,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,oBAAoB;AAAA,QACpB,UAAU;AAAA,MACZ;AAAA,MAOA,WAAW;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MAMA,qBAAqB;AAAA,QACnB,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MAOA,kBAAkB;AAAA,QAChB,MAAM;AAAA,MACR;AAAA,MAGA,kBAAkB;AAAA,QAChB,MAAM;AAAA,MACR;AAAA,MAGA,gBAAgB;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MAGA,WAAW;AAAA,QACT,MAAM;AAAA,MACR;AAAA,MAGA,sBAAsB;AAAA,MAGtB,eAAe;AAAA,MAGf,WAAW;AAAA,MAGX,WAAW;AAAA,MAGX,cAAc;AAAA,MAGd,cAAc;AAAA,MAGd,YAAY;AAAA,IACd;AAAA,EACF;AAAA,EAEA,WAAW,YAAY;AACrB,WAAO,CAAC,sEAAsE;AAAA,EAChF;AAAA,EAEA,cAAc;AACZ,UAAM;AACN,SAAK,0BAA0B,KAAK,mBAAmB,KAAK,IAAI;AAChE,SAAK,wBAAwB,KAAK,iBAAiB,KAAK,IAAI;AAC5D,SAAK,6BAA6B,KAAK,sBAAsB,KAAK,IAAI;AACtE,SAAK,wBAAwB,KAAK,iBAAiB,KAAK,IAAI;AAE5D,SAAK,YAAY,IAAI,uBAAuB,MAAM,CAAC,SAAS;AAC1D,WAAK,sBAAsB,KAAK,UAAU;AAAA,IAC5C,CAAC;AAGD,SAAK,oCAAoC,KAAK,qBAAqB,KAAK,IAAI;AAG5E,QAAI,OAAO;AACT,WAAK,0BAA0B,MAAM,KAAK,iBAAiB;AAAA,IAC7D;AAEA,SAAK,wBAAwB,IAAI,oBAAoB,IAAI;AAAA,EAC3D;AAAA,EAGA,QAAQ;AACN,UAAM,MAAM;AAEZ,SAAK,UAAU,MAAM;AAMrB,SAAK,iBAAiB,SAAS,MAAM;AAAA,IAAC,CAAC;AACvC,SAAK,EAAE,SAAS,iBAAiB,SAAS,MAAM;AAAA,IAAC,CAAC;AAElD,SAAK,cAAc,KAAK,qBAAqB;AAAA,EAC/C;AAAA,EAGA,mBAAmB;AAEjB,QAAI,CAAC,KAAK,QAAQ;AAChB;AAAA,IACF;AAEA,UAAM,cAAc,OAAO;AAC3B,UAAM,aAAa,OAAO;AAE1B,UAAM,YAAY,aAAa;AAE/B,UAAM,eAAe,SAAS,gBAAgB;AAE9C,QAAI,aAAa,eAAe,aAAa;AAC3C,WAAK,MAAM,YAAY,oCAAoC,GAAG,eAAe,eAAe;AAAA,IAC9F,OAAO;AACL,WAAK,MAAM,YAAY,oCAAoC,GAAG;AAAA,IAChE;AAAA,EACF;AAAA,EAMA,sBAAsB,OAAO;AAC3B,SAAK,WAAW,MAAM,OAAO,CAAC,SAAS,KAAK,aAAa,KAAK,cAAc,UAAU,EAAE,MAAM,KAAK;AAAA,EACrG;AAAA,EAOA,MAAM,aAAa;AACjB,UAAM,MAAM,IAAI,YAAY,wBAAwB;AAAA,MAClD,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ,EAAE,YAAY;AAAA,IACxB,CAAC;AACD,SAAK,cAAc,GAAG;AACtB,QAAI,CAAC,IAAI,kBAAkB;AACzB,WAAK,SAAS;AAAA,IAChB;AAAA,EACF;AAAA,EAGA,oBAAoB;AAClB,UAAM,kBAAkB;AAGxB,QAAI,KAAK,yBAAyB;AAChC,WAAK,iBAAiB;AACtB,aAAO,iBAAiB,UAAU,KAAK,uBAAuB;AAAA,IAChE;AAAA,EACF;AAAA,EAGA,uBAAuB;AACrB,UAAM,qBAAqB;AAG3B,QAAI,KAAK,yBAAyB;AAChC,aAAO,oBAAoB,UAAU,KAAK,uBAAuB;AAAA,IACnE;AAAA,EACF;AAAA,EAQA,uBAAuB;AACrB,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,KAAK,KAAK,OAAO,KAAK,SAAS,KAAK,OAAO,KAAK,KAAK;AAAA,IACrE;AAAA,EACF;AAAA,EAGA,qBAAqB,OAAO;AAC1B,UAAM,eAAe;AAAA,EACvB;AAAA,EAGA,mBAAmB,OAAO;AACxB,SAAK,mBAAmB,MAAM,aAAa,EAAE,QAAQ,KAAK,EAAE,OAAO,KAAK;AAAA,EAC1E;AAAA,EAGA,iBAAiB,OAAO;AACtB,SAAK,iBAAiB,MAAM,aAAa,EAAE,QAAQ,KAAK,EAAE,OAAO,KAAK;AAAA,EACxE;AAAA,EAYA,sBAAsB,OAAO;AAC3B,QAAI,MAAM,aAAa,EAAE,SAAS,KAAK,EAAE,OAAO,KAAK,KAAK,oBAAoB,KAAK,gBAAgB;AACjG,WAAK,mBAAmB;AACxB,WAAK,iBAAiB;AACtB;AAAA,IACF;AACA,QAAI,CAAC,KAAK,OAAO;AACf;AAAA,IACF;AAEA,UAAM,MAAM,IAAI,YAAY,gCAAgC;AAAA,MAC1D,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ,EAAE,aAAa,MAAM;AAAA,IAC/B,CAAC;AACD,SAAK,cAAc,GAAG;AAEtB,QAAI,KAAK,UAAU,CAAC,IAAI,kBAAkB;AACxC,WAAK,MAAM,KAAK;AAAA,IAClB;AAAA,EACF;AAAA,EAQA,iBAAiB,OAAO;AACtB,QAAI,CAAC,KAAK,OAAO;AACf;AAAA,IACF;AAGA,QAAI,KAAK,YAAY,CAAC,MAAM,aAAa,EAAE,SAAS,KAAK,EAAE,OAAO,GAAG;AACnE;AAAA,IACF;AAEA,QAAI,MAAM,QAAQ,UAAU;AAC1B,YAAM,MAAM,IAAI,YAAY,+BAA+B;AAAA,QACzD,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ,EAAE,aAAa,MAAM;AAAA,MAC/B,CAAC;AACD,WAAK,cAAc,GAAG;AAEtB,UAAI,KAAK,UAAU,CAAC,IAAI,kBAAkB;AACxC,aAAK,MAAM,KAAK;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AAAA,EAGA,qBAAqB;AACnB,SAAK,sBAAsB,MAAM,KAAK,KAAK,QAAQ,CAAC;AAAA,EACtD;AAAA,EAQA,eAAe,QAAQ,WAAW;AAChC,QAAI,CAAC,KAAK,WAAW;AACnB,WAAK,mBAAmB;AAAA,IAC1B;AAEA,QAAI,QAAQ;AAEV,WAAK,qBAAqB,KAAK,kBAAkB;AACjD,WAAK,iBAAiB;AAEtB,sBAAgB,MAAM,MAAM;AAC1B,YAAI,KAAK,WAAW;AAClB,eAAK,sBAAsB,UAAU,KAAK,EAAE,OAAO;AAAA,QACrD;AAEA,cAAM,MAAM,IAAI,YAAY,uBAAuB,EAAE,SAAS,KAAK,CAAC;AACpE,aAAK,cAAc,GAAG;AAAA,MACxB,CAAC;AAED,eAAS,iBAAiB,WAAW,KAAK,qBAAqB;AAE/D,UAAI,CAAC,KAAK,UAAU;AAClB,aAAK,oBAAoB;AAAA,MAC3B;AAAA,IACF,WAAW,WAAW;AACpB,UAAI,KAAK,WAAW;AAClB,aAAK,sBAAsB,aAAa;AAAA,MAC1C;AAEA,WAAK,iBAAiB;AAEtB,eAAS,oBAAoB,WAAW,KAAK,qBAAqB;AAElE,UAAI,CAAC,KAAK,UAAU;AAClB,aAAK,uBAAuB;AAAA,MAC9B;AAAA,IACF;AAAA,EACF;AAAA,EAGA,eAAe,QAAQ;AACrB,QAAI,UAAU,KAAK,aAAa,SAAS,GAAG;AAC1C,WAAK,gBAAgB,SAAS;AAAA,IAChC;AAAA,EACF;AAAA,EAMA,iBAAiB;AACf,UAAM,OAAO,iBAAiB,IAAI,EAAE,iBAAiB,gBAAgB;AACrE,UAAM,SAAS,iBAAiB,IAAI,EAAE,iBAAiB,SAAS,MAAM;AACtE,WAAO,CAAC,UAAU,QAAQ,SAAS;AAAA,EACrC;AAAA,EAOA,kBAAkB,MAAM,UAAU;AAChC,UAAM,UAAU,KAAK;AACrB,UAAM,WAAW,CAAC,UAAU;AAC1B,UAAI,SAAS,MAAM,WAAW,MAAM;AAClC;AAAA,MACF;AACA,eAAS;AACT,WAAK,oBAAoB,gBAAgB,QAAQ;AACjD,aAAO,KAAK;AAAA,IACd;AACA,SAAK,WAAW;AAChB,SAAK,iBAAiB,gBAAgB,QAAQ;AAAA,EAChD;AAAA,EAMA,gBAAgB,MAAM;AACpB,UAAM,UAAU,KAAK;AACrB,QAAI,OAAO,KAAK,aAAa,YAAY;AACvC,WAAK,SAAS;AAAA,IAChB;AAAA,EACF;AAAA,EAGA,mBAAmB;AACjB,QAAI,KAAK,eAAe,SAAS,QAAQ,KAAK,aAAa,SAAS,GAAG;AACrE,WAAK,gBAAgB,SAAS;AAAA,IAChC;AACA,SAAK,eAAe;AACpB,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,iBAAiB;AAAA,IACxB;AACA,SAAK,aAAa,WAAW,EAAE;AAE/B,QAAI,KAAK,eAAe,GAAG;AACzB,WAAK,kBAAkB,WAAW,MAAM;AACtC,aAAK,eAAe;AAAA,MACtB,CAAC;AAAA,IACH,OAAO;AACL,WAAK,eAAe;AAAA,IACtB;AAAA,EACF;AAAA,EAGA,iBAAiB;AACf,SAAK,eAAe,SAAS,cAAc,4BAA4B;AACvE,SAAK,WAAW,aAAa,KAAK,cAAc,IAAI;AACpD,aAAS,KAAK,YAAY,IAAI;AAC9B,SAAK,aAAa;AAAA,EACpB;AAAA,EAGA,iBAAiB;AACf,aAAS,iBAAiB,yBAAyB,KAAK,iCAAiC;AACzF,SAAK,gBAAgB,SAAS;AAAA,EAChC;AAAA,EAGA,iBAAiB;AACf,aAAS,oBAAoB,yBAAyB,KAAK,iCAAiC;AAC5F,SAAK,eAAe;AACpB,SAAK,EAAE,QAAQ,MAAM,eAAe,gBAAgB;AACpD,SAAK,gBAAgB,SAAS;AAAA,EAChC;AAAA,EAQA,mBAAmB;AACjB,QAAI,KAAK,aAAa,SAAS,GAAG;AAChC,WAAK,gBAAgB,SAAS;AAAA,IAChC;AACA,QAAI,KAAK,cAAc;AACrB,WAAK,gBAAgB;AAIrB,YAAM,mBAAmB,KAAK,oBAAoB,KAAK;AAEvD,UAAI,KAAK,uBAAuB,kBAAkB;AAMhD,cAAM,gBAAgB,KAAK,kBAAkB;AAE7C,YAAI,kBAAkB,SAAS,QAAQ,KAAK,cAAc,aAAa,GAAG;AAGxE,qBAAW,MAAM,iBAAiB,MAAM,CAAC;AAAA,QAC3C;AACA,aAAK,qBAAqB;AAAA,MAC5B;AAEA,WAAK,aAAa,WAAW,EAAE;AAC/B,WAAK,cAAc,IAAI,YAAY,wBAAwB,CAAC;AAE5D,UAAI,KAAK,eAAe,GAAG;AACzB,aAAK,kBAAkB,WAAW,MAAM;AACtC,eAAK,eAAe;AAAA,QACtB,CAAC;AAAA,MACH,OAAO;AACL,aAAK,eAAe;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AAAA,EAGA,iBAAiB;AACf,SAAK,aAAa,WAAW,aAAa,MAAM,KAAK,YAAY;AACjE,SAAK,aAAa,WAAW,YAAY,KAAK,YAAY;AAAA,EAC5D;AAAA,EAMA,WAAW,sBAAsB;AAC/B,WAAO,MAAM,KAAK,SAAS,KAAK,QAAQ,EACrC,OAAO,CAAC,OAAO,cAAc,kBAAkB,CAAC,GAAG,aAAa,SAAS,CAAC,EAC1E,KAAK,CAAC,GAAG,MAAM,EAAE,WAAW,EAAE,YAAY,CAAC;AAAA,EAChD;AAAA,EAOA,IAAI,QAAQ;AACV,WAAO,SAAS,eAAe,oBAAoB,IAAI;AAAA,EACzD;AAAA,EAGA,iBAAiB,UAAU;AACzB,QAAI,CAAC,UAAU;AACb,UAAI,KAAK,QAAQ;AACf,aAAK,oBAAoB;AACzB,aAAK,iBAAiB;AAAA,MACxB;AAAA,IACF,OAAO;AACL,WAAK,uBAAuB;AAC5B,WAAK,gBAAgB;AAAA,IACvB;AAAA,EACF;AAAA,EAGA,sBAAsB;AACpB,aAAS,iBAAiB,aAAa,KAAK,uBAAuB;AACnE,aAAS,iBAAiB,WAAW,KAAK,qBAAqB;AAG/D,aAAS,gBAAgB,iBAAiB,SAAS,KAAK,4BAA4B,IAAI;AAAA,EAC1F;AAAA,EAGA,mBAAmB;AACjB,QAAI,SAAS,KAAK,MAAM,kBAAkB,QAAQ;AAGhD,WAAK,iCAAiC,SAAS,KAAK,MAAM;AAC1D,eAAS,KAAK,MAAM,gBAAgB;AAAA,IACtC;AAGA,mBAAe,oBAAoB,QAAQ,CAAC,OAAO;AACjD,UAAI,OAAO,MAAM;AACf,WAAG,WAAW,cAAc,kBAAkB,EAAE,MAAM,gBAAgB;AAAA,MACxE;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAGA,yBAAyB;AACvB,aAAS,oBAAoB,aAAa,KAAK,uBAAuB;AACtE,aAAS,oBAAoB,WAAW,KAAK,qBAAqB;AAClE,aAAS,gBAAgB,oBAAoB,SAAS,KAAK,4BAA4B,IAAI;AAAA,EAC7F;AAAA,EAGA,kBAAkB;AAChB,QAAI,KAAK,mCAAmC,QAAW;AAErD,eAAS,KAAK,MAAM,gBAAgB,KAAK;AACzC,aAAO,KAAK;AAAA,IACd;AAGA,UAAM,YAAY,eAAe;AACjC,QAAI;AAEJ,WAAQ,KAAK,UAAU,IAAI,GAAI;AAC7B,UAAI,OAAO,MAAM;AAEf;AAAA,MACF;AACA,SAAG,WAAW,cAAc,kBAAkB,EAAE,MAAM,eAAe,gBAAgB;AACrF,UAAI,CAAC,GAAG,UAAU;AAEhB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAGA,oBAAoB;AAClB,QAAI,CAAC,KAAK,WAAW,CAAC,KAAK,eAAe;AACxC;AAAA,IACF;AAEA,SAAK,UAAU,WAAW;AAE1B,SAAK,cAAc,QAAQ,CAAC,SAAS;AACnC,UAAI,KAAK,eAAe,KAAK,SAAS;AACpC,aAAK,QAAQ,YAAY,IAAI;AAAA,MAC/B;AAAA,IACF,CAAC;AAED,QAAI,KAAK,sBAAsB;AAE7B,WAAK,EAAE,QAAQ,WAAW,aAAa,KAAK,sBAAsB,KAAK,EAAE,OAAO;AAChF,WAAK,EAAE,UAAU,KAAK;AACtB,WAAK,uBAAuB;AAAA,IAC9B;AAEA,SAAK,UAAU,QAAQ;AAEvB,SAAK,gBAAgB;AACrB,SAAK,UAAU;AAAA,EACjB;AAAA,EAMA,sBAAsB,UAAU;AAC9B,SAAK,kBAAkB;AAEvB,QAAI,CAAC,SAAS,cAAc;AAC1B,eAAS,eAAe,WAAW,UAAU,MAAM;AAAA,QACjD,gBAAgB,MAAM,OAAO;AAC3B,cAAI,KAAK,WAAW;AAClB,iBAAK,UAAU,gBAAgB,MAAM,KAAK;AAAA,UAC5C;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAEA,SAAK,YAAY,IAAI,SAAS,aAAa,CAAC,CAAC;AAC7C,SAAK,gBAAgB,MAAM,KAAK,KAAK,UAAU,KAAK,UAAU;AAE9D,UAAM,eAAe,SAAS,kBAAkB,SAAS,gBAAgB,SAAS,YAAY;AAE9F,QAAI,iBAAiB,UAAU;AAC7B,UAAI,CAAC,KAAK,EAAE,QAAQ,YAAY;AAC9B,aAAK,EAAE,QAAQ,aAAa,EAAE,MAAM,OAAO,CAAC;AAAA,MAC9C;AAEA,UAAI,eAAe,MAAM,KAAK,aAAa,iBAAiB,OAAO,CAAC,EAAE;AAAA,QACpE,CAAC,QAAQ,UAAU,SAAS,MAAM;AAAA,QAClC;AAAA,MACF;AAGA,qBAAe,aAAa,QAAQ,UAAU,eAAe;AAE7D,UAAI,cAAc;AAEhB,cAAM,QAAQ,SAAS,cAAc,OAAO;AAC5C,cAAM,cAAc;AACpB,aAAK,EAAE,QAAQ,WAAW,YAAY,KAAK;AAC3C,aAAK,cAAc,QAAQ,KAAK;AAAA,MAClC;AAEA,WAAK,EAAE,QAAQ,WAAW,YAAY,KAAK,UAAU,IAAI;AACzD,WAAK,UAAU,KAAK,EAAE,QAAQ;AAAA,IAChC,OAAO;AACL,WAAK,YAAY,KAAK,UAAU,IAAI;AACpC,WAAK,UAAU;AAAA,IACjB;AAAA,EACF;AAAA,EAGA,6BAA6B,UAAU,aAAa,UAAU,aAAa;AACzE,QAAI,aAAa,aAAa;AAC5B,WAAK,WAAW;AAAA,IAClB,WAAW,aAAa,aAAa;AACnC,WAAK,WAAW;AAAA,IAClB;AAAA,EACF;AAAA,EAIA,2BAA2B,UAAU,UAAU,OAAO,OAAO,QAAQ;AACnE,QAAI,YAAY,UAAU;AACxB,WAAK,6BAA6B,UAAU,KAAK,cAAc,UAAU,KAAK,YAAY;AAC1F,YAAM,IAAI,MAAM,yEAAyE;AAAA,IAC3F;AAEA,UAAM,sBAAsB,KAAK,cAAc,SAAS,KAAK,cAAc;AAC3E,SAAK,YAAY;AACjB,SAAK,YAAY;AAEjB,UAAM,kBAAkB,KAAK,iBAAiB;AAC9C,SAAK,eAAe;AAEpB,UAAM,kBAAkB,KAAK,iBAAiB;AAC9C,SAAK,eAAe;AAEpB,UAAM,gBAAgB,KAAK,eAAe;AAC1C,SAAK,aAAa;AAElB,QAAI,iBAAiB;AACnB,WAAK,UAAU;AACf,WAAK,QAAQ,YAAY;AAIzB,aAAO,KAAK,QAAQ;AAAA,IACtB;AAEA,QAAI,YAAY,iBAAiB;AAC/B,WAAK,sBAAsB,QAAQ;AAAA,IACrC,WAAW,aAAa,mBAAmB,iBAAiB,sBAAsB;AAChF,UAAI,QAAQ;AACV,aAAK,qBAAqB;AAAA,MAC5B;AAAA,IACF;AAAA,EACF;AAAA,EAMA,oBAAoB;AAGlB,QAAI,SAAS,SAAS,iBAAiB,SAAS;AAChD,WAAO,OAAO,cAAc,OAAO,WAAW,eAAe;AAC3D,eAAS,OAAO,WAAW;AAAA,IAC7B;AACA,WAAO;AAAA,EACT;AAAA,EAOA,cAAc,MAAM;AAClB,QAAI,KAAK,SAAS,IAAI,GAAG;AACvB,aAAO;AAAA,IACT;AACA,QAAI,IAAI;AACR,UAAM,MAAM,KAAK;AAEjB,WAAO,KAAK,MAAM,OAAO,MAAM,MAAM;AACnC,UAAI,EAAE,cAAc,EAAE;AAAA,IACxB;AACA,WAAO,MAAM;AAAA,EACf;AAAA,EAKA,eAAe;AACb,QAAI,SAAS;AACb,UAAM,YAAY,eAAe,oBAAoB,OAAO,CAAC,MAAM,MAAM,IAAI,EAAE,IAAI;AACnF,QAAI,WAAW;AACb,YAAM,kBAAkB,UAAU;AAClC,eAAS,kBAAkB;AAAA,IAC7B;AACA,SAAK,MAAM,SAAS;AACpB,SAAK,WAAW,UAAU,WAAW,iBAAiB,IAAI,EAAE,MAAM;AAAA,EACpE;AACF;AAEA,eAAe,OAAO,eAAe,IAAI,cAAc;",
  "names": []
}
